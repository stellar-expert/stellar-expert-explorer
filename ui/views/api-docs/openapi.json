{
    "openapi": "3.1.0",
    "info": {
        "title": "StellarExpert API",
        "version": "1.5.0",
        "description": "## Intro\n\n[StellarExpert](https://stellar.expert/) Open APIs are publicly available for developers, free of charge.\nOpen API enpoints do not require authentication and can be used directly from the browser.\n\n### Cross-Origin Resource Sharing\n\nThis API features Cross-Origin Resource Sharing (CORS) implemented in compliance with W3C spec. And that allows cross-domain communication from the browser. All responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\n\n### Rate Limiting and Caching Considerations\n\nThe effective API request rate may be a subject to rate limiting. In such cases the server returns 429 HTTP status code error. To avoid potential problems caused by those limitations it is advised to consider response caching or group queries on the caller side in case of heavy API utilization.",
        "termsOfService": "https://stellar.expert/",
        "contact": {
            "url": "https://stellar.expert/",
            "email": "info@stellar.expert"
        },
        "license": {
            "name": "MIT",
            "url": "https://tldrlegal.com/license/mit-license"
        },
        "x-logo": {
            "url": "https://stellar.expert/img/stellar-expert-blue.svg"
        }
    },
    "servers": [
        {
            "url": "https://api.stellar.expert"
        }
    ],
    "paths": {
        "/explorer/{network}/account/{account}": {
            "get": {
                "operationId": "queryAccountStats",
                "summary": "Retrieve account info",
                "description": "Fetch account information",
                "cost": 10,
                "tags": [
                    "Accounts"
                ],
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    },
                    {
                        "name": "account",
                        "$ref": "#/components/parameters/account"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account information loaded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AccountInfo"
                                    }
                                },
                                "example": [
                                    {
                                        "account": "GDPQNABQDNYXQOFOUVH3XHNC7QTAXJPVU5Q47PSARLEEUWGIJKSP7BZU",
                                        "creator": "GBU4DDQXESGMBUDOLKZJJ56TYKAW5JYU3IG5NS7TBOYI34ZIHM5CXDMF",
                                        "activity": {
                                            "monthly": "very high",
                                            "yearly": "very high"
                                        },
                                        "assets": [
                                            "XLM",
                                            "RLUSD-GCC5UHLP734WF2YH55T46WIQX76QN45SAB4SXS7EA76LJL2CWK7RLUSD-2",
                                            "FOBOS-GAMP3CO26RFCHLPLFL7MSJKP2KXW3DDD4V4WXIZXFL3TM4RGO64IT5CV-2"
                                        ],
                                        "payments": 44715,
                                        "trades": 1721,
                                        "created": 1710889335
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'account'. Invalid account public key.",
                                    "status": 400
                                }]
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Not found. Account was not found on the ledger. Check if you specified account address correctly.",
                                    "status": 404
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/account/{account}/stats-history": {
            "get": {
                "operationId": "queryAccountStatsHistory",
                "summary": "Retrieve statistics history",
                "description": "Fetch account statistics history",
                "cost": 10,
                "tags": [
                    "Accounts"
                ],
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    },
                    {
                        "name": "account",
                        "$ref": "#/components/parameters/account"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account statistics history loaded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "payments": {
                                                "type": "number"
                                            },
                                            "trades": {
                                                "type": "number"
                                            },
                                            "ts": {
                                                "$ref": "#/components/schemas/Timestamp"
                                            }
                                        }
                                    }
                                },
                                "example": [
                                    {
                                        "payments": 21,
                                        "trades": 2,
                                        "ts": 1711670400
                                    },
                                    {
                                        "payments": 23,
                                        "trades": 0,
                                        "ts": 1711756800
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'account'. Invalid account public key.",
                                    "status": 400
                                }]
                            }
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Not found. Account was not found on the ledger. Check if you specified account address correctly.",
                                    "status": 404
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/account/{account}/history/trades": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Account trades history",
                "operationId": "queryAccountTrades",
                "description": "Returns the trades history for a given account",
                "cost": 10,
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    },
                    {
                        "name": "account",
                        "$ref": "#/components/parameters/account"
                    },
                    {
                        "name": "order",
                        "$ref": "#/components/parameters/order"
                    },
                    {
                        "name": "limit",
                        "$ref": "#/components/parameters/limit"
                    },
                    {
                        "name": "cursor",
                        "$ref": "#/components/parameters/cursor"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Trades history fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ListApiResponse"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "_embedded": {
                                                    "type": "object",
                                                    "properties": {
                                                        "records": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/components/schemas/AccountTrade"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/explorer/public/account/GDPQNABQDNYXQOFOUVH3XHNC7QTAXJPVU5Q47PSARLEEUWGIJKSP7BZU/history/trades?skip=0&order=desc&limit=2"
                                        },
                                        "prev": {
                                            "href": "/explorer/public/account/GDPQNABQDNYXQOFOUVH3XHNC7QTAXJPVU5Q47PSARLEEUWGIJKSP7BZU/history/trades?skip=0&order=asc&limit=2&cursor=7489424762284802074"
                                        },
                                        "next": {
                                            "href": "/explorer/public/account/GDPQNABQDNYXQOFOUVH3XHNC7QTAXJPVU5Q47PSARLEEUWGIJKSP7BZU/history/trades?skip=0&order=desc&limit=2&cursor=7489418629071503453"
                                        }
                                    },
                                    "_embedded": {
                                        "records": [
                                            {
                                                "bought_amount": 48888888839027,
                                                "bought_asset": "YUAN-GBLLOQ2J7HUZAXLFRF4E57D43KBBDY667L27YVQQP2XEJWFM3UVRV5YF-1",
                                                "buyer": "GD6HB37PBWRPMXWMM4ROJAOYHADELGWDQHB6KV7GYPPP5RB7IU7DFCMB",
                                                "id": 7489424762284802000,
                                                "offer": 1709701770,
                                                "operation": 242501812106801150,
                                                "price": 223215.01338136618,
                                                "seller": "GDPQNABQDNYXQOFOUVH3XHNC7QTAXJPVU5Q47PSARLEEUWGIJKSP7BZU",
                                                "sold_amount": 219021508,
                                                "sold_asset": "XLM",
                                                "ts": 1743767588,
                                                "paging_token": 7489424762284802000
                                            },
                                            {
                                                "bought_amount": 373,
                                                "bought_asset": "TREAD-GANMKTF7SVYEHZ4CTLRKT2MG2OUJNDEA3JGZGTUTHQZOZSWJHHUF6VLM-2",
                                                "buyer": "GCU7LJ5S6U3YCTSLLZNMRHJBSXVI6O5WPQIJ2ESLYTYIUJ7WMSXNYERD",
                                                "id": 7489418629071503000,
                                                "offer": 1705852714,
                                                "operation": 242500746955546620,
                                                "price": 0.05547293277810827,
                                                "seller": "GDPQNABQDNYXQOFOUVH3XHNC7QTAXJPVU5Q47PSARLEEUWGIJKSP7BZU",
                                                "sold_amount": 6724,
                                                "sold_asset": "XLM",
                                                "ts": 1743766160,
                                                "paging_token": 7489418629071503000
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'account'. Invalid account public key.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'account'. Parameter 'account' is required.",
                                    "status": 400
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/account/{account}/balance/{asset}/history": {
            "get": {
                "operationId": "queryAccountBalanceHistory",
                "summary": "Retrieve account balance history",
                "description": "Fetch balance history of a given token for account address",
                "cost": 10,
                "tags": [
                    "Accounts"
                ],
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    },
                    {
                        "name": "account",
                        "$ref": "#/components/parameters/account"
                    },
                    {
                        "name": "asset",
                        "$ref": "#/components/parameters/asset"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Asset balance history loaded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "type": "number"
                                        }
                                    }
                                },
                                "example": [
                                    [
                                        1743724800,
                                        "78874669664"
                                    ],
                                    [
                                        1743638400,
                                        "81982434906"
                                    ],
                                    [
                                        1743552000,
                                        "75525167674"
                                    ]
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'account'. Invalid account public key.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'asset'. Invalid asset descriptor. Use {code}-{issuer}-{type} format or contract address.",
                                    "status": 400
                                }]
                            }
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Not found. Account was not found on the ledger. Check if you specified account address correctly.",
                                    "status": 404
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/account/{account}/claimable-balances": {
            "get": {
                "operationId": "queryAccountClaimableBalances",
                "summary": "Retrieve account claimable balance",
                "description": "Fetch claimable balance of all tokens that have been transferred to the account address",
                "cost": 10,
                "tags": [
                    "Accounts"
                ],
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    },
                    {
                        "name": "account",
                        "$ref": "#/components/parameters/account"
                    },
                    {
                        "name": "order",
                        "$ref": "#/components/parameters/order"
                    },
                    {
                        "name": "limit",
                        "$ref": "#/components/parameters/limit"
                    },
                    {
                        "name": "cursor",
                        "$ref": "#/components/parameters/cursor"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account claimable balance fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ListApiResponse"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "_embedded": {
                                                    "type": "object",
                                                    "properties": {
                                                        "records": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/components/schemas/AccountClaimableBalance"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/explorer/public/account/GDPQNABQDNYXQOFOUVH3XHNC7QTAXJPVU5Q47PSARLEEUWGIJKSP7BZU/claimable-balances?order=desc&limit=2"
                                        },
                                        "prev": {
                                            "href": "/explorer/public/account/GDPQNABQDNYXQOFOUVH3XHNC7QTAXJPVU5Q47PSARLEEUWGIJKSP7BZU/claimable-balances?order=asc&limit=2&cursor=7489170213444885654"
                                        },
                                        "next": {
                                            "href": "/explorer/public/account/GDPQNABQDNYXQOFOUVH3XHNC7QTAXJPVU5Q47PSARLEEUWGIJKSP7BZU/claimable-balances?order=desc&limit=2&cursor=7488495007869549959"
                                        }
                                    },
                                    "_embedded": {
                                        "records": [
                                            {
                                                "amount": 80000000,
                                                "asset": "BGI-GA4FVJQFHQV5PAYYEYXML7G5JFWAA6TOQS5FH7ADS4Q2QEHKEEA3PCKX-1",
                                                "claimants": [
                                                    {
                                                        "destination": "GDPQNABQDNYXQOFOUVH3XHNC7QTAXJPVU5Q47PSARLEEUWGIJKSP7BZU",
                                                        "predicate": {
                                                            "unconditional": true
                                                        }
                                                    }
                                                ],
                                                "id": "OtGclgYIx8cgq9LlSE8NxeYZBnVMK1D/KOoOhp/bhf0=",
                                                "sponsor": "GBEC3N4Q4BHLN32HLVLFX3CVKIFDKGDJWR3HAFA7TKG36WXP3HVD5BGI",
                                                "value": 341,
                                                "created": 1743708321,
                                                "paging_token": 7489170213444886000
                                            },
                                            {
                                                "amount": 783100,
                                                "asset": "XRPBTC-GB2UFQH3HTB7TDRSF6BBO7JZ732F27WMBXDVPM73CCCDNCSB5SO7RIPL-2",
                                                "claimants": [
                                                    {
                                                        "destination": "GAER53BMAJXS5PSVS4SUWDJ3TRNJ7COUXRYB72HAZQRNRAJK7SXYHHVH",
                                                        "predicate": {
                                                            "unconditional": true
                                                        }
                                                    }
                                                ],
                                                "id": "rlm9hwi7vrLhjxJjOKH4hdU8TwYaWfR7rBmr8Je2nJY=",
                                                "sponsor": "GAER53BMAJXS5PSVS4SUWDJ3TRNJ7COUXRYB72HAZQRNRAJK7SXYHHVH",
                                                "created": 1743551112,
                                                "paging_token": 7488495007869550000
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'account'. Invalid account public key.",
                                    "status": 400
                                }]
                            }
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Not found. Account was not found on the ledger. Check if you specified account address correctly.",
                                    "status": 404
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/account/{account}/value": {
            "get": {
                "operationId": "estimateContractValue",
                "summary": "Retrieve account value",
                "description": "Fetch account value",
                "cost": 10,
                "tags": [
                    "Accounts"
                ],
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    },
                    {
                        "name": "account",
                        "$ref": "#/components/parameters/account"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account value loaded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "account": {
                                            "$ref": "#/components/schemas/AccountAddress"
                                        },
                                        "currency": {
                                            "type": "string"
                                        },
                                        "pool_stakes": {
                                            "type": "array"
                                        },
                                        "total": {
                                            "type": "string"
                                        },
                                        "trustlines": {
                                            "description": "Trustlines established to a contract",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TrustlinesValue"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "account": "GAB6FD5BCBVVQINU5USYV5K4JDAEO6RDL2GZU4K5BILPI6B4FIOF6QWW",
                                    "currency": "USD",
                                    "pool_stakes": [],
                                    "total": "26850644",
                                    "trustlines": [
                                        {
                                            "asset": "XLM",
                                            "balance": "93402431",
                                            "value": 26850644,
                                            "flags": 1
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'account'. Invalid account public key.",
                                    "status": 400
                                }]
                            }
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Not found. Account G.. was not found on the network",
                                    "status": 404
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/asset": {
            "get": {
                "tags": [
                    "Asset Info API"
                ],
                "summary": "List of assets",
                "operationId": "getAllAssets",
                "description": "Returns a list of assets that exist on Stellar network. It support searching by asset code, issuer, home domain, and metadata from associated `stellar.toml` file.\n\nPossible sorting options:\n- `rating` - composite asset rating derived from on-chain stats\n- `created` - asset age\n- `payments` - total number of payments\n- `trades` - total number of trades\n- `trustlines` - number of established trustlines\n- `volume` - overall trading volume\n- `volume7d` - weekly trading volume",
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    },
                    {
                        "name": "search",
                        "$ref": "#/components/parameters/search",
                        "minLength": 0,
                        "required": false,
                        "example": "dollar"
                    },
                    {
                        "name": "sort",
                        "description": "Results sorting parameter",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "rating",
                                "created",
                                "payments",
                                "trades",
                                "trustlines",
                                "volume",
                                "volume7d"
                            ],
                            "default": "rating"
                        },
                        "required": false
                    },
                    {
                        "name": "order",
                        "description": "Results sorting order",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/ResultsSortOrder"
                        }
                    },
                    {
                        "name": "limit",
                        "description": "Results data page size",
                        "in": "query",
                        "maximum": 50,
                        "schema": {
                            "$ref": "#/components/schemas/ResultsLimit"
                        }
                    },
                    {
                        "name": "cursor",
                        "description": "A position from which to continue search (refers to the `paging_token` value from a results set)",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Asset list fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ListApiResponse"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "_embedded": {
                                                    "type": "object",
                                                    "properties": {
                                                        "records": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/components/schemas/AssetInfo"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/explorer/public/asset?order=desc&limit=2"
                                        },
                                        "prev": {
                                            "href": "/explorer/public/asset?order=asc&limit=2&cursor=1"
                                        },
                                        "next": {
                                            "href": "/explorer/public/asset?order=desc&limit=2&cursor=2"
                                        }
                                    },
                                    "_embedded": {
                                        "records": [
                                            {
                                                "asset": "yXLM-GARDNV3Q7YGT4AKSDF25LT32YSCCW4EV22Y2TV3I2PU2MMXJTEDL5T55-1",
                                                "traded_amount": 102588436626011460,
                                                "payments_amount": 12492248403205108,
                                                "created": 1615892870,
                                                "supply": 1669015135707318,
                                                "trustlines": {
                                                    "total": 32266,
                                                    "authorized": 32266,
                                                    "funded": 19335
                                                },
                                                "trades": 13363178,
                                                "payments": 13405766,
                                                "domain": "ultrastellar.com",
                                                "tomlInfo": {
                                                    "orgName": "Ultra Stellar LLC dba Ultra Stellar",
                                                    "orgLogo": "https://ultrastellar.com/static/images/org_logo.png",
                                                    "image": "https://ultrastellar.com/static/images/icons/yXLM.png",
                                                    "status": "live",
                                                    "anchorAssetType": "crypto",
                                                    "anchorAsset": "XLM"
                                                },
                                                "rating": {
                                                    "age": 7,
                                                    "trades": 10,
                                                    "payments": 9,
                                                    "trustlines": 7,
                                                    "volume7d": 10,
                                                    "interop": 10,
                                                    "liquidity": 10,
                                                    "average": 9
                                                },
                                                "paging_token": 1
                                            },
                                            {
                                                "asset": "USDC-GA5ZSEJYB37JRC5AVCIA5MOP4RHTM335X2KGX3IHOJAPP5RE34K4KZVN-1",
                                                "traded_amount": 18134208266562304,
                                                "payments_amount": 24664489154530540,
                                                "created": 1611089770,
                                                "supply": 1800404216565311,
                                                "trustlines": {
                                                    "total": 138801,
                                                    "authorized": 138801,
                                                    "funded": 27503
                                                },
                                                "trades": 20324688,
                                                "payments": 2862354,
                                                "domain": "centre.io",
                                                "tomlInfo": {
                                                    "orgName": "Centre Consortium LLC dba Centre Consortium",
                                                    "orgLogo": "https://www.centre.io/images/logo-icon.png",
                                                    "name": "USD Coin",
                                                    "image": "https://www.centre.io/images/usdc/usdc-icon-86074d9d49.png",
                                                    "anchorAssetType": "fiat",
                                                    "anchorAsset": "USD"
                                                },
                                                "rating": {
                                                    "age": 7,
                                                    "trades": 10,
                                                    "payments": 8,
                                                    "trustlines": 8,
                                                    "volume7d": 10,
                                                    "interop": 4,
                                                    "liquidity": 10,
                                                    "average": 8.1
                                                },
                                                "paging_token": 2
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/asset-stats/overall": {
            "get": {
                "tags": [
                    "Asset Info API"
                ],
                "summary": "Assets overall statistics",
                "operationId": "queryAssetsOverallStats",
                "description": "Returns overall statistics for all assets",
                "cost": 10,
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Assets overall statistics fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "payments": {
                                            "description": "Number of payments",
                                            "type": "string",
                                            "example": "2861423432"
                                        },
                                        "total_assets": {
                                            "description": "Total amount of existing assets",
                                            "type": "number",
                                            "example": 188547
                                        },
                                        "trades": {
                                            "description": "Number of trades",
                                            "type": "string",
                                            "example": "4767944173"
                                        },
                                        "volume": {
                                            "description": "Total value",
                                            "type": "number",
                                            "example": 280466938707819740
                                        }
                                    }
                                },
                                "example": {
                                    "total_assets": 204459,
                                    "payments": "3136626722",
                                    "trades": "4910333733",
                                    "volume": 297254233186919900
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/asset/meta": {
            "get": {
                "tags": [
                    "Asset Info API"
                ],
                "summary": "Assets metadata",
                "operationId": "queryAssetsMeta",
                "description": "Returns overall statistics for all assets",
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    },
                    {
                        "name": "asset-array",
                        "$ref": "#/components/parameters/asset-array"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Assets meta fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ListApiResponse"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "_embedded": {
                                                    "type": "object",
                                                    "properties": {
                                                        "records": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/components/schemas/AssetMeta"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/explorer/public/meta?asset[]=yXLM-GARDNV3Q7YGT4AKSDF25LT32YSCCW4EV22Y2TV3I2PU2MMXJTEDL5T55-1asset[]=USDC-GA5ZSEJYB37JRC5AVCIA5MOP4RHTM335X2KGX3IHOJAPP5RE34K4KZVN-1&sort=name&order=asc"
                                        }
                                    },
                                    "_embedded": {
                                        "records": [
                                            {
                                                "asset": "yXLM-GARDNV3Q7YGT4AKSDF25LT32YSCCW4EV22Y2TV3I2PU2MMXJTEDL5T55-1",
                                                "domain": "ultrastellar.com",
                                                "name": "yXLM-GARDNV3Q7YGT4AKSDF25LT32YSCCW4EV22Y2TV3I2PU2MMXJTEDL5T55-1",
                                                "toml_info": {
                                                    "orgName": "Ultra Stellar LLC dba Ultra Stellar",
                                                    "orgLogo": "https://ultrastellar.com/static/images/org_logo.png",
                                                    "image": "https://ultrastellar.com/static/images/icons/yXLM.png",
                                                    "issuer": "GARDNV3Q7YGT4AKSDF25LT32YSCCW4EV22Y2TV3I2PU2MMXJTEDL5T55",
                                                    "status": "live",
                                                    "anchorAssetType": "crypto",
                                                    "anchorAsset": "XLM"
                                                }
                                            },
                                            {
                                                "asset": "USDC-GA5ZSEJYB37JRC5AVCIA5MOP4RHTM335X2KGX3IHOJAPP5RE34K4KZVN-1",
                                                "domain": "centre.io",
                                                "name": "USDC-GA5ZSEJYB37JRC5AVCIA5MOP4RHTM335X2KGX3IHOJAPP5RE34K4KZVN-1",
                                                "toml_info": {
                                                    "orgName": "Centre Consortium LLC dba Centre Consortium",
                                                    "orgLogo": "https://www.centre.io/images/logo-icon.png",
                                                    "name": "USD Coin",
                                                    "image": "https://www.centre.io/images/usdc/usdc-icon-86074d9d49.png",
                                                    "anchorAssetType": "fiat",
                                                    "anchorAsset": "USD"
                                                }
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter asset'. Expected an array of assets to fetch.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid asset name.",
                                    "status": 400
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/asset/price": {
            "get": {
                "tags": [
                    "Asset Info API"
                ],
                "summary": "Asset prices",
                "operationId": "queryAssetPrices",
                "description": "Returns prices for all assets",
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    },
                    {
                        "name": "asset-array",
                        "$ref": "#/components/parameters/asset-array"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Asset prices fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ListApiResponse"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "_embedded": {
                                                    "type": "object",
                                                    "properties": {
                                                        "records": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "asset": {
                                                                        "$ref": "#/components/schemas/Asset"
                                                                    },
                                                                    "price": {
                                                                        "type": "number"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/explorer/public/asset/price?asset[]=USDC-GA5ZSEJYB37JRC5AVCIA5MOP4RHTM335X2KGX3IHOJAPP5RE34K4KZVN-1&asset[]=XLM&sort=asset&order=asc"
                                        }
                                    },
                                    "_embedded": {
                                        "records": [
                                            {
                                                "asset": "USDC-GA5ZSEJYB37JRC5AVCIA5MOP4RHTM335X2KGX3IHOJAPP5RE34K4KZVN-1",
                                                "price": 1.000009797257811
                                            },
                                            {
                                                "asset": "USDC-GA5ZSEJYB37JRC5AVCIA5MOP4RHTM335X2KGX3IHOJAPP5RE34K4KZVN-1",
                                                "price": 0.2714538160422819
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'asset'. Array of asset identifiers expected.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'asset'. Invalid asset descriptor. Expected format: {code}-{issuer}.",
                                    "status": 400
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/asset/{asset}": {
            "get": {
                "tags": [
                    "Asset Info API"
                ],
                "summary": "Asset statistics",
                "operationId": "queryAssetStats",
                "description": "Returns statistics for a given asset",
                "cost": 10,
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    },
                    {
                        "name": "asset",
                        "$ref": "#/components/parameters/asset"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Asset statistics fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AssetStat"
                                },
                                "example": {
                                    "asset": "USDC-GA5ZSEJYB37JRC5AVCIA5MOP4RHTM335X2KGX3IHOJAPP5RE34K4KZVN-1",
                                    "contract": "CCW67TSZV3SSS2HXMBQ5JFGCKJNXKZM7UQUWUZPUTHXSTZLEO7SJMI75",
                                    "created": 1611089770,
                                    "home_domain": "centre.io",
                                    "payments": 43983900,
                                    "payments_amount": 195296303987316320,
                                    "price": 1.0000698419073348,
                                    "price7d": [
                                        [
                                            1742774400,
                                            0.9999556923344947
                                        ],
                                        [
                                            1742860800,
                                            1.0000723416666668
                                        ],
                                        [
                                            1742947200,
                                            1.0000137059027778
                                        ],
                                        [
                                            1743033600,
                                            1.0000945631944445
                                        ],
                                        [
                                            1743120000,
                                            1.0000377180555555
                                        ],
                                        [
                                            1743206400,
                                            1.0001392319444444
                                        ],
                                        [
                                            1743292800,
                                            1.000077707986111
                                        ],
                                        [
                                            1743379200,
                                            1.0000432092105263
                                        ]
                                    ],
                                    "rating": {
                                        "age": 7,
                                        "trades": 10,
                                        "payments": 8,
                                        "trustlines": 8,
                                        "volume7d": 10,
                                        "interop": 4,
                                        "liquidity": 10,
                                        "average": 8.1
                                    },
                                    "supply": 2761733155982229,
                                    "tomlInfo": {
                                        "orgName": "Centre Consortium LLC dba Centre Consortium",
                                        "orgLogo": "https://www.centre.io/images/logo-icon.png",
                                        "name": "USD Coin",
                                        "image": "https://www.centre.io/images/usdc/usdc-icon-86074d9d49.png",
                                        "anchorAssetType": "fiat",
                                        "anchorAsset": "USD"
                                    },
                                    "traded_amount": 56098854530614620,
                                    "trades": 93308432,
                                    "trustlines": {
                                        "authorized": 1367864,
                                        "funded": 442934,
                                        "total": 1367864
                                    },
                                    "volume": 56105420522194456,
                                    "volume7d": 571077112903427
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'asset'. Invalid asset descriptor. Expected format: {code}-{issuer}.",
                                    "status": 400
                                }]
                            }
                        }
                    },
                    "404": {
                        "description": "Asset not found",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Not found. Asset statistics were not found on the ledger. Check if you specified the asset correctly.",
                                    "status": 404
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/asset/{asset}/stats-history": {
            "get": {
                "tags": [
                    "Asset Info API"
                ],
                "summary": "Asset statistics history",
                "operationId": "queryAssetStatsHistory",
                "description": "Returns the statistics history for a given asset",
                "cost": 10,
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    },
                    {
                        "name": "asset",
                        "$ref": "#/components/parameters/asset"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Asset statistics history fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "payments": {
                                                "description": "Total number of payments",
                                                "type": "number"
                                            },
                                            "payments_amount": {
                                                "description": "Total payments amount (in stroops)",
                                                "type": "number"
                                            },
                                            "supply": {
                                                "description": "Total issued asset supply",
                                                "type": "number"
                                            },
                                            "trustlines": {
                                                "description": "Trustlines established to an asset",
                                                "type": "array",
                                                "items": {
                                                    "type": "number"
                                                }
                                            },
                                            "ts": {
                                                "description": "Validation timestamp",
                                                "$ref": "#/components/schemas/Timestamp"
                                            },
                                            "volume": {
                                                "description": "Total issued asset supply",
                                                "type": "number"
                                            }
                                        }
                                    }
                                },
                                "example": [
                                    {
                                        "payments": 338,
                                        "payments_amount": 99397552406419,
                                        "supply": 30968802900000,
                                        "trustlines": [
                                            335,
                                            335,
                                            116
                                        ],
                                        "ts": 1612224000,
                                        "volume": 0
                                    },
                                    {
                                        "payments": 287,
                                        "payments_amount": 361224119948188,
                                        "supply": 55939683900000,
                                        "trustlines": [
                                            447,
                                            447,
                                            156
                                        ],
                                        "ts": 1612310400,
                                        "volume": 0
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'asset'. Invalid asset descriptor. Use {code}-{issuer}-{type} format or contract address.",
                                    "status": 400
                                }]
                            }
                        }
                    },
                    "404": {
                        "description": "Asset not found",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Not found. Asset statistics were not found on the ledger. Check if you specified the asset correctly.",
                                    "status": 404
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/asset/{asset}/rating": {
            "get": {
                "tags": [
                    "Asset Info API"
                ],
                "summary": "Asset rating",
                "operationId": "getAssetRating",
                "description": "To solve the problem of assets ranking on StellarExpert, we designed a system of technical indicators based purely on the ledger activity, including\n\n  - asset age (time elapsed sisnce the first payment)\n  - established trustlines\n  - total number of payments\n  - total number of trades\n  - weekly trading volume\n  - market liquidity (based on the relative slippage of {ASSET}/XLM market)\n  - asset interoperability (based on additional asset metadata and supported SEP standards)\n\nAll indicators are calculated on the logarithmic scale to normalize distribution for assets with high trading/transfer activity. The compound rating calculated as the average of all seven indicators can be used to roughly estimate the popularity of any Stellar asset purely from the technical point of view.",
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    },
                    {
                        "name": "asset",
                        "$ref": "#/components/parameters/asset"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Asset rating fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AssetRating"
                                },
                                "example": {
                                    "asset": "ABC-GAKP6AHQM4JDI55SK2FGEPLOZU7BTEODS3Y5QNT3VMQQIU3WM99T0L4C-1",
                                    "rating": {
                                        "age": 9,
                                        "trades": 6,
                                        "payments": 10,
                                        "trustlines": 10,
                                        "volume7d": 10,
                                        "interop": 3,
                                        "liquidty": 8,
                                        "average": 8
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'asset'. Invalid asset descriptor. Use {code}-{issuer}-{type} format or contract address.",
                                    "status": 400
                                }]
                            }
                        }
                    },
                    "404": {
                        "description": "Asset not found",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Not found. Asset wasn't found. Check if you specified the asset correctly.",
                                    "status": 404
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/asset/{asset}/history/trades": {
            "get": {
                "tags": [
                    "Asset Info API"
                ],
                "summary": "Asset trades history",
                "operationId": "queryAssetTrades",
                "description": "Returns the trades history for a given asset",
                "cost": 10,
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    },
                    {
                        "name": "asset",
                        "$ref": "#/components/parameters/asset"
                    },
                    {
                        "name": "order",
                        "$ref": "#/components/parameters/order"
                    },
                    {
                        "name": "limit",
                        "$ref": "#/components/parameters/limit"
                    },
                    {
                        "name": "cursor",
                        "$ref": "#/components/parameters/cursor"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Trades history fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ListApiResponse"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "_embedded": {
                                                    "type": "object",
                                                    "properties": {
                                                        "records": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/components/schemas/AssetTrade"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/explorer/public/asset/USDC-GA5ZSEJYB37JRC5AVCIA5MOP4RHTM335X2KGX3IHOJAPP5RE34K4KZVN-1/history/trades?skip=0&order=desc&limit=2"
                                        },
                                        "prev": {
                                            "href": "/explorer/public/asset/USDC-GA5ZSEJYB37JRC5AVCIA5MOP4RHTM335X2KGX3IHOJAPP5RE34K4KZVN-1/history/trades?skip=0&order=asc&limit=2&cursor=7488055320552407068"
                                        },
                                        "next": {
                                            "href": "/explorer/public/asset/USDC-GA5ZSEJYB37JRC5AVCIA5MOP4RHTM335X2KGX3IHOJAPP5RE34K4KZVN-1/history/trades?skip=0&order=desc&limit=2&cursor=7488055320552407067"
                                        }
                                    },
                                    "_embedded": {
                                        "records": [
                                            {
                                                "bought_amount": 99969,
                                                "bought_asset": "USTRY-GCRYUGD5NVARGXT56XEZI5CIFCQETYHAPQQTHO2O3IQZTHDH4LATMYWC-2",
                                                "buyer": "GB37DH4CM64RFUJ4LVNGTECDITMYELOBFUW7CR36644JZMFYZA3UBHQW",
                                                "id": 7488055320552407000,
                                                "offer": 1710096411,
                                                "operation": 242262801471918080,
                                                "price": 1.0258491534120062,
                                                "seller": "GBMMYPWILFTPY5GCZ5Z63DP6Q72SUKB46E3VORXUDN2WI267O43LKF6O",
                                                "sold_amount": 97450,
                                                "sold_asset": "USTRY-GCRYUGD5NVARGXT56XEZI5CIFCQETYHAPQQTHO2O3IQZTHDH4LATMYWC-2",
                                                "ts": 1743448740,
                                                "paging_token": 7488055320552407000
                                            },
                                            {
                                                "bought_amount": 97450,
                                                "bought_asset": "USDC-GA5ZSEJYB37JRC5AVCIA5MOP4RHTM335X2KGX3IHOJAPP5RE34K4KZVN-1",
                                                "buyer": "GB37DH4CM64RFUJ4LVNGTECDITMYELOBFUW7CR36644JZMFYZA3UBHQW",
                                                "id": 7488055320552407000,
                                                "offer": 1715374099,
                                                "operation": 242262801471918080,
                                                "price": 0.9745,
                                                "seller": "GDJSH2NU2WF6J4P5DL4522DUCABWSTZOKFQ7BHBCFYQ3QKC6FRYWP6OL",
                                                "sold_amount": 100000,
                                                "sold_asset": "USDC-GA5ZSEJYB37JRC5AVCIA5MOP4RHTM335X2KGX3IHOJAPP5RE34K4KZVN-1",
                                                "ts": 1743448740,
                                                "paging_token": 7488055320552407000
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'asset'. Parameter 'asset' is required.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'asset'. Invalid asset descriptor. Use {code}-{issuer}-{type} format or contract address.",
                                    "status": 400
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/asset/{asset}/holders": {
            "get": {
                "tags": [
                    "Asset Info API"
                ],
                "summary": "Asset holders list",
                "operationId": "getAssetHolders",
                "description": "Returns a list of all accounts holding non-zero amount of the given asset sorted by the balance size. Accounts with an established trustline but with zero balance excluded from the results set.\nThis API endpoint follows Stellar Horizon API response format convention. A response result contains records and navigation links.",
                "cost": 10,
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    },
                    {
                        "name": "asset",
                        "$ref": "#/components/parameters/asset"
                    },
                    {
                        "name": "order",
                        "$ref": "#/components/parameters/order"
                    },
                    {
                        "name": "limit",
                        "$ref": "#/components/parameters/limit"
                    },
                    {
                        "name": "cursor",
                        "$ref": "#/components/parameters/cursor"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Asset holders fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ListApiResponse"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "_embedded": {
                                                    "type": "object",
                                                    "properties": {
                                                        "records": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/components/schemas/AssetHolder"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/explorer/public/asset/EURT-GAP5LETOV6YIE62YAM56STDANPRDO7ZFDBGSNHJQIYGGKSMOZAHOOS2S/holders?order=desc&limit=2"
                                        },
                                        "prev": {
                                            "href": "/explorer/public/asset/EURT-GAP5LETOV6YIE62YAM56STDANPRDO7ZFDBGSNHJQIYGGKSMOZAHOOS2S/holders?order=asc&limit=2&cursor=AAAFOSpHRlQAeBsb"
                                        },
                                        "next": {
                                            "href": "/explorer/public/asset/EURT-GAP5LETOV6YIE62YAM56STDANPRDO7ZFDBGSNHJQIYGGKSMOZAHOOS2S/holders?order=desc&limit=2&cursor=AAACXn0v0QUAsZIb"
                                        }
                                    },
                                    "_embedded": {
                                        "records": [
                                            {
                                                "account": "GCWGHBQLVZ6QXV7OLHBCFHNPWOCSWGRZ7DTW44BN4IQ7QYVRX3JYPJ7E",
                                                "balance": "5965453988886",
                                                "paging_token": "AAAFOSpHRlQAeBsb"
                                            },
                                            {
                                                "account": "GAFBGZANI7JRXABPEERQGBTFS3AG67M4ZQTMT2VIMWZ6BY4K64QK3D3U",
                                                "balance": "2604850467077",
                                                "paging_token": "AAACXn0v0QUAsZIb"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'asset'. Invalid asset descriptor. Use {code}-{issuer}-{type} format or contract address.",
                                    "status": 400
                                }]
                            }
                        }
                    },
                    "404": {
                        "description": "Asset not found",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Not found.",
                                    "status": 404
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/asset/{asset}/distribution": {
            "get": {
                "tags": [
                    "Asset Info API"
                ],
                "summary": "Asset distribution statistics",
                "operationId": "queryAssetDistribution",
                "description": "Returns the number of accounts that own a given asset within a specified range",
                "cost": 10,
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    },
                    {
                        "name": "asset",
                        "$ref": "#/components/parameters/asset"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Asset distribution fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "range": {
                                                "type": "string"
                                            },
                                            "holders": {
                                                "type": "number"
                                            }
                                        }
                                    }
                                },
                                "example": [
                                    {
                                        "range": "<0.001",
                                        "holders": 54546
                                    },
                                    {
                                        "range": "0.001-0.1",
                                        "holders": 90489
                                    },
                                    {
                                        "range": "0.1-10",
                                        "holders": 211076
                                    },
                                    {
                                        "range": "10-1K",
                                        "holders": 79041
                                    },
                                    {
                                        "range": "1K-100K",
                                        "holders": 7704
                                    },
                                    {
                                        "range": "100K-10M",
                                        "holders": 90
                                    },
                                    {
                                        "range": "10M-1B",
                                        "holders": 2
                                    },
                                    {
                                        "range": "1B-100B",
                                        "holders": 0
                                    },
                                    {
                                        "range": ">100B",
                                        "holders": 0
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'asset'. Invalid asset descriptor. Use {code}-{issuer}-{type} format or contract address.",
                                    "status": 400
                                }]
                            }
                        }
                    },
                    "404": {
                        "description": "Asset not found",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Not found.",
                                    "status": 404
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/asset/{asset}/position/{account}": {
            "get": {
                "tags": [
                    "Asset Info API"
                ],
                "summary": "Asset holder rank",
                "operationId": "getAssetHolderPosition",
                "description": "Retrieves a relative account balance position among all accounts holding a particular asset.",
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    },
                    {
                        "name": "asset",
                        "$ref": "#/components/parameters/asset"
                    },
                    {
                        "name": "account",
                        "$ref": "#/components/parameters/account"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Asset holder rank info fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "account": {
                                            "$ref": "#/components/schemas/AccountAddress",
                                            "description": "Account address to check"
                                        },
                                        "asset": {
                                            "$ref": "#/components/schemas/Asset",
                                            "description": "Asset used for rating calculation"
                                        },
                                        "balance": {
                                            "type": "string",
                                            "description": "Asset balance owned by the account"
                                        },
                                        "position": {
                                            "type": "integer",
                                            "description": "Position among all accounts holding a particular asset"
                                        },
                                        "total": {
                                            "type": "integer",
                                            "description": "Total number of accounts with non-zero balance"
                                        }
                                    }
                                },
                                "example": {
                                    "account": "GDKIJJIKXLOM2NRMPNQZUUYK24ZPVFC6426GZAEP3KUK6KEJLACCWNMX",
                                    "asset": "XLM",
                                    "balance": "39065991792893022",
                                    "position": 3,
                                    "total": 7159959
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'account'. Invalid account public key.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'asset'. Invalid asset descriptor. Use {code}-{issuer}-{type} format or contract address.",
                                    "status": 400
                                }]
                            }
                        }
                    },
                    "404": {
                        "description": "Trustline not found",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Not found. Trustline for account to asset not found",
                                    "status": 404
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/asset/{asset}/trading-pairs": {
            "get": {
                "tags": [
                    "Asset Info API"
                ],
                "summary": "Asset trading pairs",
                "operationId": "queryAssetTradingPairs",
                "description": "Returns TOP10 trading pairs for a given asset",
                "cost": 10,
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    },
                    {
                        "name": "asset",
                        "$ref": "#/components/parameters/asset"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Asset trading pairs fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Asset"
                                    }
                                },
                                "example": [
                                    "USDCAllow-GDIEKKIQWMIZ4LD3RP3ABPN7X5KEAEWYMR634BRHB7EULIMEVREWLF3G-2",
                                    "XLM",
                                    "USDx-GAVH5ZWACAY2PHPUG4FL3LHHJIYIHOFPSIUGM2KHK25CJWXHAV6QKDMN-1",
                                    "EURC-GDHU6WRG4IEQXM5NZ4BMPKOXHW76MZM4Y2IEMFDVXBSDP6SJY4ITNPP2-1",
                                    "BTC-GDPJALI4AZKUU2W426U5WKMAT6CN3AJRPIIRYR2YM54TL2GDWO5O2MZM-1",
                                    "yUSDC-GDGTVWSM4MGS4T7Z6W4RPWOCHE2I6RDFCIFZGS3DOA63LWQTRNZNTTFF-2",
                                    "yXLM-GARDNV3Q7YGT4AKSDF25LT32YSCCW4EV22Y2TV3I2PU2MMXJTEDL5T55-1",
                                    "SHX-GDSTRSHXHGJ7ZIVRBXEYE5Q74XUVCUSEKEBR7UCHEUUEK72N7I7KJ6JH-1",
                                    "AQUA-GBNZILSTVQZ4R7IKQDGHYGY2QXL5QOFJYQMXPKWRRM5PAV7Y4M67AQUA-1",
                                    "VELO-GDM4RQUQQUVSKQA7S6EM7XBZP3FCGH4Q7CL6TABQ7B2BEJ5ERARM2M5M-1"
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'asset'. Invalid asset descriptor. Use {code}-{issuer}-{type} format or contract address.",
                                    "status": 400
                                }]
                            }
                        }
                    },
                    "404": {
                        "description": "Asset trading pairs not found",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Not found. Unknown asset.",
                                    "status": 404
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/asset/{asset}/supply": {
            "get": {
                "tags": [
                    "Asset Info API"
                ],
                "summary": "Asset supply",
                "operationId": "getAssetSupply",
                "description": "Asset supply endpoint returns the total issued supply for an asset. It is handy for displaying the total number of tokens on the website or providing relevant information to third-party platforms. For example, aggregators often require an API endpoint to track the asset supply.",
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    },
                    {
                        "name": "asset",
                        "$ref": "#/components/parameters/asset"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Asset supply fetched",
                        "content": {
                            "text/plain; charset=utf-8": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "1203229.6298700"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'asset'. Invalid asset descriptor. Use {code}-{issuer}-{type} format or contract address.",
                                    "status": 400
                                }]
                            }
                        }
                    },
                    "404": {
                        "description": "Asset supply not found",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Not found. Asset supply was not found on the ledger. Check if you specified the asset correctly.",
                                    "status": 404
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/asset/{asset}/candles": {
            "get": {
                "tags": [
                    "Asset Info API"
                ],
                "summary": "Aggregate asset candles data",
                "operationId": "aggregateAssetPriceCandlesData",
                "description": "Returns aggregated data [TIMESTAMP, OPEN, LOW, HIGH, CLOSE, QUOTE_VOLUME, BASE_VOLUME, TRADES_COUNT]",
                "cost": 10,
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    },
                    {
                        "name": "asset",
                        "$ref": "#/components/parameters/asset"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Asset candles data fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "type": "number"
                                        }
                                    }
                                },
                                "example": [
                                    [
                                        1739707200,
                                        0.001067604,
                                        0.001178924,
                                        0.001010189,
                                        0.00105347,
                                        442797662772048,
                                        485791243340,
                                        5072
                                    ],
                                    [
                                        1739750400,
                                        0.00105347,
                                        0.001077631,
                                        0.001028573,
                                        0.001058023,
                                        387075765064175,
                                        409696941359,
                                        6110
                                    ],
                                    [
                                        1739793600,
                                        0.001058023,
                                        0.001089861,
                                        0.001020643,
                                        0.001046136,
                                        301514461524232,
                                        318738121264,
                                        5591
                                    ]
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'asset'. Invalid asset descriptor. Use {code}-{issuer}-{type} format or contract address.",
                                    "status": 400
                                }]
                            }
                        }
                    },
                    "404": {
                        "description": "Asset not found",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Not found. Unknown asset.",
                                    "status": 404
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/directory": {
            "get": {
                "operationId": "listDirectoryEntries",
                "summary": "Directory entries",
                "description": "Returns the list of directory entries with paging navigation links. Optionally filtered by address, tag, or arbitrary search string. This API endpoint follows Stellar Horizon API response format convention. A response result contains records and navigation links.\n#### Query examples:\nFetch information about multiple accounts in one call\n\n`curl -g \"https://api.stellar.expert/explorer/directory?address[]=GA6HCMBLTZS5VYYBCATRBRZ3BZJMAFUDKYYF6AH6MVCMGWMRDNSWJPIH&address[]=GAP5LETOV6YIE62YAM56STDANPRDO7ZFDBGSNHJQIYGGKSMOZAHOOS2S\"`\n\nSearch for Kraken's deposit account\n\n`curl \"https://api.stellar.expert/explorer/directory?search=kraken\"`\n\nFind accounts tagged as malicious or unsafe\n\n`curl -g \"https://api.stellar.expert/explorer/directory?tag[]=malicious&tag[]=unsafe\"`\n\nLookup addresses reported for \"staking\"-related scams\n\n`curl -g \"https://api.stellar.expert/explorer/directory?tag[]=malicious&search=stacking\"`",
                "tags": [
                    "Directory Info API"
                ],
                "parameters": [
                    {
                        "name": "address-array",
                        "$ref": "#/components/parameters/address-array"
                    },
                    {
                        "name": "tag",
                        "$ref": "#/components/parameters/tag"
                    },
                    {
                        "name": "search",
                        "minLength": 3,
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "name": "order",
                        "$ref": "#/components/parameters/order"
                    },
                    {
                        "name": "limit",
                        "$ref": "#/components/parameters/limit"
                    },
                    {
                        "name": "cursor",
                        "$ref": "#/components/parameters/cursor"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Directory entries fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ListApiResponse"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "_embedded": {
                                                    "type": "object",
                                                    "properties": {
                                                        "records": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/components/schemas/DirectoryEntry"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/explorer/directory?sort=address&order=asc&limit=2"
                                        },
                                        "prev": {
                                            "href": "/explorer/directory?sort=address&order=desc&cursor=GA272U6UMNKYOBDCLH5CDAPZVDG4WAGJWFY2S2RV2DN6YSSOGYECEVOF&limit=2"
                                        },
                                        "next": {
                                            "href": "/explorer/directory?sort=address&order=asc&cursor=GA2VRL65L3ZFEDDJ357RGI3MAOKPJZ2Z3IJTPSC24I4KDTNFSVEQURRA&limit=2"
                                        }
                                    },
                                    "_embedded": {
                                        "records": [
                                            {
                                                "address": "GA272U6UMNKYOBDCLH5CDAPZVDG4WAGJWFY2S2RV2DN6YSSOGYECEVOF",
                                                "paging_token": "GA272U6UMNKYOBDCLH5CDAPZVDG4WAGJWFY2S2RV2DN6YSSOGYECEVOF",
                                                "name": "Phishing account",
                                                "tags": [
                                                    "malicious"
                                                ]
                                            },
                                            {
                                                "address": "GA2VRL65L3ZFEDDJ357RGI3MAOKPJZ2Z3IJTPSC24I4KDTNFSVEQURRA",
                                                "paging_token": "GA2VRL65L3ZFEDDJ357RGI3MAOKPJZ2Z3IJTPSC24I4KDTNFSVEQURRA",
                                                "domain": "stellar.org",
                                                "name": "SDF Escrow Jan 1 2023",
                                                "tags": [
                                                    "sdf",
                                                    "custodian"
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid 'tag' parameter value. Unknown tag.",
                                    "status": 400
                                }, {
                                    "error": "Bad request. Invalid 'search' parameter value. Expected a string (3-60 characters).",
                                    "status": 400
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/directory/{address}": {
            "get": {
                "tags": [
                    "Directory Info API"
                ],
                "operationId": "getDirectoryEntry",
                "summary": "Address Directory info",
                "description": "Returns Directory information for a given account address.",
                "parameters": [
                    {
                        "name": "address",
                        "$ref": "#/components/parameters/address"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Directory entry fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DirectoryEntry"
                                },
                                "example": {
                                    "address": "GA2VRL65L3ZFEDDJ357RGI3MAOKPJZ2Z3IJTPSC24I4KDTNFSVEQURRA",
                                    "paging_token": "GA2VRL65L3ZFEDDJ357RGI3MAOKPJZ2Z3IJTPSC24I4KDTNFSVEQURRA",
                                    "domain": "stellar.org",
                                    "name": "SDF Escrow Jan 1 2023",
                                    "tags": [
                                        "sdf",
                                        "custodian"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'account'. Invalid account public key.",
                                    "status": 400
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/directory/tags": {
            "get": {
                "tags": [
                    "Directory Info API"
                ],
                "operationId": "getDirectoryTags",
                "summary": "All Directory tags",
                "description": "Returns a list of all categories that can be used to tag accounts.",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DirectoryTagDescription"
                                    },
                                    "example": [
                                        {
                                            "name": "exchange",
                                            "description": "Centralized exchange account"
                                        },
                                        {
                                            "name": "anchor",
                                            "description": "Operational account of an anchor"
                                        },
                                        {
                                            "name": "issuer",
                                            "description": "Well known asset issuer account"
                                        },
                                        {
                                            "name": "wallet",
                                            "description": "Shared account that belongs to a wallet"
                                        },
                                        {
                                            "name": "custodian",
                                            "description": "Reserved, custodian account, or cold wallet"
                                        },
                                        {
                                            "name": "malicious",
                                            "description": "Account involved in theft/scam/spam/phishing"
                                        },
                                        {
                                            "name": "unsafe",
                                            "description": "Obsolete or potentially dangerous account"
                                        },
                                        {
                                            "name": "personal",
                                            "description": "Personal signing key or account address"
                                        },
                                        {
                                            "name": "sdf",
                                            "description": "Account under the custody of SDF"
                                        },
                                        {
                                            "name": "memo-required",
                                            "description": "Destination requires transaction memo"
                                        },
                                        {
                                            "name": "airdrop",
                                            "description": "Airdrop distribution account"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Available Directory tags fetched"
                    }
                }
            }
        },
        "/explorer/directory/blocked-domains": {
            "get": {
                "operationId": "listBlockedDomains",
                "summary": "Blocked domains list",
                "description": "Returns the list of domains reported by the community for fraudulent acitivity. This API endpoint follows Stellar Horizon API response format convention. A response result contains records and navigation links.",
                "tags": [
                    "Directory Info API"
                ],
                "parameters": [
                    {
                        "name": "search",
                        "minLength": 0,
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "name": "order",
                        "$ref": "#/components/parameters/order"
                    },
                    {
                        "name": "limit-huge",
                        "$ref": "#/components/parameters/limit-huge"
                    },
                    {
                        "name": "cursor",
                        "$ref": "#/components/parameters/cursor"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Blocked domains fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ListApiResponse"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "_embedded": {
                                                    "type": "object",
                                                    "properties": {
                                                        "records": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "domain": {
                                                                        "type": "string",
                                                                        "description": "Fully-qualified domain name"
                                                                    },
                                                                    "paging_token": {
                                                                        "type": "string",
                                                                        "description": "Cursor value for results paging"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/explorer/directory/blocked-domains/?order=asc&limit=2"
                                        },
                                        "prev": {
                                            "href": "/explorer/directory/blocked-domains/?order=desc&limit=2&cursor=agrogenesis.in"
                                        },
                                        "next": {
                                            "href": "/explorer/directory/blocked-domains/?order=asc&limit=2&cursor=airdrop-info.vwv.pw"
                                        }
                                    },
                                    "_embedded": {
                                        "records": [
                                            {
                                                "domain": "agrogenesis.in",
                                                "paging_token": "agrogenesis.in"
                                            },
                                            {
                                                "domain": "airdrop-info.vwv.pw",
                                                "paging_token": "airdrop-info.vwv.pw"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/explorer/directory/blocked-domains/{domain}": {
            "get": {
                "tags": [
                    "Directory Info API"
                ],
                "summary": "Check domain",
                "operationId": "isDomainBlocked",
                "description": "Searches through the blocked malicious domains list to determine if the requested domain or its top-level domain is in the blocklist.",
                "parameters": [
                    {
                        "name": "domain-path",
                        "$ref": "#/components/parameters/domain-path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Domain verified",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "domain": {
                                            "type": "string",
                                            "decription": "Domain from request",
                                            "example": "stellar.org.am"
                                        },
                                        "blocked": {
                                            "type": "boolean",
                                            "description": "Whether the domain should be blocked",
                                            "example": true
                                        }
                                    }
                                },
                                "example": {
                                    "domain": "sub.stellar.org.am",
                                    "blocked": true
                                }
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/asset-list/top50": {
            "get": {
                "tags": [
                    "Asset list"
                ],
                "summary": "TOP50 asset list",
                "operationId": "querySAL",
                "description": "Dynamically generated list based on technical asset metrics, including payments and trading volumes, interoperability, userbase, etc. Assets included in this list were not verified by StellarExpert team. StellarExpert is not affiliated with issuers, and does not endorse or advertise assets in the list. Assets reported for fraudulent activity removed from the list automatically.",
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Asset list fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "provider": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "version": {
                                            "type": "string"
                                        },
                                        "network": {
                                            "type": "string"
                                        },
                                        "feedback": {
                                            "type": "string"
                                        },
                                        "assets": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AssetListInfo"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "name": "StellarExpert Top 50",
                                    "provider": "StellarExpert",
                                    "description": "Dynamically generated list based on technical asset metrics, including payments and trading volumes, interoperability, userbase, etc. Assets included in this list were not verified by StellarExpert team. StellarExpert is not affiliated with issuers, and does not endorse or advertise assets in the list. Assets reported for fraudulent activity removed from the list automatically.",
                                    "version": "1.0",
                                    "network": "public",
                                    "feedback": "https://stellar.expert",
                                    "assets": [
                                        {
                                            "code": "yXLM",
                                            "issuer": "GARDNV3Q7YGT4AKSDF25LT32YSCCW4EV22Y2TV3I2PU2MMXJTEDL5T55",
                                            "contract": "CBZVSNVB55ANF24QVJL2K5QCLOAB6XITGTGXYEAF6NPTXYKEJUYQOHFC",
                                            "name": "yXLM",
                                            "org": "Ultra Capital LLC dba Ultra Capital",
                                            "domain": "ultracapital.xyz",
                                            "icon": "https://stellar.myfilebase.com/ipfs/QmSTXU2wn1USnmd5ZypA5zMze259wEPSDP3i8wivyr9qiq",
                                            "decimals": 7
                                        },
                                        {
                                            "code": "USDC",
                                            "issuer": "GA5ZSEJYB37JRC5AVCIA5MOP4RHTM335X2KGX3IHOJAPP5RE34K4KZVN",
                                            "contract": "CCW67TSZV3SSS2HXMBQ5JFGCKJNXKZM7UQUWUZPUTHXSTZLEO7SJMI75",
                                            "name": "USD Coin",
                                            "org": "Centre Consortium LLC dba Centre Consortium",
                                            "domain": "centre.io",
                                            "icon": "https://stellar.myfilebase.com/ipfs/QmNcfZxs8e9uVyhEa3xoPWCsj3ZogGirtixMEC9Km4Fjm2",
                                            "decimals": 7
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                }]
                            }
                        }
                    },
                    "404": {
                        "description": "Asset not found",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Not found. No metadata records found for domain.",
                                    "status": 404
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/contract-data/{parent}/{durability}/{key}": {
            "get": {
                "tags": [
                    "Contract data API"
                ],
                "summary": "Contract data statistics",
                "operationId": "fetchContractDataEntry",
                "description": "Returns statistics for a given contract",
                "cost": 10,
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    },
                    {
                        "name": "parent",
                        "$ref": "#/components/parameters/parent"
                    },
                    {
                        "name": "durability",
                        "description": "Type of durability",
                        "in": "path",
                        "schema": {
                            "$ref": "#/components/schemas/ContractDataDurability"
                        },
                        "required": true
                    },
                    {
                        "name": "key",
                        "description": "A base64 encoded string of the raw Result XDR struct",
                        "in": "path",
                        "schema": {
                            "$ref": "#/components/schemas/ContractDataKey"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contract data statistics fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "key": {
                                            "$ref": "#/components/schemas/ContractDataKey"
                                        },
                                        "parent": {
                                            "oneOf": [
                                                {
                                                    "$ref": "#/components/schemas/ContractAddress"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/AccountAddress"
                                                }
                                            ]
                                        },
                                        "updated": {
                                            "$ref": "#/components/schemas/Timestamp"
                                        },
                                        "value": {
                                            "description": "A base64 encoded string of the raw Result XDR struct",
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "key": "AAAAFA==",
                                    "parent": "CALI2BYU2JE6WVRUFYTS6MSBNEHGJ35P4AVCZYF3B6QOE3QKOB2PLE6M",
                                    "updated": 1746167725,
                                    "value": "AAAAEwAAAADfiIIOIxrY8wJ4ceXdPPRUkde3c154VzFGa/wpRgCGCAAAAAEAAAAVAAAADgAAAAVhZG1pbgAAAAAAABIAAAAAAAAAALTNUnnvzSI3IZvYt4fQkBeqSQ87LyoKekbrrhsWLsiPAAAADgAAAAZhc3NldHMAAAAAABAAAAABAAAADgAAABAAAAABAAAAAgAAAA8AAAAHU3RlbGxhcgAAAAASAAAAAU6IPpdZVi67nMprSYl9WzJV1NToyINLCgyA8rHGmp0CAAAAEAAAAAEAAAACAAAADwAAAAdTdGVsbGFyAAAAABIAAAABKIUvaMGYSI40b7EhLtUCkFN2HMJPRTOS41OYIBsIJecAAAAQAAAAAQAAAAIAAAAPAAAAB1N0ZWxsYXIAAAAAEgAAAAHcW3ztUumYrLmU+Et+uwV4lHUHZPwX3vLGkELnjSdnagAAABAAAAABAAAAAgAAAA8AAAAHU3RlbGxhcgAAAAASAAAAAccIoNmKvZ8hdeP1/x1/Ht/tmLbxwg43mLjYU+dM5XJqAAAAEAAAAAEAAAACAAAADwAAAAdTdGVsbGFyAAAAABIAAAABThH/77Z2C74VxUYTjURlWujr1M0yewg+gL6eyJOD40gAAAAQAAAAAQAAAAIAAAAPAAAAB1N0ZWxsYXIAAAAAEgAAAAGi/DKqyuxsnIPOtlcTWibns7hNf3GiFyWsaVRenWp/RgAAABAAAAABAAAAAgAAAA8AAAAHU3RlbGxhcgAAAAASAAAAAWo4z7z/HBoS5esSHdDQ6I3xKMIB+s5GvWhENNA56650AAAAEAAAAAEAAAACAAAADwAAAAdTdGVsbGFyAAAAABIAAAABJbT82FmuwvpjSEOMSJs8PBDJi20hvk/TyzDLaJU++XcAAAAQAAAAAQAAAAIAAAAPAAAAB1N0ZWxsYXIAAAAAEgAAAAEBXYCbqoen8nj67TgxiToTyzhZ6BokJeLbYyJFVbtOGgAAABAAAAABAAAAAgAAAA8AAAAHU3RlbGxhcgAAAAASAAAAAean2et1IwBqRpqnSDrREHJHRDwNguYnY95nCEjE6XyQAAAAEAAAAAEAAAACAAAADwAAAAdTdGVsbGFyAAAAABIAAAABVrJb5x6jYE6yYsBrM4bdhHkcaddAt/Bo8ui69nTfW6EAAAAQAAAAAQAAAAIAAAAPAAAAB1N0ZWxsYXIAAAAAEgAAAAF1r2XExeYXj3AhgBmnElZqF+ngkRElm3ILJt6InIZpXAAAABAAAAABAAAAAgAAAA8AAAAHU3RlbGxhcgAAAAASAAAAARfiR1NHhTiDHglvZtgftPF6XnAR6BEgNOu8pmzpKb2fAAAAEAAAAAEAAAACAAAADwAAAAdTdGVsbGFyAAAAABIAAAABV14CckWp74iyhTTaxUhsEKpnThyyGiZp5uqaxkGecOcAAAAOAAAACmJhc2VfYXNzZXQAAAAAABAAAAABAAAAAgAAAA8AAAAHU3RlbGxhcgAAAAASAAAAAa3vzlmu5Slo92Bh1JTCUlt1ZZ+kKWpl9JnvKeVkd+SWAAAADgAAAAhkZWNpbWFscwAAAAMAAAAOAAAADgAAAA5sYXN0X3RpbWVzdGFtcAAAAAAABQAAAZaPtJogAAAADgAAAAZwZXJpb2QAAAAAAAUAAAAABSZcAAAAAA4AAAAKcmVzb2x1dGlvbgAAAAAAAwAEk+AAAAASAAAAAQFdgJuqh6fyePrtODGJOhPLOFnoGiQl4ttjIkVVu04aAAAAAwAAAAgAAAASAAAAARfiR1NHhTiDHglvZtgftPF6XnAR6BEgNOu8pmzpKb2fAAAAAwAAAAwAAAASAAAAASW0/NhZrsL6Y0hDjEibPDwQyYttIb5P08swy2iVPvl3AAAAAwAAAAcAAAASAAAAASiFL2jBmEiONG+xIS7VApBTdhzCT0UzkuNTmCAbCCXnAAAAAwAAAAEAAAASAAAAAU4R/++2dgu+FcVGE41EZVro69TNMnsIPoC+nsiTg+NIAAAAAwAAAAQAAAASAAAAAU6IPpdZVi67nMprSYl9WzJV1NToyINLCgyA8rHGmp0CAAAAAwAAAAAAAAASAAAAAVayW+ceo2BOsmLAazOG3YR5HGnXQLfwaPLouvZ031uhAAAAAwAAAAoAAAASAAAAAVdeAnJFqe+IsoU02sVIbBCqZ04cshomaebqmsZBnnDnAAAAAwAAAA0AAAASAAAAAWo4z7z/HBoS5esSHdDQ6I3xKMIB+s5GvWhENNA56650AAAAAwAAAAYAAAASAAAAAXWvZcTF5hePcCGAGacSVmoX6eCRESWbcgsm3oichmlcAAAAAwAAAAsAAAASAAAAAaL8MqrK7Gycg862VxNaJuezuE1/caIXJaxpVF6dan9GAAAAAwAAAAUAAAASAAAAAccIoNmKvZ8hdeP1/x1/Ht/tmLbxwg43mLjYU+dM5XJqAAAAAwAAAAMAAAASAAAAAdxbfO1S6ZisuZT4S367BXiUdQdk/Bfe8saQQueNJ2dqAAAAAwAAAAIAAAASAAAAAean2et1IwBqRpqnSDrREHJHRDwNguYnY95nCEjE6XyQAAAAAwAAAAk="
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'parentId'. Invalid parent contract/account address.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'key'. Invalid contract data key.",
                                    "status": 400
                                }]
                            }
                        }
                    },
                    "404": {
                        "description": "Contract data not found",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Not found.",
                                    "status": 404
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/contract-data/{parent}": {
            "get": {
                "operationId": "queryContractData",
                "summary": "Load contract data list",
                "description": "Returns list of contract data entries",
                "cost": 10,
                "tags": [
                    "Contract data API"
                ],
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    },
                    {
                        "name": "parent",
                        "$ref": "#/components/parameters/parent"
                    },
                    {
                        "name": "order",
                        "$ref": "#/components/parameters/order"
                    },
                    {
                        "name": "limit",
                        "$ref": "#/components/parameters/limit"
                    },
                    {
                        "name": "cursor",
                        "$ref": "#/components/parameters/cursor"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contract data list loaded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ListApiResponse"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "_embedded": {
                                                    "type": "object",
                                                    "properties": {
                                                        "records": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/components/schemas/ContractDataInfo"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/explorer/public/contract-data/CALI2BYU2JE6WVRUFYTS6MSBNEHGJ35P4AVCZYF3B6QOE3QKOB2PLE6M?order=asc&limit=2"
                                        },
                                        "prev": {
                                            "href": "/explorer/public/contract-data/CALI2BYU2JE6WVRUFYTS6MSBNEHGJ35P4AVCZYF3B6QOE3QKOB2PLE6M?order=desc&limit=2&cursor=QAAAhwAAOcazKmyL5rbUOXXPveFX2unaSzSMW5shRuR4tDNp"
                                        },
                                        "next": {
                                            "href": "/explorer/public/contract-data/CALI2BYU2JE6WVRUFYTS6MSBNEHGJ35P4AVCZYF3B6QOE3QKOB2PLE6M?order=asc&limit=2&cursor=QAAAhwAATjoeXxamRm%2F8nldwrumn3MCbopuQe2mx7y1%2F%2B5vx"
                                        }
                                    },
                                    "_embedded": {
                                        "records": [
                                            {
                                                "durability": "temporary",
                                                "expired": true,
                                                "key": "AAAACQAAAZTUbPzgAAAAAAAAAAQ=",
                                                "ttl": 55610962,
                                                "updated": 1738730721,
                                                "value": "AAAACgAAAAAAAAAAAAAAUsT35xU=",
                                                "paging_token": "QAAAhwAAOcazKmyL5rbUOXXPveFX2unaSzSMW5shRuR4tDNp"
                                            },
                                            {
                                                "durability": "temporary",
                                                "expired": true,
                                                "key": "AAAACQAAAZDuMmsAAAAAAAAAAAc=",
                                                "ttl": 52760453,
                                                "updated": 1721983220,
                                                "value": "AAAACgAAAAAAAAAAAAAJW12z62M=",
                                                "paging_token": "QAAAhwAATjoeXxamRm/8nldwrumn3MCbopuQe2mx7y1/+5vx"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'parentId'. Invalid parent contract/account address.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'cursor'. Invalid paging cursor.",
                                    "status": 400
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/contract": {
            "get": {
                "operationId": "queryAllContracts",
                "summary": "Load contract list",
                "description": "Returns list of contracts",
                "cost": 10,
                "tags": [
                    "Contract API"
                ],
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    },
                    {
                        "name": "order",
                        "$ref": "#/components/parameters/order"
                    },
                    {
                        "name": "limit",
                        "$ref": "#/components/parameters/limit"
                    },
                    {
                        "name": "cursor",
                        "$ref": "#/components/parameters/cursor"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contract list loaded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ListApiResponse"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "_embedded": {
                                                    "type": "object",
                                                    "properties": {
                                                        "records": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/components/schemas/ContractList"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/explorer/public/contract?sort=created&order=desc&limit=10"
                                        },
                                        "prev": {
                                            "href": "/explorer/public/contract?sort=created&order=asc&limit=10&cursor=1073741825"
                                        },
                                        "next": {
                                            "href": "/explorer/public/contract?sort=created&order=desc&limit=10&cursor=1073741828"
                                        }
                                    },
                                    "_embedded": {
                                        "records": [
                                            {
                                                "account": "CDGFGODCSQQQFFBUEJGS7NIDUA5OQKBRFQ57IOKZAZIEJDNQNHS3RV5O",
                                                "contract": "CDGFGODCSQQQFFBUEJGS7NIDUA5OQKBRFQ57IOKZAZIEJDNQNHS3RV5O",
                                                "created": 1708448440,
                                                "creator": "GBDVX4VELCDSQ54KQJYTNHXAHFLBCA77ZY2USQBM4CSHTTV7DME7KALE",
                                                "paging_token": "1073741825",
                                                "payments": 0,
                                                "trades": 0,
                                                "wasm": "50dbf130955a5867b41454f0da32b4fba7f891e4704086d96a78ac95f75a468d"
                                            },
                                            {
                                                "account": "CCN3YFWAO65XLHY6OYRHYJEWDOLQR2OT7GSFPX5F7NZD7BCFL3NWQBLS",
                                                "contract": "CCN3YFWAO65XLHY6OYRHYJEWDOLQR2OT7GSFPX5F7NZD7BCFL3NWQBLS",
                                                "created": 1708474412,
                                                "creator": "GAB7UCTDOYC34W5KQZ7OYUA7VIZVTPJNL6UXKERGWHMRBTXLQ3SWSFF6",
                                                "paging_token": "1073741828",
                                                "payments": 100,
                                                "trades": 100,
                                                "wasm": "4b9316721487281d8201e1c6044544400f120253487971e339eb23a465516935"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/contract/{contract}": {
            "get": {
                "operationId": "getContract",
                "summary": "Load contract info",
                "description": "Retrieve general information for a given smart contract",
                "cost": 10,
                "tags": [
                    "Contract API"
                ],
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    },
                    {
                        "name": "contract",
                        "$ref": "#/components/parameters/contract"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contract info loaded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContractInfo"
                                },
                                "example": {
                                    "contract": "CDGFGODCSQQQFFBUEJGS7NIDUA5OQKBRFQ57IOKZAZIEJDNQNHS3RV5O",
                                    "account": "CDGFGODCSQQQFFBUEJGS7NIDUA5OQKBRFQ57IOKZAZIEJDNQNHS3RV5O",
                                    "created": 1708448440,
                                    "creator": "GBDVX4VELCDSQ54KQJYTNHXAHFLBCA77ZY2USQBM4CSHTTV7DME7KALE",
                                    "payments": 0,
                                    "trades": 0,
                                    "wasm": "50dbf130955a5867b41454f0da32b4fba7f891e4704086d96a78ac95f75a468d",
                                    "storage_entries": 1,
                                    "validation": {
                                        "status": "unverified"
                                    },
                                    "functions": [
                                        {
                                            "invocations": 6,
                                            "subinvocations": 0,
                                            "function": "call"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'contract'. Invalid contract address.",
                                    "status": 400
                                }]
                            }
                        }
                    },
                    "404": {
                        "description": "Contract not found",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Not found. Contract was not found on the ledger. Check if you specified contract address correctly.",
                                    "status": 404
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/contract/{contract}/version": {
            "get": {
                "operationId": "listContractVersions",
                "summary": "List contract versions",
                "description": "Fetch WASM versions history for a contract",
                "cost": 10,
                "tags": [
                    "Contract API"
                ],
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    },
                    {
                        "name": "contract",
                        "$ref": "#/components/parameters/contract"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of contract versions loaded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ListApiResponse"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "_embedded": {
                                                    "type": "object",
                                                    "properties": {
                                                        "records": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/components/schemas/ContractVersion"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/explorer/public/contract/CALI2BYU2JE6WVRUFYTS6MSBNEHGJ35P4AVCZYF3B6QOE3QKOB2PLE6M/versions"
                                        },
                                        "prev": {
                                            "href": "/explorer/public/contract/CALI2BYU2JE6WVRUFYTS6MSBNEHGJ35P4AVCZYF3B6QOE3QKOB2PLE6M/versions?order=asc&limit=20&cursor=QAAAhyMa2PNmQlVT3Tz0VJHXt3NeeFcxRmv8KUYAhgg%3D"
                                        },
                                        "next": {
                                            "href": "/explorer/public/contract/CALI2BYU2JE6WVRUFYTS6MSBNEHGJ35P4AVCZYF3B6QOE3QKOB2PLE6M/versions?order=desc&limit=20&cursor=QAAAh1At8yZl5d56iZjcfYphV1oR1sD71MYNEN%2Fij%2Fo%3D"
                                        }
                                    },
                                    "_embedded": {
                                        "records": [
                                            {
                                                "wasm": "df88820e231ad8f3027871e5dd3cf45491d7b7735e785731466bfc2946008608",
                                                "operation": "221863802760450049",
                                                "ts": 1715623251,
                                                "paging_token": "QAAAhyMa2PNmQlVT3Tz0VJHXt3NeeFcxRmv8KUYAhgg="
                                            },
                                            {
                                                "wasm": "4a64c8c8502df326f4ce06d98998dc7d8a61575a11d6c0fbd4c60d10dfe28ffa",
                                                "operation": "217515307287302145",
                                                "ts": 1709563514,
                                                "paging_token": "QAAAh1At8yZl5d56iZjcfYphV1oR1sD71MYNEN/ij/o="
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/contract/{contract}/balance": {
            "get": {
                "operationId": "getContractBalances",
                "summary": "Retrieve contract balances",
                "description": "Fetch balances of all tokens that have been transferred to the contract address",
                "cost": 10,
                "tags": [
                    "Contract API"
                ],
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    },
                    {
                        "name": "contract",
                        "$ref": "#/components/parameters/contract"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contract balances loaded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ContractBalance"
                                    }
                                },
                                "example": [
                                    {
                                        "asset": "XLM",
                                        "balance": "7272238951539",
                                        "flags": 1,
                                        "created": 1710181047,
                                        "value": "887420889608"
                                    },
                                    {
                                        "asset": "USDC-GA5ZSEJYB37JRC5AVCIA5MOP4RHTM335X2KGX3IHOJAPP5RE34K4KZVN-1",
                                        "balance": "885869880849",
                                        "flags": 1,
                                        "created": 1710181047,
                                        "value": "885976371251"
                                    },
                                    {
                                        "asset": "CAM7DY53G63XA4AJRS24Z6VFYAFSSF76C3RZ45BE5YU3FQS5255OOABP",
                                        "balance": "515978224624",
                                        "flags": 1,
                                        "created": 1711776322
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'contract'. Invalid contract address.",
                                    "status": 400
                                }]
                            }
                        }
                    },
                    "404": {
                        "description": "Contract not found",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Not found. Contract was not found on the ledger. Check if you specified contract address correctly.",
                                    "status": 404
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/contract/{contract}/balance/{asset}/history": {
            "get": {
                "operationId": "queryContractBalanceHistory",
                "summary": "Retrieve contract balance history",
                "description": "Fetch balance history of token that have been transferred to the contract address",
                "cost": 10,
                "tags": [
                    "Contract API"
                ],
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    },
                    {
                        "name": "contract",
                        "$ref": "#/components/parameters/contract"
                    },
                    {
                        "name": "asset",
                        "$ref": "#/components/parameters/asset"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Asset balance history loaded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "type": "number"
                                        }
                                    }
                                },
                                "example": [
                                    [
                                        1727308800,
                                        "93402431"
                                    ],
                                    [
                                        1724284800,
                                        "10000001"
                                    ],
                                    [
                                        1723593600,
                                        "10000000"
                                    ]
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'contract'. Invalid contract address.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'asset'. Invalid asset descriptor. Use {code}-{issuer}-{type} format or contract address.",
                                    "status": 400
                                }]
                            }
                        }
                    },
                    "404": {
                        "description": "Contract balance history not found",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Not found. Contract balance history was not found on the ledger. Check if you specified contract and asset identifier correctly.",
                                    "status": 404
                                },{
                                    "error": "Not found. Contract was not found on the ledger. Check if you specified contract address correctly.",
                                    "status": 404
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/contract/{contract}/value": {
            "get": {
                "operationId": "estimateContractValue",
                "summary": "Retrieve contract value",
                "description": "Fetch contract value",
                "cost": 10,
                "tags": [
                    "Contract API"
                ],
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    },
                    {
                        "name": "contract",
                        "$ref": "#/components/parameters/contract"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contract value loaded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "contract": {
                                            "$ref": "#/components/schemas/ContractAddress"
                                        },
                                        "currency": {
                                            "type": "string",
                                            "example": "USD"
                                        },
                                        "total": {
                                            "type": "string",
                                            "example": "26850644"
                                        },
                                        "trustlines": {
                                            "description": "Trustlines established to a contract",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TrustlinesValue"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "contract": "CDGFGODCSQQQFFBUEJGS7NIDUA5OQKBRFQ57IOKZAZIEJDNQNHS3RV5O",
                                    "trustlines": [],
                                    "total": "0",
                                    "currency": "USD"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'contract'. Invalid contract address.",
                                    "status": 400
                                }]
                            }
                        }
                    },
                    "404": {
                        "description": "Contract not found",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Not found. Account was not found on the network.",
                                    "status": 404
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/contract/{contract}/users": {
            "get": {
                "operationId": "queryContractTopUsers",
                "summary": "Retrieve top account",
                "description": "Fetch account address list",
                "cost": 10,
                "tags": [
                    "Contract API"
                ],
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    },
                    {
                        "name": "contract",
                        "$ref": "#/components/parameters/contract"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contract account address list loaded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "address": {
                                                "$ref": "#/components/schemas/AccountAddress"
                                            },
                                            "invocations": {
                                                "type": "integer",
                                                "example": 250
                                            }
                                        }
                                    }
                                },
                                "example": [
                                    {
                                        "address": "GBDVX4VELCDSQ54KQJYTNHXAHFLBCA77ZY2USQBM4CSHTTV7DME7KALE",
                                        "invocations": 4
                                    },
                                    {
                                        "address": "GCE7JWTBZ7KXVU7V3L3TGUAALYHIYE7EV5YOSK7WFZ766SDTSROWBEAR",
                                        "invocations": 2
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'contract'. Invalid contract address.",
                                    "status": 400
                                }]
                            }
                        }
                    },
                    "404": {
                        "description": "Contract not found",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Not found. Contract not found.",
                                    "status": 404
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/contract/{contract}/invocation-stats": {
            "get": {
                "operationId": "queryContractInvocationStats",
                "summary": "Retrieve contract invocation statistics",
                "description": "Fetch invocation statistics for contract",
                "cost": 10,
                "tags": [
                    "Contract API"
                ],
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    },
                    {
                        "name": "contract",
                        "$ref": "#/components/parameters/contract"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contract invocation statistics loaded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ContractInvocationStats"
                                    }
                                },
                                "example": [
                                    {
                                        "avg_read_entry": 2,
                                        "avg_write_entry": 0,
                                        "avg_ledger_read_byte": 620,
                                        "avg_ledger_write_byte": 620,
                                        "avg_mem_byte": 1279557,
                                        "avg_emit_event": 0,
                                        "avg_invoke_time": 209,
                                        "total_invocations": 3,
                                        "total_subinvocations": 0,
                                        "avg_nonrefundable_fee": 0,
                                        "avg_refundable_fee": 0,
                                        "avg_rent_fee": 0,
                                        "ts": 1708387200
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'contract'. Invalid contract address.",
                                    "status": 400
                                }]
                            }
                        }
                    },
                    "404": {
                        "description": "Contract not found",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Not found. Contract not found.",
                                    "status": 404
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/wasm/{wasm}": {
            "get": {
                "operationId": "loadContractWasmByHash",
                "summary": "Download contract WASM",
                "description": "Download WASM binary",
                "cost": 10,
                "tags": [
                    "Contract API"
                ],
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    },
                    {
                        "name": "wasm",
                        "description": "WASM hash or contract address",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/Hash"
                                },
                                {
                                    "$ref": "#/components/schemas/ContractAddress"
                                }
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "WASM binary loaded",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                },
                                "example" : "0061736d01000000010e0360027e7e017e6000017e600000020701016201690000030302010205030100110611027f0041fb80c0000b7f00418081c0000b073005066d656d6f727902000463616c6c0001015f00020a5f5f646174615f656e6403000b5f5f686561705f6261736503010a190214004284808080808080084284808080b00f10000b02000b0b84010100418080c0000b7b4b696e646e657373206c656164732c0a416c7761797320686f70652c0a4c6f7665207072657661696c732c0a45616368207374657020636f756e74732c0a506561636566756c206368616e67652c0a416d696473742066656172732c0a496e7370697265206f74686572732c0a4c6967687420746865207761792e002b0e636f6e747261637473706563763000000000000000000000000463616c6c000000000000000100000010001e11636f6e7472616374656e766d6574617630000000000000001400000000006f0e636f6e74726163746d65746176300000000000000005727376657200000000000006312e37342e3100000000000000000008727373646b7665720000002f32302e332e32233164376639626438303330663639303730363334626662303733393433333938323463656233393900"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'hash'. Invalid contract hash.",
                                    "status": 400
                                }]
                            }
                        }
                    },
                    "404": {
                        "description": "Contract not found",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Not found. Contract was not found on the ledger. Check if you specified contract address correctly.",
                                    "status": 404
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/domain-meta": {
            "get": {
                "tags": [
                    "Domain meta API"
                ],
                "summary": "Domain metadata",
                "operationId": "fetchDomainMeta",
                "description": "Returns metadata for a given domain",
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    },
                    {
                        "name": "domain",
                        "$ref": "#/components/parameters/domain"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Domain metadata fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "domain": {
                                            "type": "string"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Metadata"
                                        },
                                        "tomlCid": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "domain": "aqua.network",
                                    "meta": {
                                        "CURRENCIES": [
                                            {
                                                "code": "AQUA",
                                                "conditions": "There will only ever be 100 billion AQUA tokens in existence.",
                                                "desc": "Aquarius is a next generation AMM platform for Stellar. Learn more about AQUA and Aquarius at https://aqua.network/",
                                                "display_decimals": 7,
                                                "image": "https://aqua.network/assets/img/aqua-logo.png",
                                                "is_asset_anchored": false,
                                                "issuer": "GBNZILSTVQZ4R7IKQDGHYGY2QXL5QOFJYQMXPKWRRM5PAV7Y4M67AQUA",
                                                "name": "AQUA"
                                            }
                                        ],
                                        "DOCUMENTATION": {
                                            "ORG_DBA": "AQUA token",
                                            "ORG_DESCRIPTION": "Aquarius is a next generation AMM platform for Stellar.",
                                            "ORG_LOGO": "https://aqua.network/assets/img/aqua-logo.png",
                                            "ORG_NAME": "Aquarius",
                                            "ORG_OFFICIAL_EMAIL": "hello@aqua.network",
                                            "ORG_SUPPORT_EMAIL": "support@aqua.network",
                                            "ORG_TWITTER": "aqua_token",
                                            "ORG_URL": "https://aqua.network/"
                                        },
                                        "NETWORK_PASSPHRASE": "Public Global Stellar Network ; September 2015",
                                        "VERSION": "2.2.0"
                                    },
                                    "tomlCid": "Qmf7z9Xca3wa3yidHmLwA1u1HFgE8FUP3EiqV2zuTYfXc1",
                                    "warnings": [
                                        "connection_failed"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'domain'.",
                                    "status": 400
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/ledger/sequence-from-timestamp": {
            "get": {
                "tags": [
                    "Ledger Info API"
                ],
                "summary": "Find sequence by timestamp",
                "operationId": "getSequenceFromTimestamp",
                "description": "Resolves ledger sequence with a finalization time equal or less than a given timestamp. If the timestamp indicates some time in the future or, vise versa, less than the closing time of the first ledger, server returns 404 Not Found error.",
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    },
                    {
                        "name": "timestamp",
                        "description": "Timestamp to search (UNIX time or RFC 3339 timestamp)",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                {
                                    "type": "integer",
                                    "minimum": 0
                                }
                            ]
                        },
                        "example": 1642597270
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ledger sequence resolved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LedgerTimestampSequenceInfo"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'timestamp'.",
                                    "status": 400
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/ledger/timestamp-from-sequence": {
            "get": {
                "tags": [
                    "Ledger Info API"
                ],
                "summary": "Find timestamp by sequence",
                "operationId": "getTimestampFromSequence",
                "description": "Resolves ledger closing timestamp for a given ledger sequence.",
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    },
                    {
                        "name": "sequence-query",
                        "$ref": "#/components/parameters/sequence-query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Timestamp resolved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LedgerTimestampSequenceInfo"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'sequence'.",
                                    "status": 400
                                }]
                            }
                        }
                    },
                    "404": {
                        "description": "Sequence not found",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Not found. Ledger with sequence not found.",
                                    "status": 404
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/ledger/ledger-stats": {
            "get": {
                "tags": [
                    "Ledger Info API"
                ],
                "summary": "Receive ledger statistics",
                "operationId": "queryLedgerStats",
                "description": "Returns list of ledger statistics",
                "cost": 10,
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ledger statistics fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/24HLedgerStats"
                                    }
                                },
                                "example": [
                                    {
                                        "accounts": 1,
                                        "avg_ledger_time": 5.4,
                                        "fee_pool": "300",
                                        "ledgers": 4781,
                                        "operations": 3,
                                        "payments": 2,
                                        "reserve": null,
                                        "total_xlm": null,
                                        "trades": 0,
                                        "trustlines": 0,
                                        "funded_trustlines": 0,
                                        "volume": 0,
                                        "new_assets": 0,
                                        "transactions": 1,
                                        "failed_transactions": 0,
                                        "finalized": true,
                                        "ts": 1443571200
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/ledger/ledger-stats/24h": {
            "get": {
                "tags": [
                    "Ledger Info API"
                ],
                "summary": "Receive ledger statistics for 24h",
                "operationId": "query24HLedgerStats",
                "description": "Returns of ledger statistics for the last 24 hours.",
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ledger statistics fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/24HLedgerStats"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/ledger/protocol-history": {
            "get": {
                "tags": [
                    "Ledger Info API"
                ],
                "summary": "Protocol upgrades history",
                "operationId": "queryProtocolHistory",
                "description": "Returns list of protocol upgrades",
                "cost": 10,
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of protocol upgrades fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProtocolHistory"
                                    }
                                },
                                "example": [
                                    {
                                        "sequence": 55823848,
                                        "version": 22,
                                        "ts": 1740070807,
                                        "max_tx_set_size": 1000,
                                        "base_fee": 100,
                                        "base_reserve": 5000000,
                                        "config_changes": {
                                            "contractLedgerCost": {
                                                "ledgerMaxReadLedgerEntries": 500,
                                                "ledgerMaxReadBytes": 3500000,
                                                "ledgerMaxWriteLedgerEntries": 250,
                                                "ledgerMaxWriteBytes": 143360,
                                                "txMaxReadLedgerEntries": 100,
                                                "txMaxReadBytes": 200000,
                                                "txMaxWriteLedgerEntries": 50,
                                                "txMaxWriteBytes": 132096,
                                                "feeReadLedgerEntry": "6250",
                                                "feeWriteLedgerEntry": "10000",
                                                "feeRead1Kb": "1786",
                                                "bucketListTargetSizeBytes": "14500000000",
                                                "writeFee1KbBucketListLow": "8510",
                                                "writeFee1KbBucketListHigh": "12116",
                                                "bucketListWriteFeeGrowthFactor": 5000
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/ledger/stream": {
            "get": {
                "tags": [
                    "Ledger Info API"
                ],
                "summary": "Receive ledger sequence",
                "operationId": "waitForLedger",
                "description": "Returns current ledger sequence",
                "cost": 10,
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Current ledger sequence",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "ledger": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "example": {
                                    "ledger": 56309876
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/ledger/last": {
            "get": {
                "tags": [
                    "Ledger Info API"
                ],
                "summary": "Receive last ledger sequence",
                "operationId": "fetchLastLedger",
                "description": "Returns last ledger sequence",
                "cost": 10,
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Last ledger sequence",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "ledger": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "example": {
                                    "ledger": 56309777
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/ledger/{sequence}": {
            "get": {
                "tags": [
                    "Ledger Info API"
                ],
                "summary": "Receive ledger XDR",
                "operationId": "fetchLedger",
                "description": "Returns External Data Representation (XDR) of ledger",
                "cost": 10,
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    },
                    {
                        "name": "sequence",
                        "$ref": "#/components/parameters/sequence"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data encoded in XDR",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "ledger": {
                                            "type": "integer"
                                        },
                                        "xdr": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "ledger": 56309777,
                                    "xdr": "AAAAFv/Q19NdfIDZ4CQkKcqyL5lLY6opY1ZvmgQtH2Y2FmRdazT86r8iA+WoswCgjqQXDsplEFM+IEIopvIi8/ImOuQAAAAAZ+JzJgAAAAAAAAABAAAAAJF6qaV6rVYpKqq1XjVfHyYvW2GjLyQnfuwoC9gxe9N0AAAAQIAM3tgD8xuCabNm4vMx5ywyDpP8NaPGhiHJNdDzMAlnHqYUvA8EgavB+pHRYMpvjPIG2H0SQUlUSDSTFaPwSAwnpooCsiamM9+3SAmIc6Vl/j//iEDIHSu/07PsKtHZsYn5waf4q3iUoBbox4hBeIinkaX8y+OwojkyN0iljkV1A1s4EQ6iHrPseVthAAAw1lNq4ykAAAEWAAAAAGX1gCkAAABkAExLQAAAA+i0OaipyQAtcosHv8XKXmTs2LPbQCJXq0qQzmvxTIRQOgHeLsSqm7m7S2x0tKtwfGJa375Pg8pU0cG96wyVDWrRvVRij8DMXmfYvW97tPVLoIFqCQEkew87hQS1x4yu6PLk859s/cv+jmDapL9TAAD5O8EE/FeMSr9HvCDHtwyJDwAAAAA="
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/liquidity-pool": {
            "get": {
                "tags": [
                    "Liquidity Pool API"
                ],
                "summary": "Liquidity pool list",
                "operationId": "queryAllLiquidityPools",
                "description": "Returns a list of liquidity pools",
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    },
                    {
                        "name": "sort",
                        "description": "Results sorting parameter",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "created",
                                "trades",
                                "accounts",
                                "volume1d",
                                "volume7d",
                                "earned1d",
                                "earned7d",
                                "tvl"
                            ],
                            "default": "tvl"
                        },
                        "required": false
                    },
                    {
                        "name": "order",
                        "$ref": "#/components/parameters/order"
                    },
                    {
                        "name": "limit",
                        "$ref": "#/components/parameters/limit"
                    },
                    {
                        "name": "cursor",
                        "$ref": "#/components/parameters/cursor"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Liquidity pool list fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ListApiResponse"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "_embedded": {
                                                    "type": "object",
                                                    "properties": {
                                                        "records": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/components/schemas/LiquidityPoolInfo"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/explorer/public/liquidity-pool?order=desc&limit=10&cursor=0"
                                        },
                                        "prev": {
                                            "href": "/explorer/public/liquidity-pool?order=asc&limit=10&cursor=1"
                                        },
                                        "next": {
                                            "href": "/explorer/public/liquidity-pool?order=desc&limit=10&cursor=10"
                                        }
                                    },
                                    "_embedded": {
                                        "records": [
                                            {
                                                "id": "8a906e8d2e849a0e91c90ec8eb0df2d9ae0a8846b933e6faf6a9add83ae8ed13",
                                                "assets": [
                                                    {
                                                        "amount": 11506,
                                                        "asset": "AQUA-GBNZILSTVQZ4R7IKQDGHYGY2QXL5QOFJYQMXPKWRRM5PAV7Y4M67AQUA-1",
                                                        "name": "AQUA-GBNZILSTVQZ4R7IKQDGHYGY2QXL5QOFJYQMXPKWRRM5PAV7Y4M67AQUA-1",
                                                        "domain": "aqua.network",
                                                        "toml_info": {
                                                            "code": "AQUA",
                                                            "issuer": "GBNZILSTVQZ4R7IKQDGHYGY2QXL5QOFJYQMXPKWRRM5PAV7Y4M67AQUA",
                                                            "name": "AQUA",
                                                            "image": "https://stellar.myfilebase.com/ipfs/QmTqE6DhQftp51YXXL8HtkEBhr1PpW6F8W1NxnVoyK6G93",
                                                            "decimals": 7,
                                                            "orgName": "Aquarius dba AQUA token",
                                                            "orgLogo": "https://stellar.myfilebase.com/ipfs/QmTqE6DhQftp51YXXL8HtkEBhr1PpW6F8W1NxnVoyK6G93"
                                                        }
                                                    },
                                                    {
                                                        "amount": 2369653446384657,
                                                        "asset": "NESARA-GC4Z2TDXU4GXVLHOS5P5SU6HKBCP7NKN4TJ5ZGTVRBW7MCBZTU7SNUSA-2",
                                                        "name": "NESARA-GC4Z2TDXU4GXVLHOS5P5SU6HKBCP7NKN4TJ5ZGTVRBW7MCBZTU7SNUSA-2",
                                                        "unconfirmed_domain": "stellarusa.gold",
                                                        "unsafe": true
                                                    }
                                                ],
                                                "type": 0,
                                                "fee": 30,
                                                "shares": 5000000000,
                                                "accounts": 1,
                                                "total_value_locked": 5285630661397087000,
                                                "trades": 3861,
                                                "earned_fees": [
                                                    {
                                                        "asset": "AQUA-GBNZILSTVQZ4R7IKQDGHYGY2QXL5QOFJYQMXPKWRRM5PAV7Y4M67AQUA-1",
                                                        "1d": 0,
                                                        "7d": 2,
                                                        "all_time": 18122598
                                                    },
                                                    {
                                                        "asset": "NESARA-GC4Z2TDXU4GXVLHOS5P5SU6HKBCP7NKN4TJ5ZGTVRBW7MCBZTU7SNUSA-2",
                                                        "1d": 0,
                                                        "7d": 0,
                                                        "all_time": 10085313821660
                                                    }
                                                ],
                                                "earned_value": {
                                                    "1d": 0,
                                                    "7d": 0
                                                },
                                                "volume": [
                                                    {
                                                        "asset": "AQUA-GBNZILSTVQZ4R7IKQDGHYGY2QXL5QOFJYQMXPKWRRM5PAV7Y4M67AQUA-1",
                                                        "1d": 0,
                                                        "7d": 553,
                                                        "all_time": 12078764434
                                                    },
                                                    {
                                                        "asset": "NESARA-GC4Z2TDXU4GXVLHOS5P5SU6HKBCP7NKN4TJ5ZGTVRBW7MCBZTU7SNUSA-2",
                                                        "1d": 0,
                                                        "7d": 109037610000000,
                                                        "all_time": 9043195994133932
                                                    }
                                                ],
                                                "volume_value": {
                                                    "1d": 0,
                                                    "7d": 121606924324896350
                                                },
                                                "created": 1717737038,
                                                "paging_token": 10
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/liquidity-pool/{poolId}": {
            "get": {
                "tags": [
                    "Liquidity Pool API"
                ],
                "summary": "Liquidity pool statistics",
                "operationId": "queryLiquidityPoolStats",
                "description": "Returns liquidity pool information",
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    },
                    {
                        "name": "poolId",
                        "$ref": "#/components/parameters/poolId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Liquidity pool info fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LiquidityPoolInfo"
                                },
                                "example": {
                                    "id": "ce05eb743321ec8571cda411b6932cd421eabbb7f4d622ec884f5dfa6656a500",
                                    "assets": [
                                        {
                                            "amount": 13103770307593,
                                            "asset": "BLKG-GA77SMJJOCTGO5SPRZB2OHPL6MB7S5IN3TBJSVEVICNVIMR7J35KNT4X-1",
                                            "name": "BLKG-GA77SMJJOCTGO5SPRZB2OHPL6MB7S5IN3TBJSVEVICNVIMR7J35KNT4X-1",
                                            "domain": "aqua.network",
                                            "toml_info": {
                                                "code": "BLKG",
                                                "issuer": "GA77SMJJOCTGO5SPRZB2OHPL6MB7S5IN3TBJSVEVICNVIMR7J35KNT4X",
                                                "name": "Black Gold",
                                                "image": "https://stellar.myfilebase.com/ipfs/QmP7qSzuhmXPBWfDdfDQGtm4H47hgbXVCWBzxW2rxgGpT7",
                                                "decimals": 7,
                                                "status": "live",
                                                "anchorAssetType": "crypto",
                                                "orgName": "Black Gold",
                                                "orgLogo": "https://stellar.myfilebase.com/ipfs/QmP7qSzuhmXPBWfDdfDQGtm4H47hgbXVCWBzxW2rxgGpT7"
                                            }
                                        },
                                        {
                                            "amount": 3886882681284115,
                                            "asset": "IUSDC-GDXKWM5UPWQFGUQPWRGC5MVEQJJ6AAKYC5SKBO6O4LTTZ5GEVFR2O67B-2",
                                            "name": "IUSDC-GDXKWM5UPWQFGUQPWRGC5MVEQJJ6AAKYC5SKBO6O4LTTZ5GEVFR2O67B-2",
                                            "unconfirmed_domain": "stellar.org"
                                        }
                                    ],
                                    "type": 0,
                                    "fee": 30,
                                    "shares": 197743503634895,
                                    "accounts": 1,
                                    "total_value_locked": 3758090518828434,
                                    "trades": 5961,
                                    "earned_fees": [
                                        {
                                            "asset": "BLKG-GA77SMJJOCTGO5SPRZB2OHPL6MB7S5IN3TBJSVEVICNVIMR7J35KNT4X-1",
                                            "1d": 0,
                                            "7d": 13968380203,
                                            "all_time": 1452657347764
                                        },
                                        {
                                            "asset": "IUSDC-GDXKWM5UPWQFGUQPWRGC5MVEQJJ6AAKYC5SKBO6O4LTTZ5GEVFR2O67B-2",
                                            "1d": 0,
                                            "7d": 13119750340380,
                                            "all_time": 996815876237188
                                        }
                                    ],
                                    "earned_value": {
                                        "1d": 0,
                                        "7d": 12685026380640
                                    },
                                    "volume": [
                                        {
                                            "asset": "BLKG-GA77SMJJOCTGO5SPRZB2OHPL6MB7S5IN3TBJSVEVICNVIMR7J35KNT4X-1",
                                            "1d": 0,
                                            "7d": 13785863738535,
                                            "all_time": 818634666184553
                                        },
                                        {
                                            "asset": "IUSDC-GDXKWM5UPWQFGUQPWRGC5MVEQJJ6AAKYC5SKBO6O4LTTZ5GEVFR2O67B-2",
                                            "1d": 0,
                                            "7d": 6754010933104639,
                                            "all_time": 668190771119507800
                                        }
                                    ],
                                    "volume_value": {
                                        "1d": 0,
                                        "7d": 3265108125093801
                                    },
                                    "created": 1718965392,
                                    "updated": 1743985843,
                                    "paging_token": "ce05eb743321ec8571cda411b6932cd421eabbb7f4d622ec884f5dfa6656a500"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'poolId'. Invalid pool id.",
                                    "status": 400
                                }]
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Not found. Liquidity pool was not found on the ledger. Check if you specified liquidity pool id correctly.",
                                    "status": 404
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/liquidity-pool/{poolId}/stats-history": {
            "get": {
                "tags": [
                    "Liquidity Pool API"
                ],
                "operationId": "queryLiquidityPoolHistory",
                "summary": "Retrieve statistics history",
                "description": "Fetch liquidity pool statistics history",
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    },
                    {
                        "name": "poolId",
                        "$ref": "#/components/parameters/poolId"
                    },
                    {
                        "name": "from",
                        "$ref": "#/components/parameters/from"
                    },
                    {
                        "name": "to",
                        "$ref": "#/components/parameters/to"
                    },
                    {
                        "name": "order",
                        "$ref": "#/components/parameters/order"
                    },
                    {
                        "name": "limit",
                        "$ref": "#/components/parameters/limit"
                    },
                    {
                        "name": "cursor",
                        "$ref": "#/components/parameters/cursor"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Liquidity pool statistics list fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ListApiResponse"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "_embedded": {
                                                    "type": "object",
                                                    "properties": {
                                                        "records": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/components/schemas/LiquidityPoolStat"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/explorer/public/liquidity-pool/ce05eb743321ec8571cda411b6932cd421eabbb7f4d622ec884f5dfa6656a500/stats-history?order=desc&limit=10"
                                        },
                                        "prev": {
                                            "href": "/explorer/public/liquidity-pool/ce05eb743321ec8571cda411b6932cd421eabbb7f4d622ec884f5dfa6656a500/stats-history?order=asc&limit=10&cursor=7490354244747300970"
                                        },
                                        "next": {
                                            "href": "/explorer/public/liquidity-pool/ce05eb743321ec8571cda411b6932cd421eabbb7f4d622ec884f5dfa6656a500/stats-history?order=desc&limit=10&cursor=7485530137480433770"
                                        }
                                    },
                                    "_embedded": {
                                        "records": [
                                            {
                                                "shares": 197743503634895,
                                                "accounts": "1,",
                                                "trades": "1,",
                                                "reserves": [
                                                    {
                                                        "asset": "BLKG-GA77SMJJOCTGO5SPRZB2OHPL6MB7S5IN3TBJSVEVICNVIMR7J35KNT4X-1",
                                                        "amount": 13103770307593
                                                    },
                                                    {
                                                        "asset": "IUSDC-GDXKWM5UPWQFGUQPWRGC5MVEQJJ6AAKYC5SKBO6O4LTTZ5GEVFR2O67B-2",
                                                        "amount": 3886882681284115
                                                    }
                                                ],
                                                "earned_fees": [
                                                    {
                                                        "asset": "BLKG-GA77SMJJOCTGO5SPRZB2OHPL6MB7S5IN3TBJSVEVICNVIMR7J35KNT4X-1",
                                                        "amount": 0
                                                    },
                                                    {
                                                        "asset": "IUSDC-GDXKWM5UPWQFGUQPWRGC5MVEQJJ6AAKYC5SKBO6O4LTTZ5GEVFR2O67B-2",
                                                        "amount": 997266328076
                                                    }
                                                ],
                                                "volume": [
                                                    {
                                                        "asset": "BLKG-GA77SMJJOCTGO5SPRZB2OHPL6MB7S5IN3TBJSVEVICNVIMR7J35KNT4X-1",
                                                        "amount": 1035254602950
                                                    },
                                                    {
                                                        "asset": "IUSDC-GDXKWM5UPWQFGUQPWRGC5MVEQJJ6AAKYC5SKBO6O4LTTZ5GEVFR2O67B-2",
                                                        "amount": 332422109358635
                                                    }
                                                ],
                                                "total_value_locked": 3758090528514336,
                                                "earned_fees_value": 964221829716,
                                                "volume_value": 160703638726041,
                                                "ts": 1743984000,
                                                "paging_token": 7490354244747301000
                                            },
                                            {
                                                "shares": 197743503634895,
                                                "accounts": "1,",
                                                "trades": "1,",
                                                "reserves": [
                                                    {
                                                        "asset": "BLKG-GA77SMJJOCTGO5SPRZB2OHPL6MB7S5IN3TBJSVEVICNVIMR7J35KNT4X-1",
                                                        "amount": 12068515704643
                                                    },
                                                    {
                                                        "asset": "IUSDC-GDXKWM5UPWQFGUQPWRGC5MVEQJJ6AAKYC5SKBO6O4LTTZ5GEVFR2O67B-2",
                                                        "amount": 4219304790642750
                                                    }
                                                ],
                                                "earned_fees": [
                                                    {
                                                        "asset": "BLKG-GA77SMJJOCTGO5SPRZB2OHPL6MB7S5IN3TBJSVEVICNVIMR7J35KNT4X-1",
                                                        "amount": 0
                                                    },
                                                    {
                                                        "asset": "IUSDC-GDXKWM5UPWQFGUQPWRGC5MVEQJJ6AAKYC5SKBO6O4LTTZ5GEVFR2O67B-2",
                                                        "amount": 869058543539
                                                    }
                                                ],
                                                "volume": [
                                                    {
                                                        "asset": "BLKG-GA77SMJJOCTGO5SPRZB2OHPL6MB7S5IN3TBJSVEVICNVIMR7J35KNT4X-1",
                                                        "amount": 777540760952
                                                    },
                                                    {
                                                        "asset": "IUSDC-GDXKWM5UPWQFGUQPWRGC5MVEQJJ6AAKYC5SKBO6O4LTTZ5GEVFR2O67B-2",
                                                        "amount": 289686181179562
                                                    }
                                                ],
                                                "total_value_locked": 4079497804206503,
                                                "earned_fees_value": 840262220222,
                                                "volume_value": 140043703700754,
                                                "ts": 1743897600,
                                                "paging_token": 7489983159572926000
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'poolId'. Invalid pool id.",
                                    "status": 400
                                }]
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Not found. Liquidity pool was not found on the ledger. Check if you specified the liquidity pool id correctly.",
                                    "status": 404
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/liquidity-pool/{poolId}/history/trades": {
            "get": {
                "tags": [
                    "Liquidity Pool API"
                ],
                "summary": "Liquidity pool trades history",
                "operationId": "queryPoolTrades",
                "description": "Returns the trades history for a given liquidity pool",
                "cost": 10,
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    },
                    {
                        "name": "poolId",
                        "$ref": "#/components/parameters/poolId"
                    },
                    {
                        "name": "ts",
                        "description": "Results data for a given timestamp",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/Timestamp"
                        }
                    },
                    {
                        "name": "order",
                        "$ref": "#/components/parameters/order"
                    },
                    {
                        "name": "limit",
                        "$ref": "#/components/parameters/limit"
                    },
                    {
                        "name": "cursor",
                        "$ref": "#/components/parameters/cursor"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Liquidity pool trade list fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ListApiResponse"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "_embedded": {
                                                    "type": "object",
                                                    "properties": {
                                                        "records": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/components/schemas/LiquidityPoolTrades"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/explorer/public/liquidity-pool/ce05eb743321ec8571cda411b6932cd421eabbb7f4d622ec884f5dfa6656a500/history/trades?skip=0&order=desc&limit=2"
                                        },
                                        "prev": {
                                            "href": "/explorer/public/liquidity-pool/ce05eb743321ec8571cda411b6932cd421eabbb7f4d622ec884f5dfa6656a500/history/trades?skip=0&order=asc&limit=2&cursor=7490362160371990600"
                                        },
                                        "next": {
                                            "href": "/explorer/public/liquidity-pool/ce05eb743321ec8571cda411b6932cd421eabbb7f4d622ec884f5dfa6656a500/history/trades?skip=0&order=desc&limit=2&cursor=7490277064184954982"
                                        }
                                    },
                                    "_embedded": {
                                        "records": [
                                            {
                                                "bought_amount": 332422109358635,
                                                "bought_asset": "IUSDC-GDXKWM5UPWQFGUQPWRGC5MVEQJJ6AAKYC5SKBO6O4LTTZ5GEVFR2O67B-2",
                                                "buyer": "GAFYXEXG66CVYM4F73M3SYSMNTCZ3O2KLC7T25GH6W63AJKSUWOGJFVT",
                                                "id": 7490362160371991000,
                                                "operation": 242665909922476030,
                                                "pool": "ce05eb743321ec8571cda411b6932cd421eabbb7f4d622ec884f5dfa6656a500",
                                                "price": 321.1017931351232,
                                                "sold_amount": 1035254602950,
                                                "sold_asset": "BLKG-GA77SMJJOCTGO5SPRZB2OHPL6MB7S5IN3TBJSVEVICNVIMR7J35KNT4X-1",
                                                "ts": 1743985843,
                                                "paging_token": 7490362160371991000
                                            },
                                            {
                                                "bought_amount": 289686181179562,
                                                "bought_asset": "IUSDC-GDXKWM5UPWQFGUQPWRGC5MVEQJJ6AAKYC5SKBO6O4LTTZ5GEVFR2O67B-2",
                                                "buyer": "GAFYXEXG66CVYM4F73M3SYSMNTCZ3O2KLC7T25GH6W63AJKSUWOGJFVT",
                                                "id": 7490277064184955000,
                                                "operation": 242651165300023300,
                                                "pool": "ce05eb743321ec8571cda411b6932cd421eabbb7f4d622ec884f5dfa6656a500",
                                                "price": 372.5671961234264,
                                                "sold_amount": 777540760952,
                                                "sold_asset": "BLKG-GA77SMJJOCTGO5SPRZB2OHPL6MB7S5IN3TBJSVEVICNVIMR7J35KNT4X-1",
                                                "ts": 1743966030,
                                                "paging_token": 7490277064184955000
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'poolId'. Invalid pool id.",
                                    "status": 400
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/liquidity-pool/{poolId}/holders": {
            "get": {
                "tags": [
                    "Liquidity Pool API"
                ],
                "summary": "Pool shards holders list",
                "operationId": "queryAssetHolders",
                "description": "Returns a list of all accounts holding non-zero amount of the pool shards sorted by the balance size.\nThis API endpoint follows Stellar Horizon API response format convention. A response result contains records and navigation links.",
                "cost": 10,
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    },
                    {
                        "name": "poolId",
                        "$ref": "#/components/parameters/poolId"
                    },
                    {
                        "name": "order",
                        "$ref": "#/components/parameters/order"
                    },
                    {
                        "name": "limit",
                        "$ref": "#/components/parameters/limit"
                    },
                    {
                        "name": "cursor",
                        "$ref": "#/components/parameters/cursor"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pool holders fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ListApiResponse"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "_embedded": {
                                                    "type": "object",
                                                    "properties": {
                                                        "records": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "account": {
                                                                        "description": "Account address",
                                                                        "$ref": "#/components/schemas/AccountAddress"
                                                                    },
                                                                    "balance": {
                                                                        "description": "Pool shards balance",
                                                                        "type": "string"
                                                                    },
                                                                    "paging_token": {
                                                                        "description": "Paging token",
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/explorer/public/liquidity-pool/ce05eb743321ec8571cda411b6932cd421eabbb7f4d622ec884f5dfa6656a500/holders?order=asc&limit=2"
                                        },
                                        "prev": {
                                            "href": "/explorer/public/liquidity-pool/ce05eb743321ec8571cda411b6932cd421eabbb7f4d622ec884f5dfa6656a500/holders?order=desc&limit=2&cursor=AACz2L9Kcc8ApFWM"
                                        },
                                        "next": {
                                            "href": "/explorer/public/liquidity-pool/ce05eb743321ec8571cda411b6932cd421eabbb7f4d622ec884f5dfa6656a500/holders?order=asc&limit=2&cursor=AACz2L9Kcc8ApFWM"
                                        }
                                    },
                                    "_embedded": {
                                        "records": [
                                            {
                                                "account": "GCOB5YDCTXFYTOCPA2NY3R4CXRPQDAWCAU4J6ISN5FBTAW2X4A7AH3NG",
                                                "balance": "197743503634895",
                                                "paging_token": "AACz2L9Kcc8ApFWM"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'poolId'. Invalid pool id.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'cursor'. Invalid cursor format.",
                                    "status": 400
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/market": {
            "get": {
                "tags": [
                    "Market Info API"
                ],
                "summary": "Market list",
                "operationId": "queryMarkets",
                "description": "Returns a list of markets",
                "cost": 10,
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    },
                    {
                        "name": "asset-query",
                        "$ref": "#/components/parameters/asset-query"
                    },
                    {
                        "name": "type",
                        "description": "Type filter",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "all",
                                "xlm",
                                "fiat",
                                "crypto",
                                "other"
                            ],
                            "default": "all"
                        },
                        "required": false
                    },
                    {
                        "name": "sort",
                        "description": "Results sorting parameter",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "created",
                                "trades",
                                "trades24h",
                                "volume24h"
                            ],
                            "default": "created"
                        },
                        "required": false
                    },
                    {
                        "name": "order",
                        "$ref": "#/components/parameters/order"
                    },
                    {
                        "name": "limit",
                        "$ref": "#/components/parameters/limit"
                    },
                    {
                        "name": "cursor",
                        "$ref": "#/components/parameters/cursor"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Market list fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ListApiResponse"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "_embedded": {
                                                    "type": "object",
                                                    "properties": {
                                                        "records": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/components/schemas/MarketInfo"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/explorer/public/market?order=desc&limit=2&cursor=0"
                                        },
                                        "prev": {
                                            "href": "/explorer/public/market?order=asc&limit=2&cursor=1"
                                        },
                                        "next": {
                                            "href": "/explorer/public/market?order=desc&limit=2&cursor=2"
                                        }
                                    },
                                    "_embedded": {
                                        "records": [
                                            {
                                                "adjustedVolume": 53997485973509,
                                                "price1": 23,
                                                "asset": [
                                                    "XLM",
                                                    "USDC-GA5ZSEJYB37JRC5AVCIA5MOP4RHTM335X2KGX3IHOJAPP5RE34K4KZVN-1"
                                                ],
                                                "baseVolume7d": 163694085760110,
                                                "baseVolume24h": 15398991775205,
                                                "counterVolume7d": 594229448297787,
                                                "counterVolume24h": 53997485973509,
                                                "id": 144925081468928,
                                                "price": 3.552866,
                                                "price7d": [
                                                    [
                                                        1745280000,
                                                        3.952442087108014
                                                    ],
                                                    [
                                                        1745366400,
                                                        3.724464586805555
                                                    ],
                                                    [
                                                        1745452800,
                                                        3.708614052083333
                                                    ],
                                                    [
                                                        1745539200,
                                                        3.5384415659722226
                                                    ],
                                                    [
                                                        1745625600,
                                                        3.442942722222222
                                                    ],
                                                    [
                                                        1745712000,
                                                        3.4913580381944445
                                                    ],
                                                    [
                                                        1745798400,
                                                        3.5019756805555553
                                                    ],
                                                    [
                                                        1745884800,
                                                        3.5409917457627116
                                                    ]
                                                ],
                                                "spread": 0.001406816870062959,
                                                "trades": 37984589,
                                                "trades24h": 27871,
                                                "paging_token": 1
                                            },
                                            {
                                                "adjustedVolume": 2391105030342,
                                                "asset": [
                                                    "XLM",
                                                    "SHX-GDSTRSHXHGJ7ZIVRBXEYE5Q74XUVCUSEKEBR7UCHEUUEK72N7I7KJ6JH-1"
                                                ],
                                                "baseVolume7d": 1056328823654648,
                                                "baseVolume24h": 74966196381433,
                                                "counterVolume7d": 33932076815209,
                                                "counterVolume24h": 2391105030342,
                                                "id": 74925704478720,
                                                "price": 0.0318457,
                                                "price7d": [
                                                    [
                                                        1745280000,
                                                        0.03351135883458647
                                                    ],
                                                    [
                                                        1745366400,
                                                        0.03244815182539682
                                                    ],
                                                    [
                                                        1745452800,
                                                        0.03184965665354331
                                                    ],
                                                    [
                                                        1745539200,
                                                        0.03213794253787879
                                                    ],
                                                    [
                                                        1745625600,
                                                        0.03096536629770992
                                                    ],
                                                    [
                                                        1745712000,
                                                        0.03084850983471074
                                                    ],
                                                    [
                                                        1745798400,
                                                        0.031660967354085606
                                                    ],
                                                    [
                                                        1745884800,
                                                        0.03208066183673469
                                                    ]
                                                ],
                                                "spread": 0.0038162595308170923,
                                                "trades": 13009481,
                                                "trades24h": 4610,
                                                "paging_token": 2
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'asset'. Invalid asset descriptor. Use {code}-{issuer}-{type} format or contract address.",
                                    "status": 400
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/market/{selling}/{buying}": {
            "get": {
                "tags": [
                    "Market Info API"
                ],
                "summary": "Market statistics",
                "operationId": "queryMarketStats",
                "description": "Returns asset pair statistics",
                "cost": 10,
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    },
                    {
                        "name": "selling",
                        "description": "An asset in the format {CODE}-{ISSUER} (or \"XLM\" for Stellar lumens)",
                        "in": "path",
                        "schema": {
                            "$ref": "#/components/schemas/Asset"
                        },
                        "required": true
                    },
                    {
                        "name": "buying",
                        "description": "An asset in the format {CODE}-{ISSUER} (or \"XLM\" for Stellar lumens)",
                        "in": "path",
                        "schema": {
                            "$ref": "#/components/schemas/Asset"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Market statistics fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MarketStat"
                                },
                                "example": {
                                    "asset": [
                                        "XLM",
                                        "USDC-GA5ZSEJYB37JRC5AVCIA5MOP4RHTM335X2KGX3IHOJAPP5RE34K4KZVN"
                                    ],
                                    "baseVolume7d": 594229448297787,
                                    "baseVolume24h": 46918867876924,
                                    "counterVolume7d": 163694085760110,
                                    "counterVolume24h": 13325400735389,
                                    "spread": 0.000751,
                                    "trades": 37985303,
                                    "trades24h": 26280
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                }]
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Not found. Market statistics were not found on the ledger. Check if you specified the assets correctly.",
                                    "status": 404
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/market/{selling}/{buying}/candles": {
            "get": {
                "tags": [
                    "Market Info API"
                ],
                "summary": "Aggregate market candles data",
                "operationId": "aggregateMarketCandlesData",
                "description": "Returns aggregated data [TIMESTAMP, OPEN, LOW, HIGH, CLOSE, QUOTE_VOLUME, BASE_VOLUME, TRADES_COUNT]",
                "cost": 10,
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    },
                    {
                        "name": "selling",
                        "$ref": "#/components/parameters/network"
                    },
                    {
                        "name": "buying",
                        "description": "An asset in the format {CODE}-{ISSUER} (or \"XLM\" for Stellar lumens)",
                        "in": "path",
                        "schema": {
                            "$ref": "#/components/schemas/Asset"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Market candles data fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "type": "number"
                                        }
                                    }
                                },
                                "example": [
                                    [
                                        1738152000,
                                        2.527373,
                                        2.555556,
                                        2.470024,
                                        2.540556,
                                        6775408111055,
                                        16989955875415,
                                        8578
                                    ],
                                    [
                                        1738195200,
                                        2.540556,
                                        2.568053,
                                        2.466667,
                                        2.492615,
                                        5944725813634,
                                        14903156705180,
                                        14290
                                    ],
                                    [
                                        1738238400,
                                        2.492615,
                                        2.514019,
                                        2.25,
                                        2.328459,
                                        25575645350361,
                                        59836261894671,
                                        27144
                                    ]
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'asset'. Invalid asset descriptor. Use {code}-{issuer}-{type} format or contract address.",
                                    "status": 400
                                }]
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Not found. Unknown asset pair.",
                                    "status": 404
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/active-market/{asset}": {
            "get": {
                "tags": [
                    "Market Info API"
                ],
                "summary": "Active Usdc markets",
                "operationId": "fetchActiveUsdcMarkets",
                "description": "Returns list of active Usdc markets",
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    },
                    {
                        "name": "asset",
                        "$ref": "#/components/parameters/asset"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Active Usdc market list fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Asset"
                                    }
                                },
                                "example": [
                                    "USDM-GDHDC4GBNPMENZAOBB4NCQ25TGZPDRK6ZGWUGSI22TVFATOLRPSUUSDM-1",
                                    "ETH-GBFXOHVAS43OIWNIO7XLRJAHT3BICFEIKOJLZVXNT572MISM4CMGSOCC-1",
                                    "ARST-GCSAZVWXZKWS4XS223M5F54H2B6XPIIXZZGP7KEAIU6YSL5HDRGCI3DG-1",
                                    "XXA-GC4HS4CQCZULIOTGLLPGRAAMSBDLFRR6Y7HCUQG66LNQDISXKIXXADIM-1",
                                    "yXLM-GARDNV3Q7YGT4AKSDF25LT32YSCCW4EV22Y2TV3I2PU2MMXJTEDL5T55-1",
                                    "sUSD-GCHW7CWI7GMIYQYFXMFJNJX5645XGWIINIAEQK3SABQO6CAYL5T7JYIH-1",
                                    "XRP-GBXRPL45NPHCVMFFAYZVUVFFVKSIZ362ZXFP7I2ETNQ3QKZMFLPRDTD5-1",
                                    "USDx-GAVH5ZWACAY2PHPUG4FL3LHHJIYIHOFPSIUGM2KHK25CJWXHAV6QKDMN-1",
                                    "EURC-GDHU6WRG4IEQXM5NZ4BMPKOXHW76MZM4Y2IEMFDVXBSDP6SJY4ITNPP2-1",
                                    "ZUSD-GDF6VOEGRWLOZ64PQQGKD2IYWA22RLT37GJKS2EJXZHT2VLAGWLC5TOB-1",
                                    "USDCAllow-GDIEKKIQWMIZ4LD3RP3ABPN7X5KEAEWYMR634BRHB7EULIMEVREWLF3G-2",
                                    "AQUA-GBNZILSTVQZ4R7IKQDGHYGY2QXL5QOFJYQMXPKWRRM5PAV7Y4M67AQUA-1",
                                    "USD-GBNLJIYH34UWO5YZFA3A3HD3N76R6DOI33N4JONUOHEEYZYCAYTEJ5AK-1",
                                    "VELO-GDM4RQUQQUVSKQA7S6EM7XBZP3FCGH4Q7CL6TABQ7B2BEJ5ERARM2M5M-1",
                                    "EURC-GAQRF3UGHBT6JYQZ7YSUYCIYWAF4T2SAA5237Q5LIQYJOHHFAWDXZ7NM-1",
                                    "ARS-GCYE7C77EB5AWAA25R5XMWNI2EDOKTTFTTPZKM2SR5DI4B4WFD52DARS-1",
                                    "SHX-GDSTRSHXHGJ7ZIVRBXEYE5Q74XUVCUSEKEBR7UCHEUUEK72N7I7KJ6JH-1",
                                    "XLM",
                                    "BTC-GDPJALI4AZKUU2W426U5WKMAT6CN3AJRPIIRYR2YM54TL2GDWO5O2MZM-1",
                                    "LMX-GCCYA4YHAS5QSNWEXGLPV5GQPOMOUFNLDT2W35YUHS5R3VLOPZZQGZ4O-1",
                                    "yUSDC-GDGTVWSM4MGS4T7Z6W4RPWOCHE2I6RDFCIFZGS3DOA63LWQTRNZNTTFF-2"
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'asset'. Not supported asset.",
                                    "status": 400
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/offer/{offerId}": {
            "get": {
                "tags": [
                    "Offer Info API"
                ],
                "summary": "Offer details",
                "operationId": "queryOfferDetails",
                "description": "Returns details for a given offer",
                "cost": 10,
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    },
                    {
                        "name": "offerId",
                        "$ref": "#/components/parameters/offerId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Offer details fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "account": {
                                            "$ref": "#/components/schemas/AccountAddress"
                                        },
                                        "amount": {
                                            "description": "Offer amount",
                                            "type": "string"
                                        },
                                        "buying": {
                                            "$ref": "#/components/schemas/Asset"
                                        },
                                        "created": {
                                            "description": "Valid creation timestamp",
                                            "$ref": "#/components/schemas/Timestamp"
                                        },
                                        "id": {
                                            "description": "Unique offer identifier",
                                            "type": "string"
                                        },
                                        "price": {
                                            "description": "Price",
                                            "type": "number"
                                        },
                                        "selling": {
                                            "$ref": "#/components/schemas/Asset"
                                        },
                                        "trades": {
                                            "description": "Total number of trades",
                                            "type": "integer"
                                        },
                                        "updated": {
                                            "description": "Valid update timestamp",
                                            "$ref": "#/components/schemas/Timestamp"
                                        }
                                    }
                                },
                                "example": {
                                    "id": "1734248586",
                                    "account": "GDWTREDWMOHMB56OBYR7OUURR2ER6CXMR7RDPRTQWD2DD5PYUH2QCFQY",
                                    "created": 1745669691,
                                    "selling": "XLM",
                                    "buying": "WXT-GASBLVHS5FOABSDNW5SPPH3QRJYXY5JHA2AOA2QHH2FJLZBRXSG4SWXT-1",
                                    "amount": "0",
                                    "updated": 1746173766,
                                    "price": 127.74328709026341,
                                    "trades": 5
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                }]
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Not found. Offer with current id wasn't found.",
                                    "status": 404
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/offer/{offerId}/history/trades": {
            "get": {
                "tags": [
                    "Offer Info API"
                ],
                "summary": "Offer trades history",
                "operationId": "queryOfferTrades",
                "description": "Returns the trades history for a given offer identifier",
                "cost": 10,
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    },
                    {
                        "name": "offerId",
                        "$ref": "#/components/parameters/offerId"
                    },
                    {
                        "name": "order",
                        "$ref": "#/components/parameters/order"
                    },
                    {
                        "name": "limit",
                        "$ref": "#/components/parameters/limit"
                    },
                    {
                        "name": "cursor",
                        "$ref": "#/components/parameters/cursor"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Trades history fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ListApiResponse"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "_embedded": {
                                                    "type": "object",
                                                    "properties": {
                                                        "records": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/components/schemas/OfferTrade"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/explorer/public/offer/1734248586/history/trades?skip=0&order=desc&limit=2"
                                        },
                                        "prev": {
                                            "href": "/explorer/public/offer/1734248586/history/trades?skip=0&order=asc&limit=2&cursor=7499147236803084340"
                                        },
                                        "next": {
                                            "href": "/explorer/public/offer/1734248586/history/trades?skip=0&order=desc&limit=2"
                                        }
                                    },
                                    "_embedded": {
                                        "records": [
                                            {
                                                "id": "7499114848454705162",
                                                "paging_token": "7499114848454705162",
                                                "ts": 1746023737,
                                                "operation": "244192478738067457",
                                                "offer": "1734248586",
                                                "seller": "GDWTREDWMOHMB56OBYR7OUURR2ER6CXMR7RDPRTQWD2DD5PYUH2QCFQY",
                                                "sold_asset": "WXT-GASBLVHS5FOABSDNW5SPPH3QRJYXY5JHA2AOA2QHH2FJLZBRXSG4SWXT-1",
                                                "sold_amount": "26503401",
                                                "buyer": "GCO45COWIBDZEGJ3DRGDGCCCJXK777F2S6D6HXQKXVB3EKQVCQU7B2WA",
                                                "bought_asset": "XLM",
                                                "bought_amount": "205351",
                                                "price": 0.00774809995139869
                                            },
                                            {
                                                "id": "7499143762174541871",
                                                "paging_token": "7499143762174541871",
                                                "ts": 1746030469,
                                                "operation": "244197521029910529",
                                                "offer": "1734248586",
                                                "seller": "GDWTREDWMOHMB56OBYR7OUURR2ER6CXMR7RDPRTQWD2DD5PYUH2QCFQY",
                                                "sold_asset": "WXT-GASBLVHS5FOABSDNW5SPPH3QRJYXY5JHA2AOA2QHH2FJLZBRXSG4SWXT-1",
                                                "sold_amount": "770230",
                                                "buyer": "GBLVLKGRDU66WLWY4XRORJXCC4LDZ347AQTUYBEPBABIZTVITW2OAGIP",
                                                "bought_asset": "XLM",
                                                "bought_amount": "5969",
                                                "price": 0.007749633226438856
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'offerId'. Negative offer id.",
                                    "status": 400
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/xlm-price": {
            "get": {
                "tags": [
                    "Price API"
                ],
                "summary": "XLM price history",
                "operationId": "getDailyPrices",
                "description": "Returns daily price for XLM",
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "XLM price history fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "type": "number"
                                        }
                                    }
                                },
                                "example": [
                                    [
                                        1745971200,
                                        0.27563
                                    ],
                                    [
                                        1745884800,
                                        0.280598
                                    ],
                                    [
                                        1745798400,
                                        0.285796
                                    ],
                                    [
                                        1745712000,
                                        0.28649
                                    ],
                                    [
                                        1745625600,
                                        0.290878
                                    ],
                                    [
                                        1745539200,
                                        0.282852
                                    ],
                                    [
                                        1745452800,
                                        0.270598
                                    ],
                                    [
                                        1745366400,
                                        0.268797
                                    ],
                                    [
                                        1745280000,
                                        0.253889
                                    ],
                                    [
                                        1745193600,
                                        0.254707
                                    ]
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/relations/{account}": {
            "get": {
                "tags": [
                    "Relation Info API"
                ],
                "summary": "Account relation list",
                "operationId": "queryAccountRelations",
                "description": "Returns a list of relation for a given account",
                "cost": 10,
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    },
                    {
                        "name": "account",
                        "$ref": "#/components/parameters/account"
                    },
                    {
                        "name": "asset-array",
                        "$ref": "#/components/parameters/asset-array"
                    },
                    {
                        "name": "order",
                        "$ref": "#/components/parameters/order"
                    },
                    {
                        "name": "limit",
                        "$ref": "#/components/parameters/limit"
                    },
                    {
                        "name": "cursor",
                        "$ref": "#/components/parameters/cursor"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account relation list fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ListApiResponse"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "_embedded": {
                                                    "type": "object",
                                                    "properties": {
                                                        "records": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/components/schemas/RelationInfo"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/explorer/public/relations/GBSL3NTDWH5G6E53STFQKO37ENKE2BOLHGSCHLFERE57IQ2D6NF3IQ2A?order=desc&limit=2"
                                        },
                                        "prev": {
                                            "href": "/explorer/public/relations/GBSL3NTDWH5G6E53STFQKO37ENKE2BOLHGSCHLFERE57IQ2D6NF3IQ2A?order=asc&limit=2&cursor=000186bc00c46b8300c40995"
                                        },
                                        "next": {
                                            "href": "/explorer/public/relations/GBSL3NTDWH5G6E53STFQKO37ENKE2BOLHGSCHLFERE57IQ2D6NF3IQ2A?order=desc&limit=2&cursor=000186a000c4099500197d81"
                                        }
                                    },
                                    "_embedded": {
                                        "records": [
                                            {
                                                "accounts": [
                                                    "GBSL3NTDWH5G6E532TFQKO37ENKE2BOL5GSCHLFERE57IQ2D6NF3IQ2A",
                                                    "GA6H66VCFV2I44ERGV6VBH2UXQHDN4ZDY2G7EMIPITRYPNUH6R6COOLN"
                                                ],
                                                "created": 1683092335,
                                                "id": 55287305833023896,
                                                "trades": 0,
                                                "transfers": [
                                                    12,
                                                    3
                                                ],
                                                "type": 262149,
                                                "updated": 1728982067,
                                                "volumes": [
                                                    {
                                                        "amount": 172102292,
                                                        "asset": "XLM"
                                                    }
                                                ],
                                                "paging_token": "000186bc00c46b8300c40995"
                                            },
                                            {
                                                "accounts": [
                                                    "GDQ75AS5VSH5ZHZI3P4TAVAOOSNH1346KXJOPZVQMMS27KNCC5TOQEXP",
                                                    "GBSL3NTDWH5G6E532TFQKO37ENKE2BOL5GSCHLFERE57IQ2D6NF3IQ2A"
                                                ],
                                                "created": 1682696885,
                                                "id": 55179630991736190,
                                                "trades": 0,
                                                "transfers": [
                                                    1,
                                                    0
                                                ],
                                                "type": 5,
                                                "updated": 1682696885,
                                                "volumes": [
                                                    {
                                                        "amount": 1000000000,
                                                        "asset": "XLM"
                                                    }
                                                ],
                                                "paging_token": "000186a000c4099500197d81"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'account'. Invalid account public key.",
                                    "status": 400
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/relations/{account}/stats": {
            "get": {
                "tags": [
                    "Relation Info API"
                ],
                "summary": "Account relations statistics",
                "operationId": "queryAccountRelationsStats",
                "description": "Returns relations statistics for a given account with at least one asset",
                "cost": 10,
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    },
                    {
                        "name": "account",
                        "$ref": "#/components/parameters/account"
                    },
                    {
                        "name": "asset-array",
                        "required": true,
                        "$ref": "#/components/parameters/asset-array"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account relation statistics fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "account": {
                                            "$ref": "#/components/schemas/AccountAddress"
                                        },
                                        "relations": {
                                            "description": "Number of relations",
                                            "type": "number"
                                        },
                                        "volumes": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "asset": {
                                                        "$ref": "#/components/schemas/Asset"
                                                    },
                                                    "amount": {
                                                        "type": "number"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "accounts": "GBSL3NTDWH5G6E532TFQKO37ENKE2BOL5GSCHLFERE57IQ2D6NF3IQ2A",
                                    "relations": 22,
                                    "volumes": [
                                        {
                                            "amount": 1471219709,
                                            "asset": "XLM"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'account'. Invalid account public key.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'asset'. Missing asset selector. At least one asset is required.",
                                    "status": 400
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/contract-stats": {
            "get": {
                "operationId": "queryGeneralSorobanStats",
                "summary": "Contract statistics",
                "description": "Returns contract statistics",
                "cost": 10,
                "tags": [
                    "Contract statistics"
                ],
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contract statistics loaded",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "invocations": {
                                            "type": "number"
                                        },
                                        "payments": {
                                            "type": "number"
                                        },
                                        "sac": {
                                            "type": "number"
                                        },
                                        "wasm": {
                                            "type": "number"
                                        }
                                    }
                                },
                                "example": {
                                    "invocations": 19320049,
                                    "payments": 1617643,
                                    "sac": 1352,
                                    "wasm": 4086
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/contract-stats-history": {
            "get": {
                "operationId": "querySorobanInteractionHistory",
                "summary": "Contract statistics history",
                "description": "Returns statistics history",
                "cost": 10,
                "tags": [
                    "Contract statistics"
                ],
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contract statistics history loaded",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "avg_invoke_time": {
                                            "type": "number"
                                        },
                                        "avg_nonrefundable_fee": {
                                            "type": "number"
                                        },
                                        "avg_refundable_fee": {
                                            "type": "number"
                                        },
                                        "avg_rent_fee": {
                                            "type": "number"
                                        },
                                        "contracts_created\"": {
                                            "type": "number"
                                        },
                                        "total_emit_event": {
                                            "type": "number"
                                        },
                                        "total_invocations": {
                                            "type": "number"
                                        },
                                        "total_ledger_read_byte": {
                                            "type": "string"
                                        },
                                        "total_ledger_write_byte": {
                                            "type": "number"
                                        },
                                        "total_mem_byte": {
                                            "type": "string"
                                        },
                                        "total_nonrefundable_fee": {
                                            "type": "string"
                                        },
                                        "total_read_code_byte": {
                                            "type": "string"
                                        },
                                        "total_read_entry": {
                                            "type": "number"
                                        },
                                        "total_refundable_fee": {
                                            "type": "string"
                                        },
                                        "total_rent_fee": {
                                            "type": "string"
                                        },
                                        "total_subinvocations": {
                                            "type": "number"
                                        },
                                        "total_uploads": {
                                            "type": "number"
                                        },
                                        "total_write_entry": {
                                            "type": "number"
                                        },
                                        "ts": {
                                            "description": "Validation timestamp",
                                            "$ref": "#/components/schemas/Timestamp"
                                        }
                                    }
                                },
                                "example": {
                                    "contracts_created": 43,
                                    "total_read_entry": 1502443,
                                    "total_write_entry": 838446,
                                    "total_ledger_read_byte": "6407293500",
                                    "total_ledger_write_byte": 386519064,
                                    "total_read_code_byte": "5919010396",
                                    "total_mem_byte": "742366975112",
                                    "total_emit_event": 151199,
                                    "avg_invoke_time": 582,
                                    "total_uploads": 0,
                                    "total_invocations": 275662,
                                    "total_subinvocations": 273057,
                                    "total_nonrefundable_fee": "43124515329",
                                    "total_refundable_fee": "4770344880",
                                    "total_rent_fee": "4387293932",
                                    "avg_nonrefundable_fee": 156440,
                                    "avg_refundable_fee": 17305,
                                    "avg_rent_fee": 15915,
                                    "ts": 174985920
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/contract-fees-history": {
            "get": {
                "operationId": "queryContractFeeStatHistory",
                "summary": "Contract fees statistics history",
                "description": "Returns statistics history",
                "cost": 10,
                "tags": [
                    "Contract statistics"
                ],
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contract statistics history loaded",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "avgFees": {
                                            "type": "object",
                                            "properties": {
                                                "nonrefundable": {
                                                    "type": "number"
                                                },
                                                "refundable": {
                                                    "type": "number"
                                                },
                                                "rent": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "totalFees": {
                                            "type": "object",
                                            "properties": {
                                                "nonrefundable": {
                                                    "type": "string"
                                                },
                                                "refundable": {
                                                    "type": "string"
                                                },
                                                "rent": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "ts": {
                                            "description": "Validation timestamp",
                                            "$ref": "#/components/schemas/Timestamp"
                                        }
                                    }
                                },
                                "example":  {
                                    "ts": 1749859200,
                                    "avgFees": {
                                        "nonrefundable": 156536.27642986734,
                                        "refundable": 16932.297905917818,
                                        "rent": 15528.745585347328
                                    },
                                    "totalFees": {
                                        "nonrefundable": "39775398232",
                                        "refundable": "4302446101",
                                        "rent": "3945807667"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/top-contracts/invocations": {
            "get": {
                "operationId": "queryTopContractsByInvocations",
                "summary": "Top invocations contracts",
                "description": "Returns top contracts by invocations",
                "cost": 10,
                "tags": [
                    "Contract statistics"
                ],
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Top invocations contracts loaded",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "contract": {
                                            "$ref": "#/components/schemas/ContractAddress"
                                        },
                                        "invocations": {
                                            "type": "number"
                                        }
                                    }
                                },
                                "example": [
                                    {
                                        "contract": "CAEOVFV2DNKI34XZRJVPPUMDFOAL2FW4NDTW7RGQS7ZYAGTUH7MARKPD",
                                        "invocations": 912
                                    },
                                    {
                                        "contract": "CAGG5WHOXR72BDDMLIN56Q6NP5SBJQJ73RMOOIL255FNRFWZO55MATSO",
                                        "invocations": 855
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/top-contracts/subinvocations": {
            "get": {
                "operationId": "queryTopContractsBySubInvocations",
                "summary": "Top subinvocations contracts",
                "description": "Returns top contracts by subinvocations",
                "cost": 10,
                "tags": [
                    "Contract statistics"
                ],
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Top subinvocations contracts loaded",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "contract": {
                                            "$ref": "#/components/schemas/ContractAddress"
                                        },
                                        "invocations": {
                                            "type": "number"
                                        }
                                    }
                                },
                                "example": [
                                    {
                                        "contract": "CB23WRDQWGSP6YPMY4UV5C4OW5CBTXKYN3XEATG7KJEZCXMJBYEHOUOV",
                                        "invocations": 3459776
                                    },
                                    {
                                        "contract": "CAS3J7GYLGXMF6TDJBBYYSE3HQ6BBSMLNUQ34T6TZMYMW2EVH34XOWMA",
                                        "invocations": 410883
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/tx": {
            "get": {
                "tags": [
                    "Tx API"
                ],
                "summary": "List of transactions",
                "operationId": "getAllTransactions",
                "description": "Returns list of transactions",

                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    },
                    {
                        "name": "address-array",
                        "$ref": "#/components/parameters/address-array"
                    },
                    {
                        "name": "source",
                        "description": "Applies a filter by the operation source account list (up to 50 per request)",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "minItems": 1,
                            "maxItems": 50,
                            "uniqueItems": true,
                            "items": {
                                "$ref": "#/components/schemas/AccountAddress"
                            }
                        },
                        "example": [
                            "GDPQNABQDNYXQOFOUVH3XHNC7QTAXJPVU5Q47PSARLEEUWGIJKSP7BZU"
                        ]
                    },
                    {
                        "name": "destination",
                        "description": "Applies a filter by the operation destination account list (up to 50 per request)",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "minItems": 1,
                            "maxItems": 50,
                            "uniqueItems": true,
                            "items": {
                                "$ref": "#/components/schemas/AccountAddress"
                            }
                        },
                        "example": [
                            "GBU4DDQXESGMBUDOLKZJJ56TYKAW5JYU3IG5NS7TBOYI34ZIHM5CXDMF"
                        ]
                    },
                    {
                        "name": "asset-array",
                        "$ref": "#/components/parameters/asset-array"
                    },
                    {
                        "name": "src_asset",
                        "description": "Applies a filter by the operation source asset list (up to 50 per request)",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "minItems": 1,
                            "maxItems": 50,
                            "uniqueItems": true,
                            "items": {
                                "$ref": "#/components/schemas/Asset"
                            }
                        },
                        "example": [
                            "XLM"
                        ]
                    },
                    {
                        "name": "dest_asset",
                        "description": "Applies a filter by the operation destination asset list (up to 50 per request)",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "minItems": 1,
                            "maxItems": 50,
                            "uniqueItems": true,
                            "items": {
                                "$ref": "#/components/schemas/Asset"
                            }
                        },
                        "example": [
                            "BTC-GDKIIIL2YPRSCSFAYT7FQCH4VXF34YNBIORTYCOKJK5CZ762LX2ND4L4"
                        ]
                    },
                    {
                        "name": "type",
                        "description": "Applies a filter by the transaction type list.\n\nAvailable types:\n- operation type by group name\n\n  - `payments` - Group payments including operations: CreateAccount, AccountMerge, Payment, PathPaymentStrictReceive, PathPaymentStrictSend, CreateClaimableBalance, ClaimClaimableBalance, Clawback, ClawbackClaimableBalance, Inflation\n\n  - `trustlines` - Group trustlines including operations: ChangeTrust, AllowTrust, SetTrustLineFlags\n\n  - `dex` - Group DEX trading including operations: ManageSellOffer, ManageBuyOffer, CreatePassiveSellOffer, LiquidityPoolDeposit, LiquidityPoolWithdraw\n\n  - `settings` - Group account settings including operations: CreateAccount, SetOptions, ChangeTrust, AllowTrust, AccountMerge, Inflation, ManageData, BumpSequence, BeginSponsoringFutureReserves, EndSponsoringFutureReserves, RevokeSponsorship, SetTrustLineFlags\n\n  - `soroban` - Group smart contracts including operations: InvokeHostFunction, BumpFootprintExpiration, RestoreFootprint\n\n- numeric operation type code\n\n  - `0` - CreateAccount\n\n  - `1` - Payment\n\n  - `2` - PathPaymentStrictReceive\n\n  - `3` - ManageSellOffer\n\n  - `4` - CreatePassiveSellOffer\n\n  - `5` - SetOptions\n\n  - `6` - ChangeTrust\n\n  - `7` - AllowTrust\n\n  - `8` - AccountMerge\n\n  - `9` - Inflation\n\n  - `10` - ManageData\n\n  - `11` - BumpSequence\n\n  - `12` - ManageBuyOffer\n\n  - `13` - PathPaymentStrictSend\n\n  - `14` - CreateClaimableBalance\n\n  - `15` - ClaimClaimableBalance\n\n  - `16` - BeginSponsoringFutureReserves\n\n  - `17` - EndSponsoringFutureReserves\n\n  - `18` - RevokeSponsorship\n\n  - `19` - Clawback\n\n  - `20` - ClawbackClaimableBalance\n\n  - `21` - SetTrustLineFlags\n\n  - `22` - LiquidityPoolDeposit\n\n  - `23` - LiquidityPoolWithdraw\n\n  - `24` - InvokeHostFunction\n\n  - `25` - BumpFootprintExpiration\n\n  - `26` - RestoreFootprint",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "minItems": 1,
                            "maxItems": 30,
                            "uniqueItems": true,
                            "items": {
                                "$ref": "#/components/schemas/TypeOp"
                            }
                        }
                    },
                    {
                        "name": "offer",
                        "description": "Applies a filter by the DEX offer id list (up to 50 per request)",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "minItems": 1,
                            "maxItems": 50,
                            "uniqueItems": true,
                            "items": {
                                "type": "number"
                            }
                        },
                        "example": [
                            1231233
                        ]
                    },
                    {
                        "name": "pool",
                        "description": "Applies a filter by the liquidity pool id list (up to 50 per request)",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "minItems": 1,
                            "maxItems": 50,
                            "uniqueItems": true,
                            "items": {
                                "type": "string"
                            }
                        },
                        "example": [
                            "3e24a724de6983eea010b316e179e126b18352c1db04cd09edd66ea2eab7e5cf"
                        ]
                    },
                    {
                        "name": "memo",
                        "description": "Applies a filter by memo of transaction",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "MEMO"
                    },
                    {
                        "name": "from",
                        "$ref": "#/components/parameters/from"
                    },
                    {
                        "name": "to",
                        "$ref": "#/components/parameters/to"
                    },
                    {
                        "name": "order",
                        "$ref": "#/components/parameters/order"
                    },
                    {
                        "name": "limit",
                        "$ref": "#/components/parameters/limit"
                    },
                    {
                        "name": "cursor",
                        "$ref": "#/components/parameters/cursor"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction list fetch",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ListApiResponse"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "_embedded": {
                                                    "type": "object",
                                                    "properties": {
                                                        "records": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/components/schemas/TxInfo"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/explorer/public/tx?sort=id&order=asc&limit=10"
                                        },
                                        "prev": {
                                            "href": "/explorer/public/tx?sort=id&order=desc&limit=10&cursor=12884905984"
                                        },
                                        "next": {
                                            "href": "/explorer/public/tx?sort=id&order=asc&limit=10&cursor=80607946215424"
                                        }
                                    },
                                    "_embedded": {
                                        "records": [
                                            {
                                                "id": "12884905984",
                                                "hash": "3389e9f0f1a65f19736cacf544c2e825313e8447f569233bb8db39aa607c8889",
                                                "ledger": 3,
                                                "ts": 1443633354,
                                                "protocol": 1,
                                                "body": "AAAAAAGUcmKO5465JxTSLQOQljwk2SfqAJmZSG6JH6wtqpwhAAABLAAAAAAAAAABAAAAAAAAAAEAAAALaGVsbG8gd29ybGQAAAAAAwAAAAAAAAAAAAAAABbxCy3mLg3hiTqX4VUEEp60pFOrJNxYM1JtxXTwXhY2AAAAAAvrwgAAAAAAAAAAAQAAAAAW8Qst5i4N4Yk6l+FVBBKetKRTqyTcWDNSbcV08F4WNgAAAAAN4Lazj4x61AAAAAAAAAAFAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABLaqcIQAAAEBKwqWy3TaOxoGnfm9eUjfTRBvPf34dvDA0Nf+B8z4zBob90UXtuCqmQqwMCyH+okOI3c05br3khkH0yP4kCwcE",
                                                "meta": "AAAAAQAAAAAAAAADAAAAAwAAAAMAAAADAAAAAAAAAAABlHJijueOuScU0i0DkJY8JNkn6gCZmUhuiR+sLaqcIQ3gtrOnY/7UAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAEAAAADAAAAAAAAAAABlHJijueOuScU0i0DkJY8JNkn6gCZmUhuiR+sLaqcIQ3gtrObeDzUAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAAAW8Qst5i4N4Yk6l+FVBBKetKRTqyTcWDNSbcV08F4WNgAAAAAL68IAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAQAAAADAAAAAwAAAAAAAAAAFvELLeYuDeGJOpfhVQQSnrSkU6sk3FgzUm3FdPBeFjYAAAAAC+vCAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAABAAAAAwAAAAAAAAAAFvELLeYuDeGJOpfhVQQSnrSkU6sk3FgzUm3FdPBeFjYN4Lazm3g81AAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAADAAAAAwAAAAAAAAAAAZRyYo7njrknFNItA5CWPCTZJ+oAmZlIbokfrC2qnCEN4Lazm3g81AAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAABAAAAAwAAAAAAAAAAAZRyYo7njrknFNItA5CWPCTZJ+oAmZlIbokfrC2qnCEAAAAAC+vCAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAACAAAAAwAAAAMAAAAAAAAAAAGUcmKO5465JxTSLQOQljwk2SfqAJmZSG6JH6wtqpwhAAAAAAvrwgAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAMAAAAAAAAAAAGUcmKO5465JxTSLQOQljwk2SfqAJmZSG6JH6wtqpwhAAAAAAvrwgAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
                                                "result": "M4np8PGmXxlzbKz1RMLoJTE+hEf1aSM7uNs5qmB8iIkAAAAAAAABLAAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAUAAAAAAAAAAA==",
                                                "paging_token": "12884905984"
                                            },
                                            {
                                                "id": "33505039880192",
                                                "hash": "941f4274fc85e4abe70eb694792eb7159721f377108e65d6a6cfb12a448bf11c",
                                                "ledger": 7801,
                                                "ts": 1443672701,
                                                "protocol": 1,
                                                "body": "AAAAABbxCy3mLg3hiTqX4VUEEp60pFOrJNxYM1JtxXTwXhY2AAABLAAAAAMAAAABAAAAAAAAAAEAAAATdGVzdHBvb2wsZmF1Y2V0LHNkZgAAAAADAAAAAAAAAAAAAAAAH6Ue1GOPj6Hb/ROPyIFCJpQPMujihEIvJSfK0UfMDIgAAAAAATEtAAAAAAAAAAAAAAAAALMw4P7yJTyqj6ptNh7BPyXEoT+zVwTcU4JVbGyonvgbAAAAAAExLQAAAAAAAAAAAAAAAABJlwu05Op/5x1uyrweYsyR6pTTos33hRNZe5IF6blnzwAAAAABMS0AAAAAAAAAAAHwXhY2AAAAQAs2/mrF+69XFQZbmmSSSL4oQ7+gsEB+WG2dZtmvaNrh2KUaxK6Ytyibe6LIkWhTIJidcTY02C0tUqE9VSWWlwA=",
                                                "meta": "AAAAAQAAAAAAAAAA",
                                                "result": "lB9CdPyF5KvnDraUeS63FZch83cQjmXWps+xKkSL8RwAAAAAAAABLP////8AAAADAAAAAAAAAAD////9AAAAAAAAAAD////9AAAAAAAAAAD////9AAAAAA==",
                                                "paging_token": "33505039880192"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'source'. Invalid account address.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'destination'. Invalid account address.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'asset'. Invalid asset identifier.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'src_asset'. Invalid asset identifier.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'dest_asset'. Invalid asset identifier.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'type'. Invalid type filter.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'offer'. Negative offer id.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'poolId'. Invalid pool id.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'cursor'. Invalid paging cursor.",
                                    "status": 400
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/tx/{id}": {
            "get": {
                "tags": [
                    "Tx API"
                ],
                "summary": "Receive transaction",
                "operationId": "fetchTx",
                "description": "Returns transaction for a given id or hash",
                "cost": 10,
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    },
                    {
                        "name": "id",
                        "description": "Id or hash of transaction",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "example": 12884905984
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction info",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TxInfo"
                                },
                                "example" : {
                                    "id": "12884905984",
                                    "hash": "3389e9f0f1a65f19736cacf544c2e825313e8447f569233bb8db39aa607c8889",
                                    "ledger": 3,
                                    "ts": 1443633354,
                                    "protocol": 1,
                                    "body": "AAAAAAGUcmKO5465JxTSLQOQljwk2SfqAJmZSG6JH6wtqpwhAAABLAAAAAAAAAABAAAAAAAAAAEAAAALaGVsbG8gd29ybGQAAAAAAwAAAAAAAAAAAAAAABbxCy3mLg3hiTqX4VUEEp60pFOrJNxYM1JtxXTwXhY2AAAAAAvrwgAAAAAAAAAAAQAAAAAW8Qst5i4N4Yk6l+FVBBKetKRTqyTcWDNSbcV08F4WNgAAAAAN4Lazj4x61AAAAAAAAAAFAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABLaqcIQAAAEBKwqWy3TaOxoGnfm9eUjfTRBvPf34dvDA0Nf+B8z4zBob90UXtuCqmQqwMCyH+okOI3c05br3khkH0yP4kCwcE",
                                    "meta": "AAAAAQAAAAAAAAADAAAAAwAAAAMAAAADAAAAAAAAAAABlHJijueOuScU0i0DkJY8JNkn6gCZmUhuiR+sLaqcIQ3gtrOnY/7UAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAEAAAADAAAAAAAAAAABlHJijueOuScU0i0DkJY8JNkn6gCZmUhuiR+sLaqcIQ3gtrObeDzUAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAAAW8Qst5i4N4Yk6l+FVBBKetKRTqyTcWDNSbcV08F4WNgAAAAAL68IAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAQAAAADAAAAAwAAAAAAAAAAFvELLeYuDeGJOpfhVQQSnrSkU6sk3FgzUm3FdPBeFjYAAAAAC+vCAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAABAAAAAwAAAAAAAAAAFvELLeYuDeGJOpfhVQQSnrSkU6sk3FgzUm3FdPBeFjYN4Lazm3g81AAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAADAAAAAwAAAAAAAAAAAZRyYo7njrknFNItA5CWPCTZJ+oAmZlIbokfrC2qnCEN4Lazm3g81AAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAABAAAAAwAAAAAAAAAAAZRyYo7njrknFNItA5CWPCTZJ+oAmZlIbokfrC2qnCEAAAAAC+vCAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAACAAAAAwAAAAMAAAAAAAAAAAGUcmKO5465JxTSLQOQljwk2SfqAJmZSG6JH6wtqpwhAAAAAAvrwgAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAMAAAAAAAAAAAGUcmKO5465JxTSLQOQljwk2SfqAJmZSG6JH6wtqpwhAAAAAAvrwgAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
                                    "result": "M4np8PGmXxlzbKz1RMLoJTE+hEf1aSM7uNs5qmB8iIkAAAAAAAABLAAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAUAAAAAAAAAAA=="
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                }]
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Not found. Transaction not found on the public ledger.",
                                    "status": 404
                                },{
                                    "error": "Not found. Transaction not found on the testnet ledger.",
                                    "status": 404
                                }]
                            }
                        }
                    }
                }
            }
        },
        "/explorer/{network}/ledger/{sequence}/tx": {
            "get": {
                "tags": [
                    "Tx API"
                ],
                "summary": "Receive ledger transactions",
                "operationId": "fetchLedgerTransactions",
                "description": "Returns list of transactions for a given ledger sequence",
                "cost": 10,
                "parameters": [
                    {
                        "name": "network",
                        "$ref": "#/components/parameters/network"
                    },
                    {
                        "name": "sequence",
                        "$ref": "#/components/parameters/sequence"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All transactions for a given ledger sequence",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TxInfo"
                                    }
                                },
                                "example": [
                                    {
                                        "id": "241848650660057088",
                                        "hash": "01ad7ba81fd94566bc5ceddd3c98cee8f7429a0f1fec85320d41273fd57db522",
                                        "ledger": 56309777,
                                        "ts": 1742893862,
                                        "protocol": 22,
                                        "body": "AAAAAgAAAADzrdicBkHrXNGUWQufqW0a5mPbr1WCQ+qddQYMdBfdxQAEHrADJqe2ACl2lwAAAAEAAAAAAAAAAAAAAABn4nNBAAAAAAAAAAEAAAABAAAAAIGcE2QPeVU/dIBvs/91g7ckWnlsftTBSS5z66wDsDgtAAAADAAAAAAAAAABVkVMTwAAAADZyMKQhSslQB+XiM/cOX7KIx+Q+JfpgDD4dBInpIgizQAAABSYW0UjAJiWgAz3rrQAAAAAZfQVOQAAAAAAAAACdBfdxQAAAEA3p8wjSxK8Whq6Pcvwhd8Uez1GrqXdc78NbG+IKQ568FlqX7Zf6gvtVv2ZljPVMZiyetj9jRkMOJsyRUpbAkkCA7A4LQAAAEAdcPq9gbY4mTeSKh/jQxratdkfbTQrIGIPtilCKWs5bVM20LZutJHvEzAYrXhORr0q0MFgT7cWQpm/++plKn0K",
                                        "meta": "AAAAAwAAAAAAAAACAAAAAwNbOBEAAAAAAAAAAPOt2JwGQetc0ZRZC5+pbRrmY9uvVYJD6p11Bgx0F93FAAAAAANfc8UDJqe2ACl2lgAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAMAAAAAA1s4EAAAAABn4nMgAAAAAAAAAAEDWzgRAAAAAAAAAADzrdicBkHrXNGUWQufqW0a5mPbr1WCQ+qddQYMdBfdxQAAAAADX3PFAyantgApdpcAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAADAAAAAANbOBEAAAAAZ+JzJgAAAAAAAAABAAAABgAAAAMDWzgQAAAAAgAAAACBnBNkD3lVP3SAb7P/dYO3JFp5bH7UwUkuc+usA7A4LQAAAABl9BU5AAAAAAAAAAFWRUxPAAAAANnIwpCFKyVAH5eIz9w5fsojH5D4l+mAMPh0EiekiCLNAAAAAPWMOsEM9653AJiWgAAAAAAAAAAAAAAAAAAAAAEDWzgRAAAAAgAAAACBnBNkD3lVP3SAb7P/dYO3JFp5bH7UwUkuc+usA7A4LQAAAABl9BU5AAAAAAAAAAFWRUxPAAAAANnIwpCFKyVAH5eIz9w5fsojH5D4l+mAMPh0EiekiCLNAAAAAPJXfxkM9660AJiWgAAAAAAAAAAAAAAAAAAAAAMDWzgQAAAAAQAAAACBnBNkD3lVP3SAb7P/dYO3JFp5bH7UwUkuc+usA7A4LQAAAAFWRUxPAAAAANnIwpCFKyVAH5eIz9w5fsojH5D4l+mAMPh0EiekiCLNAAADOL/qXlN//////////wAAAAEAAAABAAAAVhAMj9EAAALSH4gvIgAAAAAAAAAAAAAAAQNbOBEAAAABAAAAAIGcE2QPeVU/dIBvs/91g7ckWnlsftTBSS5z66wDsDgtAAAAAVZFTE8AAAAA2cjCkIUrJUAfl4jP3Dl+yiMfkPiX6YAw+HQSJ6SIIs0AAAM4v+peU3//////////AAAAAQAAAAEAAABVyk0u9QAAAtIfiC8iAAAAAAAAAAAAAAADA1s4EAAAAAAAAAAAgZwTZA95VT90gG+z/3WDtyRaeWx+1MFJLnPrrAOwOC0AAAAEEr5ptAMm6qAAAABXAAAABwAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAQAAACdlTH+vAAAAA/SxzvgAAAACAAAAAAAAAAAAAAAAAAAAAwAAAAADWi4KAAAAAGfcfK8AAAAAAAAAAQNbOBEAAAAAAAAAAIGcE2QPeVU/dIBvs/91g7ckWnlsftTBSS5z66wDsDgtAAAABBK+abQDJuqgAAAAVwAAAAcAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAEAAAAnZUx/rwAAAAPxfRNQAAAAAgAAAAAAAAAAAAAAAAAAAAMAAAAAA1ouCgAAAABn3HyvAAAAAAAAAAAAAAAA",
                                        "result": "Aa17qB/ZRWa8XO3dPJjO6PdCmg8f7IUyDUEnP9V9tSIAAAAAAAAAZAAAAAAAAAABAAAAAAAAAAwAAAAAAAAAAAAAAAEAAAAAgZwTZA95VT90gG+z/3WDtyRaeWx+1MFJLnPrrAOwOC0AAAAAZfQVOQAAAAAAAAABVkVMTwAAAADZyMKQhSslQB+XiM/cOX7KIx+Q+JfpgDD4dBInpIgizQAAAADyV38ZDPeutACYloAAAAAAAAAAAAAAAAA="
                                    },
                                    {
                                        "id": "241848650660061184",
                                        "hash": "1d0c355c63ae39ac17fb2bb8a24bef92023b51cddcfc07956c22520f9bb21a96",
                                        "ledger": 56309777,
                                        "ts": 1742893862,
                                        "protocol": 22,
                                        "body": "AAAAAgAAAACztSZzEKhNNJLnteFDXFl9ZySydtuiryoRNvFgYhnLWgAEHrADJqfNACdr+QAAAAEAAAAAAAAAAAAAAABn4nNBAAAAAAAAAAEAAAABAAAAAIGcE2QPeVU/dIBvs/91g7ckWnlsftTBSS5z66wDsDgtAAAAAwAAAAFWRUxPAAAAANnIwpCFKyVAH5eIz9w5fsojH5D4l+mAMPh0EiekiCLNAAAAAAAAAQA7iEQzAJiWgAsS7zkAAAAAZfQUgAAAAAAAAAACYhnLWgAAAEAR6FZsK/phHAJP5Ezdbs7Fo2ESL0vuCjVsD8XeEYSaIGH9i18oLE9+wmDBL9U+ELkEwUaEvjHieYG7iZ4Rl4gJA7A4LQAAAECvb2HRg7+GeIuCps+dw8wB45boF93eTBl6EjYTOqaNdumEnDBAa3J/8gJbTgfu5Hhe28GwtyCBWxQtDnEYalIG",
                                        "meta": "AAAAAwAAAAAAAAACAAAAAwNbOBEAAAAAAAAAALO1JnMQqE00kue14UNcWX1nJLJ226KvKhE28WBiGctaAAAAAAR/ZxsDJqfNACdr+AAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAMAAAAAA1s4EAAAAABn4nMgAAAAAAAAAAEDWzgRAAAAAAAAAACztSZzEKhNNJLnteFDXFl9ZySydtuiryoRNvFgYhnLWgAAAAAEf2cbAyanzQAna/kAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAADAAAAAANbOBEAAAAAZ+JzJgAAAAAAAAABAAAABgAAAAMDWzgQAAAAAgAAAACBnBNkD3lVP3SAb7P/dYO3JFp5bH7UwUkuc+usA7A4LQAAAABl9BSAAAAAAVZFTE8AAAAA2cjCkIUrJUAfl4jP3Dl+yiMfkPiX6YAw+HQSJ6SIIs0AAAAAAAABAtYe+vUAmJaACy7QvAAAAAAAAAAAAAAAAAAAAAEDWzgRAAAAAgAAAACBnBNkD3lVP3SAb7P/dYO3JFp5bH7UwUkuc+usA7A4LQAAAABl9BSAAAAAAVZFTE8AAAAA2cjCkIUrJUAfl4jP3Dl+yiMfkPiX6YAw+HQSJ6SIIs0AAAAAAAABADuIRCwAmJaACxLvOQAAAAAAAAAAAAAAAAAAAAMDWzgRAAAAAAAAAACBnBNkD3lVP3SAb7P/dYO3JFp5bH7UwUkuc+usA7A4LQAAAAQSvmm0AybqoAAAAFcAAAAHAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAABAAAAJ2VMf68AAAAD8X0TUAAAAAIAAAAAAAAAAAAAAAAAAAADAAAAAANaLgoAAAAAZ9x8rwAAAAAAAAABA1s4EQAAAAAAAAAAgZwTZA95VT90gG+z/3WDtyRaeWx+1MFJLnPrrAOwOC0AAAAEEr5ptAMm6qAAAABXAAAABwAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAQAAACdkJ4OTAAAAA/F9E1AAAAACAAAAAAAAAAAAAAAAAAAAAwAAAAADWi4KAAAAAGfcfK8AAAAAAAAAAwNbOBEAAAABAAAAAIGcE2QPeVU/dIBvs/91g7ckWnlsftTBSS5z66wDsDgtAAAAAVZFTE8AAAAA2cjCkIUrJUAfl4jP3Dl+yiMfkPiX6YAw+HQSJ6SIIs0AAAM4v+peU3//////////AAAAAQAAAAEAAABVyk0u9QAAAtIfiC8iAAAAAAAAAAAAAAABA1s4EQAAAAEAAAAAgZwTZA95VT90gG+z/3WDtyRaeWx+1MFJLnPrrAOwOC0AAAABVkVMTwAAAADZyMKQhSslQB+XiM/cOX7KIx+Q+JfpgDD4dBInpIgizQAAAzi/6l5Tf/////////8AAAABAAAAAQAAAFXKTS71AAACz4TxeFkAAAAAAAAAAAAAAAAAAAAA",
                                        "result": "HQw1XGOuOawX+yu4okvvkgI7Uc3c/AeVbCJSD5uyGpYAAAAAAAAAZAAAAAAAAAABAAAAAAAAAAMAAAAAAAAAAAAAAAEAAAAAgZwTZA95VT90gG+z/3WDtyRaeWx+1MFJLnPrrAOwOC0AAAAAZfQUgAAAAAFWRUxPAAAAANnIwpCFKyVAH5eIz9w5fsojH5D4l+mAMPh0EiekiCLNAAAAAAAAAQA7iEQsAJiWgAsS7zkAAAAAAAAAAAAAAAA="
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "error": "Bad request. Invalid parameter: 'network'. Unknown network name.",
                                    "status": 400
                                },{
                                    "error": "Bad request. Invalid parameter: 'sequence'. Invalid ledger sequence",
                                    "status": 400
                                }]
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AccountAddress": {
                "description": "Account address (ED25519 public key)",
                "type": "string",
                "pattern": "/^G[ABCDEFGHIJKLMNOPQRSTUVWXYZ234567]{55}$/",
                "example": "GDPQNABQDNYXQOFOUVH3XHNC7QTAXJPVU5Q47PSARLEEUWGIJKSP7BZU"
            },
            "ContractAddress": {
                "description": "ED25519-encoded contract address",
                "type": "string",
                "pattern": "/^C[ABCDEFGHIJKLMNOPQRSTUVWXYZ234567]{55}$/",
                "example": "CDGFGODCSQQQFFBUEJGS7NIDUA5OQKBRFQ57IOKZAZIEJDNQNHS3RV5O"
            },
            "Asset": {
                "description": "Asset descriptor in {CODE}-{ISSUER}-{TYPE} format (or \"XLM\" for Stellar lumens)",
                "type": "string",
                "example": "BTC-GDKIIIL2YPRSCSFAYT7FQCH4VXF34YNBIORTYCOKJK5CZ762LX2ND4L4-1"
            },
            "Timestamp": {
                "description": "Ledger timestamp in UNIX format",
                "type": "integer",
                "minimum": 0,
                "example": 1731402776
            },
            "Network": {
                "description": "Stellar network",
                "type": "string",
                "enum": [
                    "public",
                    "testnet"
                ],
                "example": "public"
            },
            "Tags": {
                "description": "List of directory tags",
                "type": "array",
                "uniqueItems": true,
                "items": {
                    "type": "string",
                    "enum": [
                        "exchange",
                        "anchor",
                        "issuer",
                        "wallet",
                        "custodian",
                        "malicious",
                        "unsafe",
                        "personal",
                        "sdf",
                        "memo-required",
                        "airdrop",
                        "obsolete-inflation-pool"
                    ]
                },
                "example": [
                    "sdf",
                    "custodian"
                ]
            },
            "Hash": {
                "description": "SHA256 hash",
                "type": "string",
                "pattern": "/^[0-9a-f]{64}$/",
                "example": "df88820e231ad8f3027871e5dd3cf45491d7b7735e785731466bfc2946008608"
            },
            "ListApiResponse": {
                "description": "List API response",
                "type": "object",
                "properties": {
                    "_links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "$ref": "#/components/schemas/ListApiResponseNavLink"
                            },
                            "prev": {
                                "$ref": "#/components/schemas/ListApiResponseNavLink"
                            },
                            "next": {
                                "$ref": "#/components/schemas/ListApiResponseNavLink"
                            }
                        }
                    },
                    "_embedded": {
                        "type": "object",
                        "properties": {
                            "records": {
                                "type": "array"
                            }
                        }
                    }
                }
            },
            "ListApiResponseNavLink": {
                "type": "object",
                "properties": {
                    "href": {
                        "type": "string"
                    }
                }
            },
            "ResultsSortOrder": {
                "description": "Results sorting order",
                "type": "string",
                "enum": [
                    "asc",
                    "desc"
                ],
                "example": "desc"
            },
            "ResultsLimit": {
                "description": "Results data page size",
                "type": "number",
                "minimum": 1,
                "maximum": 200,
                "default": 10,
                "example": 10
            },
            "HugeResultsLimit": {
                "description": "Results data page size",
                "type": "number",
                "minimum": 1,
                "maximum": 1000,
                "default": 1000,
                "example": 100
            },
            "AccountInfo": {
                "description": "ED25519-encoded account address",
                "type": "object",
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/AccountAddress"
                    },
                    "creator": {
                        "$ref": "#/components/schemas/AccountAddress"
                    },
                    "activity": {
                        "description": "Monthly and yearly account activity [ 'none', 'low', 'moderate', 'high', 'very high' ]",
                        "type": "object",
                        "properties": {
                            "monthly": {
                                "type": "string"
                            },
                            "yearly": {
                                "type": "string"
                            }
                        }
                    },
                    "assets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Asset"
                        }
                    },
                    "payments": {
                        "description": "Number of payments for a given account",
                        "type": "number"
                    },
                    "trades": {
                        "description": "Number of DEX trades for a given account",
                        "type": "number"
                    },
                    "created": {
                        "$ref": "#/components/schemas/Timestamp"
                    }
                }
            },
            "AccountTrade": {
                "description": "Account trade info",
                "type": "object",
                "properties": {
                    "bought_amount": {
                        "description": "Amount of bought trading asset",
                        "type": "string"
                    },
                    "bought_asset": {
                        "description": "Bought trading asset",
                        "$ref": "#/components/schemas/Asset"
                    },
                    "buyer": {
                        "description": "Buyer's account address",
                        "$ref": "#/components/schemas/AccountAddress"
                    },
                    "id": {
                        "description": "Trade unique id",
                        "type": "string"
                    },
                    "offer": {
                        "description": "Unique offer id",
                        "type": "string"
                    },
                    "operation": {
                        "description": "Operation unique id",
                        "type": "string"
                    },
                    "price": {
                        "description": "Price",
                        "type": "string"
                    },
                    "seller": {
                        "description": "Seller's account address",
                        "$ref": "#/components/schemas/AccountAddress"
                    },
                    "sold_amount": {
                        "description": "Amount of sold trading asset",
                        "type": "string"
                    },
                    "sold_asset": {
                        "description": "Sold trading asset",
                        "type": "string"
                    },
                    "ts": {
                        "description": "Timestamp of the first recorder operation with asset",
                        "$ref": "#/components/schemas/Timestamp"
                    },
                    "paging_token": {
                        "description": "Paging token",
                        "type": "number"
                    }
                }
            },
            "AccountClaimableBalance": {
                "description": "Claimable balance of tokens for account address",
                "type": "object",
                "properties": {
                    "amount": {
                        "description": "Amount of claim asset",
                        "type": "string"
                    },
                    "asset": {
                        "description": "Claim asset",
                        "$ref": "#/components/schemas/Asset"
                    },
                    "claimants": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "destination": {
                                    "$ref": "#/components/schemas/AccountAddress"
                                },
                                "predicate": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "sponsor": {
                        "$ref": "#/components/schemas/AccountAddress"
                    },
                    "value": {
                        "type": "number"
                    },
                    "created": {
                        "description": "Valid timestamp",
                        "$ref": "#/components/schemas/Timestamp"
                    },
                    "paging_token": {
                        "description": "Paging token",
                        "type": "number"
                    }
                }
            },
            "TrustlinesValue": {
                "description": "Trustlines value for account",
                "type": "object",
                "properties": {
                    "asset": {
                        "type": "string",
                        "example": "XLM"
                    },
                    "balance": {
                        "type": "string",
                        "example": "93402431"
                    },
                    "value": {
                        "type": "integer",
                        "example": 26850644
                    },
                    "flags": {
                        "type": "integer",
                        "example": 1
                    }
                }
            },
            "AssetInfo": {
                "description": "General asset info",
                "type": "object",
                "properties": {
                    "asset": {
                        "description": "Asset identifier",
                        "$ref": "#/components/schemas/Asset"
                    },
                    "traded_amount": {
                        "description": "Total traded amount (in stroops)",
                        "type": "number"
                    },
                    "payments_amount": {
                        "description": "Total payments amount (in stroops)",
                        "type": "number"
                    },
                    "created": {
                        "description": "Timestamp of the first recorder operation with asset",
                        "$ref": "#/components/schemas/Timestamp"
                    },
                    "supply": {
                        "description": "Total issued asset supply",
                        "type": "number"
                    },
                    "trustlines": {
                        "description": "Trustlines established to an asset",
                        "type": "object",
                        "properties": {
                            "total": {
                                "description": "Total number of trustlines",
                                "type": "integer"
                            },
                            "authorized": {
                                "description": "Trustlines authorized by the issuer",
                                "type": "integer"
                            },
                            "funded": {
                                "description": "Trustlines with non-zero balance",
                                "type": "integer"
                            }
                        }
                    },
                    "trades": {
                        "description": "Total number of trades",
                        "type": "number"
                    },
                    "payments": {
                        "description": "Total number of payments",
                        "type": "number"
                    },
                    "domain": {
                        "description": "Associated `home_domain`",
                        "type": "string"
                    },
                    "tomlInfo": {
                        "description": "Asset information from stellar.toml file",
                        "type": "object"
                    },
                    "rating": {
                        "description": "Composite asset rating",
                        "$ref": "#/components/schemas/AssetRatingStat",
                        "type": "object"
                    },
                    "paging_token": {
                        "description": "Paging token",
                        "type": "number"
                    }
                }
            },
            "AssetTrade": {
                "description": "Asset trade info",
                "type": "object",
                "properties": {
                    "bought_amount": {
                        "description": "Amount of bought trading asset",
                        "type": "string"
                    },
                    "bought_asset": {
                        "description": "Bought trading asset",
                        "$ref": "#/components/schemas/Asset"
                    },
                    "buyer": {
                        "description": "Buyer's account address",
                        "$ref": "#/components/schemas/AccountAddress"
                    },
                    "id": {
                        "description": "Trade unique id",
                        "type": "string"
                    },
                    "offer": {
                        "description": "Unique offer id",
                        "type": "string"
                    },
                    "operation": {
                        "description": "Operation unique id",
                        "type": "string"
                    },
                    "price": {
                        "description": "Price",
                        "type": "string"
                    },
                    "seller": {
                        "description": "Seller's account address",
                        "$ref": "#/components/schemas/AccountAddress"
                    },
                    "sold_amount": {
                        "description": "Amount of sold trading asset",
                        "type": "string"
                    },
                    "sold_asset": {
                        "description": "Sold trading asset",
                        "type": "string"
                    },
                    "ts": {
                        "description": "Timestamp of the first recorder operation with asset",
                        "$ref": "#/components/schemas/Timestamp"
                    },
                    "paging_token": {
                        "description": "Paging token",
                        "type": "number"
                    }
                }
            },
            "AssetStat": {
                "description": "General asset statistics",
                "type": "object",
                "properties": {
                    "asset": {
                        "description": "Asset identifier",
                        "$ref": "#/components/schemas/Asset"
                    },
                    "contract": {
                        "description": "Asset contract",
                        "$ref": "#/components/schemas/ContractAddress"
                    },
                    "created": {
                        "description": "Timestamp of the first recorder operation with asset",
                        "$ref": "#/components/schemas/Timestamp"
                    },
                    "home_domain": {
                        "description": "Associated `home_domain`",
                        "type": "string"
                    },
                    "payments": {
                        "description": "Total number of payments",
                        "type": "number"
                    },
                    "payments_amount": {
                        "description": "Total payments amount (in stroops)",
                        "type": "number"
                    },
                    "price": {
                        "description": "Current price of asset",
                        "type": "number"
                    },
                    "price7d": {
                        "description": "Asset price for the last 7 days",
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    },
                    "rating": {
                        "description": "Composite asset rating",
                        "$ref": "#/components/schemas/AssetRatingStat"
                    },
                    "supply": {
                        "description": "Total issued asset supply",
                        "type": "number"
                    },
                    "toml_info": {
                        "description": "Asset information from stellar.toml file",
                        "type": "object"
                    },
                    "traded_amount": {
                        "description": "Total traded amount (in stroops)",
                        "type": "number"
                    },
                    "trades": {
                        "description": "Total number of trades",
                        "type": "number"
                    },
                    "trustlines": {
                        "description": "Trustlines established to an asset",
                        "type": "object",
                        "properties": {
                            "total": {
                                "description": "Total number of trustlines",
                                "type": "integer"
                            },
                            "authorized": {
                                "description": "Trustlines authorized by the issuer",
                                "type": "integer"
                            },
                            "funded": {
                                "description": "Trustlines with non-zero balance",
                                "type": "integer"
                            }
                        }
                    },
                    "volume": {
                        "description": "Amount of asset volume",
                        "type": "number"
                    },
                    "volume7d": {
                        "description": "Asset volume for the last 7 days",
                        "type": "number"
                    }
                }
            },
            "AssetMeta": {
                "description": "Asset metadata",
                "type": "object",
                "properties": {
                    "asset": {
                        "description": "Asset identifier",
                        "$ref": "#/components/schemas/Asset"
                    },
                    "domain": {
                        "description": "Fully-qualified domain name",
                        "type": "string"
                    },
                    "name": {
                        "description": "Asset name",
                        "$ref": "#/components/schemas/Asset"
                    },
                    "toml_info": {
                        "description": "Asset information from stellar.toml file",
                        "type": "object"
                    }
                }
            },
            "AssetRatingStat": {
                "description": "Asset rating statistics",
                "type": "object",
                "properties": {
                    "age": {
                        "type": "integer"
                    },
                    "trages": {
                        "type": "integer"
                    },
                    "payments": {
                        "type": "integer"
                    },
                    "trustlines": {
                        "type": "integer"
                    },
                    "volume7d": {
                        "type": "integer"
                    },
                    "interop": {
                        "type": "integer"
                    },
                    "liqidity": {
                        "type": "integer"
                    },
                    "average": {
                        "type": "integer"
                    }
                }
            },
            "AssetRating": {
                "description": "Asset rating info",
                "type": "object",
                "properties": {
                    "asset": {
                        "$ref": "#/components/schemas/Asset"
                    },
                    "rating": {
                        "$ref": "#/components/schemas/AssetRatingStat"
                    }
                }
            },
            "AssetHolder": {
                "description": "Asset holder description",
                "type": "object",
                "properties": {
                    "account": {
                        "description": "Account address",
                        "$ref": "#/components/schemas/AccountAddress"
                    },
                    "balance": {
                        "description": "Asset balance in stroops",
                        "type": "string"
                    },
                    "paging_token": {
                        "description": "Paging token",
                        "type": "string"
                    }
                }
            },
            "DirectoryEntry": {
                "description": "Directory entry info",
                "type": "object",
                "properties": {
                    "address": {
                        "description": "Account address",
                        "$ref": "#/components/schemas/AccountAddress"
                    },
                    "paging_token": {
                        "description": "Cursor value for results paging",
                        "$ref": "#/components/schemas/AccountAddress"
                    },
                    "name": {
                        "description": "Entry friendly name",
                        "type": "string"
                    },
                    "tags": {
                        "description": "Entry friendly name",
                        "$ref": "#/components/schemas/Tags"
                    },
                    "domain": {
                        "description": "Domain associated with entry if any",
                        "type": "string"
                    }
                },
                "required": [
                    "address",
                    "paging_token",
                    "name",
                    "tags"
                ]
            },
            "DirectoryTagDescription": {
                "description": "Directory tag descriptor",
                "required": [
                    "name",
                    "description"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "description": "Tag name",
                        "type": "string",
                        "example": "exchange"
                    },
                    "description": {
                        "description": "User-friendly tag description",
                        "type": "string",
                        "example": "Centralized exchange account"
                    }
                }
            },
            "AssetListInfo": {
                "description": "General asset info",
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "issuer": {
                        "$ref": "#/components/schemas/AccountAddress"
                    },
                    "contract": {
                        "$ref": "#/components/schemas/ContractAddress"
                    },
                    "name": {
                        "type": "string"
                    },
                    "org": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "icon": {
                        "type": "string"
                    },
                    "decimals": {
                        "type": "integer"
                    }
                }
            },
            "ContractDataDurability": {
                "description": "Type of durability",
                "type": "string",
                "enum": [
                    "instance",
                    "persistent",
                    "temporary"
                ],
                "example": "instance"
            },
            "ContractDataKey": {
                "description": "A base64 encoded string of the raw Result XDR struct",
                "type": "string",
                "example": "AAAAFA=="
            },
            "ContractDataInfo": {
                "description": "Contract data list for a given account/contract",
                "type": "object",
                "properties": {
                    "durability": {
                        "type": "string"
                    },
                    "expired": {
                        "type": "boolean"
                    },
                    "key": {
                        "$ref": "#/components/schemas/ContractDataKey"
                    },
                    "ttl": {
                        "$ref": "#/components/schemas/Timestamp"
                    },
                    "updated": {
                        "$ref": "#/components/schemas/Timestamp"
                    },
                    "value": {
                        "description": "A base64 encoded string of the raw Result XDR struct",
                        "type": "string"
                    },
                    "paging_token": {
                        "description": "Paging token",
                        "type": "string"
                    }
                }
            },
            "ContractList": {
                "description": "Contract list",
                "type": "object",
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/ContractAddress"
                    },
                    "contract": {
                        "$ref": "#/components/schemas/ContractAddress"
                    },
                    "created": {
                        "$ref": "#/components/schemas/Timestamp"
                    },
                    "creator": {
                        "$ref": "#/components/schemas/AccountAddress"
                    },
                    "paging_token": {
                        "type": "string",
                        "example": "1073741825"
                    },
                    "payments": {
                        "type": "integer",
                        "description": "Number of payments (using SAC contracts) executed with this contract",
                        "example": 0
                    },
                    "trades": {
                        "type": "integer",
                        "description": "Number of trades (using SAC contracts) executed with this contract",
                        "example": 0
                    },
                    "wasm": {
                        "description": "WASM hash",
                        "$ref": "#/components/schemas/Hash"
                    }
                }
            },
            "ContractInfo": {
                "description": "ED25519-encoded contract address",
                "type": "object",
                "properties": {
                    "contract": {
                        "$ref": "#/components/schemas/ContractAddress"
                    },
                    "created": {
                        "$ref": "#/components/schemas/Timestamp"
                    },
                    "creator": {
                        "$ref": "#/components/schemas/AccountAddress"
                    },
                    "payments": {
                        "type": "integer",
                        "description": "Number of payments (using SAC contracts) executed with this contract",
                        "example": 312
                    },
                    "wasm": {
                        "$ref": "#/components/schemas/Hash",
                        "description": "Contract WASM hash (for WASM-based contracts)"
                    },
                    "asset": {
                        "$ref": "#/components/schemas/Asset",
                        "description": "Asset descriptor (for contracts created from classic assets)"
                    },
                    "code": {
                        "type": "string",
                        "description": "Asset issuer (for contracts created from classic assets)",
                        "example": "USD"
                    },
                    "issuer": {
                        "$ref": "#/components/schemas/AccountAddress",
                        "description": "Asset issuer (for contracts created from classic assets or from issuer account)"
                    },
                    "salt": {
                        "$ref": "#/components/schemas/Hash",
                        "description": "Token issuer salt (for contracts created from issuer account)"
                    },
                    "storage_entries": {
                        "type": "integer",
                        "description": "Number of storage entries associated with the contract",
                        "example": 11
                    },
                    "versions": {
                        "type": "integer",
                        "description": "Number of contract WASM updates (for WASM contracts that have been upgraded at least once)",
                        "example": 3
                    },
                    "validation": {
                        "$ref": "#/components/schemas/ContractValidationStatus",
                        "description": "Validation information (for contracts with turned on validation workflow)"
                    }
                },
                "required": [
                    "contract",
                    "created",
                    "creator"
                ]
            },
            "ContractValidationStatus": {
                "description": "ED25519-encoded contract address",
                "type": "object",
                "properties": {
                    "status": {
                        "description": "Validation status",
                        "type": "string",
                        "enum": [
                            "verified",
                            "unverified"
                        ]
                    },
                    "ts": {
                        "description": "Validation timestamp",
                        "$ref": "#/components/schemas/Timestamp"
                    },
                    "repository": {
                        "type": "string",
                        "description": "GitHub repository URL",
                        "example": "https://github.com/reflector-network/reflector-contract"
                    },
                    "commit": {
                        "type": "string",
                        "description": "Commit hash",
                        "example": "391f37e39a849ddf7543a5d7f1488e055811cb68"
                    }
                }
            },
            "ContractVersion": {
                "description": "Contract WASM updates history entry",
                "type": "object",
                "properties": {
                    "wasm": {
                        "description": "WASM hash",
                        "$ref": "#/components/schemas/Hash"
                    },
                    "operation": {
                        "description": "ID of the operation that updated contract hash",
                        "type": "string",
                        "example": "860750015589427"
                    },
                    "ts": {
                        "description": "Validation timestamp",
                        "$ref": "#/components/schemas/Timestamp"
                    },
                    "paging_token": {
                        "type": "string",
                        "description": "Token for API paging",
                        "example": "d460a0e8b702bf"
                    }
                }
            },
            "ContractBalance": {
                "description": "Balance of tokens transferred to the contract address",
                "type": "object",
                "properties": {
                    "asset": {
                        "description": "Asset identifier",
                        "$ref": "#/components/schemas/Asset"
                    },
                    "balance": {
                        "description": "Balance amount",
                        "type": "string",
                        "example": "7272238951539"
                    },
                    "flags": {
                        "description": "Authorization flags",
                        "type": "integer",
                        "example": 1
                    },
                    "created": {
                        "description": "Balance creation timestamp",
                        "$ref": "#/components/schemas/Timestamp"
                    },
                    "value": {
                        "description": "Estimated balance value in USD (if available)",
                        "type": "string",
                        "example": "887420889608"
                    }
                }
            },
            "ContractInvocationStats": {
                "description": "Invocation statistics for contract",
                "type": "object",
                "properties": {
                    "avg_emit_event": {
                        "type": "integer",
                        "example": 0
                    },
                    "avg_invoke_time": {
                        "type": "integer",
                        "example": 598
                    },
                    "avg_ledger_read_byte": {
                        "type": "integer",
                        "example": 24304
                    },
                    "avg_ledger_write_byte": {
                        "type": "integer",
                        "example": 24304
                    },
                    "avg_mem_byte": {
                        "type": "integer",
                        "example": 2787288
                    },
                    "avg_nonrefundable_fee": {
                        "type": "integer",
                        "example": 397546
                    },
                    "avg_read_entry": {
                        "type": "integer",
                        "example": 12.2
                    },
                    "avg_refundable_fee": {
                        "type": "integer",
                        "example": 150063
                    },
                    "avg_rent_fee": {
                        "type": "integer",
                        "example": 150023
                    },
                    "avg_write_entry": {
                        "type": "integer",
                        "example": 11.2
                    },
                    "total_invocations": {
                        "type": "integer",
                        "example": 125
                    },
                    "total_subinvocations": {
                        "type": "integer",
                        "example": 0
                    },
                    "ts": {
                        "$ref": "#/components/schemas/Timestamp"
                    }
                }
            },
            "Metadata": {
                "description": "Metadata for a given domain",
                "type": "object",
                "properties": {
                    "CURRENCIES": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string"
                                },
                                "conditions": {
                                    "type": "string"
                                },
                                "desc": {
                                    "type": "string"
                                },
                                "display_decimals": {
                                    "type": "number"
                                },
                                "image": {
                                    "type": "string"
                                },
                                "is_asset_anchored": {
                                    "type": "boolean"
                                },
                                "issuer": {
                                    "$ref": "#/components/schemas/AccountAddress"
                                },
                                "name": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "DOCUMENTATION": {
                        "type": "object",
                        "properties": {
                            "ORG_DBA": {
                                "type": "string"
                            },
                            "ORG_DESCRIPTION": {
                                "type": "string"
                            },
                            "ORG_LOGO": {
                                "type": "string"
                            },
                            "ORG_NAME": {
                                "type": "string"
                            },
                            "ORG_OFFICIAL_EMAIL": {
                                "type": "string"
                            },
                            "ORG_SUPPORT_EMAIL": {
                                "type": "string"
                            },
                            "ORG_TWITTER": {
                                "type": "string"
                            },
                            "ORG_URL": {
                                "type": "string"
                            }
                        }
                    },
                    "NETWORK_PASSPHRASE": {
                        "type": "string"
                    },
                    "VERSION": {
                        "type": "string"
                    }
                }
            },
            "LedgerTimestampSequenceInfo": {
                "description": "Ledger sequence-timestamp pair",
                "type": "object",
                "properties": {
                    "sequence": {
                        "description": "Ledger sequence",
                        "type": "integer"
                    },
                    "timestamp": {
                        "description": "Ledger UNIX timestamp",
                        "$ref": "#/components/schemas/Timestamp"
                    },
                    "date": {
                        "description": "Ledger date",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "example": {
                    "sequence": 42431435,
                    "timestamp": 1661781078,
                    "date": "2022-08-29T13:51:18.000Z"
                }
            },
            "24HLedgerStats": {
                "description": "Ledger statistics",
                "type": "object",
                "properties": {
                    "accounts": {
                        "description": "Number of accounts",
                        "type": "integer"
                    },
                    "avg_ledger_time": {
                        "description": "Average ledger time",
                        "type": "number"
                    },
                    "fee_pool": {
                        "description": "Number of lumens that have been paid in fees",
                        "type": "string"
                    },
                    "ledgers": {
                        "description": "Number of ledgers at a given point in time",
                        "type": "integer"
                    },
                    "operations": {
                        "description": "Number of processed operations at a given point in time",
                        "type": "integer"
                    },
                    "payments": {
                        "description": "Number of payments at a given point in time",
                        "type": "integer"
                    },
                    "reserve": {
                        "description": "Total number of inactive lumens (burned, locked in escrow, held on SDF operational accounts, etc.)",
                        "type": "string"
                    },
                    "total_xlm": {
                        "description": "Total number of lumens",
                        "type": "string"
                    },
                    "trades": {
                        "description": "Number of DEX trades at a given point in time",
                        "type": "integer"
                    },
                    "trustlines": {
                        "description": "Number of trustlines at a given point in time",
                        "type": "integer"
                    },
                    "funded_trustlines": {
                        "description": "Number of funded trustlines at a given point in time",
                        "type": "integer"
                    },
                    "volume": {
                        "description": "DEX value at a given point in time",
                        "type": "string"
                    },
                    "new_assets": {
                        "description": "Number of new assets added to the Stellar universe at a given point in time",
                        "type": "integer"
                    },
                    "transactions": {
                        "description": "Number of transactions at a given point in time",
                        "type": "integer"
                    },
                    "failed_transactions": {
                        "description": "Number of failed transactions at a given point in time",
                        "type": "integer"
                    },
                    "finalized": {
                        "type": "boolean"
                    },
                    "ts": {
                        "description": "Ledger UNIX timestamp",
                        "$ref": "#/components/schemas/Timestamp"
                    }
                },
                "example": {
                    "accounts": 9295636,
                    "avg_ledger_time": 5.8,
                    "fee_pool": "53651106620088",
                    "ledgers": 8870,
                    "operations": 3459850,
                    "payments": 923346,
                    "reserve": "742108883384151032",
                    "total_xlm": "1054439020873472865",
                    "trades": 367324,
                    "trustlines": 29304567,
                    "funded_trustlines": 21964858,
                    "volume": "67442715721412",
                    "new_assets": 6,
                    "transactions": 1403952,
                    "failed_transactions": 766734,
                    "finalized": true,
                    "ts": 1742774400
                }
            },
            "ProtocolHistory": {
                "description": "Protocol upgrades history",
                "type": "object",
                "properties": {
                    "sequence": {
                        "description": "Ledger sequence",
                        "type": "integer"
                    },
                    "version": {
                        "description": "Protocol version",
                        "type": "integer"
                    },
                    "ts": {
                        "description": "Ledger UNIX timestamp",
                        "$ref": "#/components/schemas/Timestamp"
                    },
                    "max_tx_set_size": {
                        "description": "Maximum transaction set size",
                        "type": "integer"
                    },
                    "base_fee": {
                        "description": "Base fee amount",
                        "type": "integer"
                    },
                    "base_reserve": {
                        "description": "Base reserve amount",
                        "type": "integer"
                    }
                },
                "example": {
                    "sequence": 30191538,
                    "version": 13,
                    "ts": 1592496009,
                    "max_tx_set_size": 1000,
                    "base_fee": 100,
                    "base_reserve": 5000000
                }
            },
            "LiquidityPoolInfo": {
                "description": "Liquidity pool info",
                "type": "object",
                "properties": {
                    "accounts": {
                        "description": "Number of accounts",
                        "type": "number"
                    },
                    "assets": {
                        "description": "Pool asset info list",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PoolAssetInfo"
                        }
                    },
                    "earned_fees": {
                        "description": "Earned fee by assets",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PoolAssetStat"
                        }
                    },
                    "earned_value": {
                        "description": "Earned value by periods",
                        "$ref": "#/components/schemas/VolumeValue"
                    },
                    "fee": {
                        "description": "Liquidity pool fee",
                        "type": "number"
                    },
                    "id": {
                        "description": "Liquidity pool identifier",
                        "type": "string"
                    },
                    "shares": {
                        "description": "Number of liquidity pool shares",
                        "type": "string"
                    },
                    "total_value_locked": {
                        "description": "Total value locked",
                        "type": "number"
                    },
                    "trades": {
                        "description": "Number of trades in pool",
                        "type": "number"
                    },
                    "type": {
                        "description": "Liquidity pool type",
                        "type": "number"
                    },
                    "volume": {
                        "description": "Liquidity pool value by assets",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AssetStat"
                        }
                    },
                    "volume_value": {
                        "$ref": "#/components/schemas/VolumeValue"
                    },
                    "created": {
                        "description": "Valid creation timestamp",
                        "$ref": "#/components/schemas/Timestamp"
                    },
                    "updated": {
                        "description": "Valid update timestamp",
                        "$ref": "#/components/schemas/Timestamp"
                    },
                    "paging_token": {
                        "description": "Paging token",
                        "type": "string"
                    }
                }
            },
            "LiquidityPoolStat": {
                "description": "Liquidity pool statistics",
                "type": "object",
                "properties": {
                    "shares": {
                        "description": "Number of liquidity pool shares",
                        "type": "string"
                    },
                    "accounts": {
                        "description": "Number of accounts",
                        "type": "number"
                    },
                    "trades": {
                        "description": "Number of trades in pool",
                        "type": "number"
                    },
                    "reserves": {
                        "description": "Liquidity pool reserves",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AssetAmount"
                        }
                    },
                    "earned_fees": {
                        "description": "Earned fee by assets",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AssetAmount"
                        }
                    },
                    "volume": {
                        "description": "Liquidity pool value by assets",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AssetAmount"
                        }
                    },
                    "total_value_locked": {
                        "description": "Total value locked",
                        "type": "number"
                    },
                    "earned_fees_value": {
                        "description": "Earned fees value",
                        "type": "number"
                    },
                    "volume_value": {
                        "description": "Pool volume value",
                        "type": "number"
                    },
                    "ts": {
                        "description": "Valid timestamp",
                        "$ref": "#/components/schemas/Timestamp"
                    },
                    "paging_token": {
                        "description": "Paging token",
                        "type": "number"
                    }
                }
            },
            "LiquidityPoolTrades": {
                "description": "Liquidity pool trade history",
                "type": "object",
                "properties": {
                    "bought_amount": {
                        "description": "Amount of bought trading asset",
                        "type": "string"
                    },
                    "bought_asset": {
                        "description": "Bought trading asset",
                        "$ref": "#/components/schemas/Asset"
                    },
                    "buyer": {
                        "description": "Buyer's account address",
                        "$ref": "#/components/schemas/AccountAddress"
                    },
                    "id": {
                        "description": "Trade unique id",
                        "type": "string"
                    },
                    "operation": {
                        "description": "Operation unique id",
                        "type": "string"
                    },
                    "pool": {
                        "description": "Liquidity pool unique id",
                        "type": "string"
                    },
                    "price": {
                        "description": "Price",
                        "type": "string"
                    },
                    "sold_amount": {
                        "description": "Amount of sold trading asset",
                        "type": "string"
                    },
                    "sold_asset": {
                        "description": "Sold trading asset",
                        "type": "string"
                    },
                    "ts": {
                        "description": "Timestamp of the first recorder operation with asset",
                        "$ref": "#/components/schemas/Timestamp"
                    },
                    "paging_token": {
                        "description": "Paging token",
                        "type": "number"
                    }
                }
            },
            "PoolAssetInfo": {
                "description": "Asset info",
                "type": "object",
                "properties": {
                    "amount": {
                        "description": "Quantitative share in the pool",
                        "type": "number"
                    },
                    "asset": {
                        "description": "Asset identifier",
                        "$ref": "#/components/schemas/Asset"
                    },
                    "domain": {
                        "description": "Fully-qualified domain name",
                        "type": "string"
                    },
                    "name": {
                        "description": "Asset name",
                        "$ref": "#/components/schemas/Asset"
                    },
                    "toml_info": {
                        "description": "Asset information from stellar.toml file",
                        "type": "object"
                    }
                }
            },
            "AssetAmount": {
                "type": "object",
                "properties": {
                    "asset": {
                        "$ref": "#/components/schemas/Asset"
                    },
                    "amount": {
                        "type": "string"
                    }
                }
            },
            "PoolAssetStat": {
                "description": "Asset statistics",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/VolumeValue"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "all_time": {
                                "type": "integer"
                            },
                            "asset": {
                                "$ref": "#/components/schemas/Asset"
                            }
                        }
                    }
                ]
            },
            "VolumeValue": {
                "description": "Pool volume value by periods",
                "type": "object",
                "properties": {
                    "1d": {
                        "type": "integer"
                    },
                    "7d": {
                        "type": "integer"
                    }
                }
            },
            "MarketInfo": {
                "description": "Market information",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/MarketStat"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "adjustedVolume": {
                                "description": "Adjusted volume",
                                "type": "number"
                            },
                            "id": {
                                "description": "Marker unique id",
                                "type": "string"
                            },
                            "price": {
                                "description": "Price",
                                "type": "string"
                            },
                            "price7d": {
                                "description": "7-day price history",
                                "type": "array"
                            },
                            "paging_token": {
                                "description": "Paging token",
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "MarketStat": {
                "description": "Market statistics",
                "type": "object",
                "properties": {
                    "assets": {
                        "description": "Asset pair",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Asset"
                        }
                    },
                    "baseVolume7d": {
                        "description": "Base asset volume for 7 days",
                        "type": "number"
                    },
                    "baseVolume24h": {
                        "description": "Base asset volume for last 24 hours",
                        "type": "number"
                    },
                    "counterVolume7d": {
                        "description": "Counter asset volume for 7 days",
                        "type": "number"
                    },
                    "counterVolume24h": {
                        "description": "Counter asset volume for last 24 hours",
                        "type": "number"
                    },
                    "spread": {
                        "description": "Dynamic price spread",
                        "type": "number"
                    },
                    "trades": {
                        "description": "Total number of trades",
                        "type": "number"
                    },
                    "trades24h": {
                        "description": "Total number of trades for last 24 hours",
                        "type": "number"
                    }
                }
            },
            "OfferTrade": {
                "description": "Offer trade info",
                "type": "object",
                "properties": {
                    "bought_amount": {
                        "description": "Amount of bought trading asset",
                        "type": "string"
                    },
                    "bought_asset": {
                        "description": "Bought trading asset",
                        "$ref": "#/components/schemas/Asset"
                    },
                    "buyer": {
                        "description": "Buyer's account address",
                        "$ref": "#/components/schemas/AccountAddress"
                    },
                    "id": {
                        "description": "Trade unique id",
                        "type": "string"
                    },
                    "offer": {
                        "description": "Unique offer id",
                        "type": "string"
                    },
                    "operation": {
                        "description": "Operation unique id",
                        "type": "string"
                    },
                    "price": {
                        "description": "Offer price",
                        "type": "string"
                    },
                    "seller": {
                        "description": "Seller's account address",
                        "$ref": "#/components/schemas/AccountAddress"
                    },
                    "sold_amount": {
                        "description": "Amount of sold trading asset",
                        "type": "string"
                    },
                    "sold_asset": {
                        "description": "Sold trading asset",
                        "type": "string"
                    },
                    "ts": {
                        "description": "Timestamp of the first recorder operation with asset",
                        "$ref": "#/components/schemas/Timestamp"
                    },
                    "paging_token": {
                        "description": "Paging token",
                        "type": "string"
                    }
                }
            },
            "RelationInfo": {
                "description": "Relation information between accounts",
                "type": "object",
                "properties": {
                    "accounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AccountAddress"
                        }
                    },
                    "id": {
                        "description": "Relation unique id",
                        "type": "string"
                    },
                    "type": {
                        "type": "number"
                    },
                    "volumes": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "asset": {
                                    "$ref": "#/components/schemas/Asset"
                                },
                                "amount": {
                                    "type": "number"
                                }
                            }
                        }
                    },
                    "transfers": {
                        "description": "Transfers between accounts",
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    },
                    "trades": {
                        "description": "Number of DEX trades for a given account",
                        "type": "number"
                    },
                    "created": {
                        "$ref": "#/components/schemas/Timestamp"
                    },
                    "updated": {
                        "$ref": "#/components/schemas/Timestamp"
                    },
                    "paging_token": {
                        "description": "Paging token",
                        "type": "string"
                    }
                }
            },
            "TypeOp": {
                "description": "Stellar",
                "type": "string | number",
                "enum": [
                    "payments",
                    "trustlines",
                    "dex",
                    "settings",
                    "soroban",
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    20,
                    21,
                    22,
                    23,
                    24,
                    25,
                    26
                ],
                "example": [
                    "dex"
                ]
            },
            "TxInfo": {
                "description": "Protocol upgrades history",
                "type": "object",
                "properties": {
                    "id": {
                        "description": "A unique identifier for this transaction",
                        "type": "string"
                    },
                    "hash": {
                        "description": "A hex-encoded SHA-256 hash of this transaction’s XDR-encoded form",
                        "type": "string"
                    },
                    "ledger": {
                        "description": "The sequence number of the ledger that this transaction was included in",
                        "type": "integer"
                    },
                    "ts": {
                        "description": "Ledger UNIX timestamp",
                        "$ref": "#/components/schemas/Timestamp"
                    },
                    "protocol": {
                        "description": "Protocol version",
                        "type": "integer"
                    },
                    "body": {
                        "description": "A base64 encoded string of the raw Transaction Envelope XDR struct for this transaction",
                        "type": "string"
                    },
                    "meta": {
                        "description": "A base64 encoded string of the raw Transaction Meta XDR struct for this transaction",
                        "type": "string"
                    },
                    "result": {
                        "description": "A base64 encoded string of the raw Transaction Result XDR struct for this transaction",
                        "type": "string"
                    }
                }
            }
        },
        "parameters": {
            "account": {
                "name": "account",
                "description": "Account id",
                "in": "path",
                "schema": {
                    "$ref": "#/components/schemas/AccountAddress"
                },
                "required": true
            },
            "contract": {
                "name": "contract",
                "description": "Contract id",
                "in": "path",
                "schema": {
                    "$ref": "#/components/schemas/ContractAddress"
                },
                "required": true
            },
            "address": {
                "name": "address",
                "description": "The address of the account to check",
                "in": "path",
                "schema": {
                    "$ref": "#/components/schemas/AccountAddress"
                },
                "required": true,
                "example": "GDPQNABQDNYXQOFOUVH3XHNC7QTAXJPVU5Q47PSARLEEUWGIJKSP7BZU"
            },
            "address-array": {
                "name": "address",
                "originalName": "address-array",
                "description": "Applies a filter by the addresses list (up to 50 per request)",
                "in": "query",
                "schema": {
                    "type": "array",
                    "minItems": 1,
                    "maxItems": 50,
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/components/schemas/AccountAddress"
                    }
                },
                "example": [
                    "GDPQNABQDNYXQOFOUVH3XHNC7QTAXJPVU5Q47PSARLEEUWGIJKSP7BZU"
                ]
            },
            "parent": {
                "name": "parent",
                "description": "Account/Contract identifier",
                "in": "path",
                "schema": {
                    "oneOf": [
                        {
                            "$ref": "#/components/schemas/ContractAddress"
                        },
                        {
                            "$ref": "#/components/schemas/AccountAddress"
                        }
                    ]
                },
                "required": true
            },
            "tag": {
                "name": "tag",
                "description": "Applies a filter by tags",
                "in": "query",
                "schema": {
                    "type": "array",
                    "minItems": 1,
                    "maxItems": 10,
                    "uniqueItems": true,
                    "items": {
                        "type": "string",
                        "enum": [
                            "exchange",
                            "anchor",
                            "issuer",
                            "wallet",
                            "custodian",
                            "malicious",
                            "unsafe",
                            "personal",
                            "sdf",
                            "memo-required",
                            "airdrop",
                            "obsolete-inflation-pool"
                        ]
                    }
                },
                "example": [
                    "custodian",
                    "anchor"
                ]
            },
            "asset": {
                "name": "asset",
                "description": "An asset in the format {CODE}-{ISSUER} (or \"XLM\" for Stellar lumens)",
                "in": "path",
                "schema": {
                    "$ref": "#/components/schemas/Asset"
                },
                "required": true
            },
            "asset-query": {
                "name": "asset",
                "originalName": "asset-query",
                "description": "An asset in the format {CODE}-{ISSUER} (or \"XLM\" for Stellar lumens)",
                "in": "query",
                "schema": {
                    "$ref": "#/components/schemas/Asset"
                },
                "required": true
            },
            "asset-array": {
                "name": "asset",
                "originalName": "asset-array",
                "description": "Applies a filter by the asset list (up to 50 per request)",
                "in": "query",
                "schema": {
                    "type": "array",
                    "minItems": 1,
                    "maxItems": 50,
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/components/schemas/Asset"
                    }
                },
                "example": [
                    "USDC-GA5ZSEJYB37JRC5AVCIA5MOP4RHTM335X2KGX3IHOJAPP5RE34K4KZVN-1"
                ]
            },
            "selling": {
                "name": "selling",
                "description": "An asset in the format {CODE}-{ISSUER} (or \"XLM\" for Stellar lumens)",
                "in": "path",
                "schema": {
                    "$ref": "#/components/schemas/Asset"
                },
                "required": true
            },
            "network": {
                "name": "network",
                "description": "Stellar network",
                "in": "path",
                "schema": {
                    "$ref": "#/components/schemas/Network"
                },
                "required": true
            },
            "search": {
                "name": "search",
                "description": "Arbitrary search term (asset code, issuer, associated home domain, or information from asset TOML metadata)",
                "in": "query",
                "schema": {
                    "type": "string",
                    "minLength": 5
                }
            },
            "order": {
                "name": "order",
                "description": "Results sorting order",
                "in": "query",
                "schema": {
                    "$ref": "#/components/schemas/ResultsSortOrder"
                }
            },
            "limit": {
                "name": "limit",
                "description": "Results data page size",
                "in": "query",
                "schema": {
                    "$ref": "#/components/schemas/ResultsLimit"
                }
            },
            "limit-huge": {
                "name": "limit",
                "originalName": "limit-huge",
                "description": "Results data page size",
                "in": "query",
                "schema": {
                    "default": 1000,
                    "$ref": "#/components/schemas/HugeResultsLimit"
                }
            },
            "cursor": {
                "name": "cursor",
                "description": "A position from which to continue search (refers to the `paging_token` value from a results set)",
                "in": "query",
                "schema": {
                    "type": "string"
                }
            },
            "domain": {
                "name": "domain",
                "description": "Domain to verify (case-insensitive)",
                "in": "query",
                "schema": {
                    "type": "string"
                },
                "required": true
            },
            "domain-path": {
                "name": "domain",
                "originalName": "domain-path",
                "description": "Domain to verify (case-insensitive)",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string",
                    "example": "stellar.org.am"
                }
            },
            "poolId": {
                "name": "poolId",
                "description": "Liquidity pool identifier",
                "in": "path",
                "schema": {
                    "$ref": "#/components/schemas/Hash"
                },
                "example": "ce05eb743321ec8571cda411b6932cd421eabbb7f4d622ec884f5dfa6656a500",
                "required": true
            },
            "offerId": {
                "name": "offerId",
                "description": "Unique offer id",
                "in": "path",
                "schema": {
                    "type": "integer",
                    "minimum": 0
                },
                "required": true,
                "example": 1734248586
            },
            "sequence": {
                "name": "sequence",
                "description": "Target sequence",
                "in": "path",
                "schema": {
                    "type": "integer",
                    "minimum": 1
                },
                "required": true,
                "example": 56309777
            },
            "sequence-query": {
                "name": "sequence",
                "originalName": "sequence-query",
                "description": "Ledger sequence",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "integer",
                    "minimum": 1
                },
                "example": 32590807
            },
            "from": {
                "name": "from",
                "description": "Results data from a given timestamp",
                "in": "query",
                "schema": {
                    "$ref": "#/components/schemas/Timestamp"
                }
            },
            "to": {
                "name": "to",
                "description": "Results data to a given timestamp",
                "in": "query",
                "schema": {
                    "$ref": "#/components/schemas/Timestamp"
                }
            }
        }
    },
    "tags": [
        {
            "name": "Directory Info API"
        },
        {
            "name": "Asset Info API"
        },
        {
            "name": "Accounts"
        },
        {
            "name": "Contract data API"
        },
        {
            "name": "Asset list"
        },
        {
            "name": "Contract API"
        },
        {
            "name": "Domain meta API"
        },
        {
            "name": "Ledger Info API"
        },
        {
            "name": "Liquidity Pool API"
        },
        {
            "name": "Market Info API"
        },
        {
            "name": "Offer Info API"
        },
        {
            "name": "Price API"
        },
        {
            "name": "Relation Info API"
        },
        {
            "name": "Contract statistics"
        },
        {
            "name": "Tx API"
        }
    ]
}